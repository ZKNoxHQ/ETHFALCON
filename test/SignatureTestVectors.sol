// code generated using pythonref/sig_to_solidity.py.
pragma solidity ^0.8.13;

import {Test} from "forge-std/Test.sol";
import {Falcon} from "../src/ETHFalcon_Recursive.sol";

contract SignatureTestVectors is Test {
    int constant q = 12289;
    Falcon falcon;

    function setUp() public {
        falcon = new Falcon();
    }
    function testVector0() public view {
        // public key
        // prettier-ignore
        uint[512] memory tmp_pk = [uint(1902), 12040,8072,9952,6562,5247,8297,4170,5108,3383,5120,6557,2339,9615,9782,6454,4287,10630,601,6689,7717,2794,8544,4215,10919,184,7705,1092,8841,10082,10590,8627,8399,5775,8987,10305,8169,3914,5965,1864,6089,14,4953,7981,9763,11992,5746,10666,12246,2823,10214,696,5664,8243,11231,4564,746,8830,4493,5865,7793,11190,1588,3811,8443,9654,6122,12247,8282,7209,375,24,7995,11070,10546,2666,2259,6975,3378,1588,7181,7644,9596,3015,8072,11834,2863,1813,2827,2592,10538,10660,12105,7026,4328,2900,9138,2395,5310,10686,11117,9610,9775,2797,9416,9173,968,2796,7155,3726,8870,5852,4342,9903,5095,7278,7282,10429,5088,405,9119,6969,297,9728,1983,2598,10258,8349,10577,11561,11936,10481,8705,8516,9776,12081,8092,11946,2054,11019,6320,9785,8480,6831,5269,6641,3136,2064,8471,9099,10138,4506,915,4684,5994,11034,3120,9368,5447,422,11483,10934,4879,2269,5589,8646,5976,7886,7986,4220,1533,9842,8500,7429,6515,1510,3882,10129,4448,1365,9821,4632,2457,4952,5970,7442,740,7263,9202,7639,7479,1204,4496,11048,1479,9013,11721,2056,8285,5417,5373,4355,7876,9993,8428,12286,3094,69,4863,9793,1956,7931,11232,6528,553,7766,6172,9315,8405,2142,10163,11010,6541,6549,3830,9167,8809,3443,11609,2316,1473,7452,3738,1810,9635,9614,10165,10151,3574,6539,8465,7384,8693,5511,11247,7126,5814,10001,10090,8442,5596,5098,185,5292,3458,521,6567,7551,1179,4631,7908,7800,2587,8209,6051,11738,8556,8971,5019,6907,6947,7229,2103,657,5424,2820,5639,9621,9398,10055,7679,7604,1610,11221,12040,10404,6209,5119,7634,519,6979,1643,11240,10637,3787,300,10073,6752,6414,242,7668,6495,7468,5757,2478,2430,2638,4756,1350,8591,6055,2097,5179,1234,7441,498,5616,7261,2247,7037,9870,3855,7898,7623,3129,5501,9763,2467,3540,75,2349,11676,12275,2034,11354,961,11384,4328,8634,1660,11808,219,11093,10707,7650,4447,4392,2988,5336,9308,11502,9806,3026,8229,11877,126,5462,5678,8359,45,7834,1152,9903,3423,4867,4057,5693,3714,7539,7769,11812,5909,4129,2345,780,5526,5552,5400,10364,12187,3018,5025,5503,11528,3865,7616,11551,8222,6506,10591,5663,6530,12176,1692,1295,10816,8598,8647,998,144,10916,11290,897,6266,3871,10357,2082,1580,528,10134,1321,3492,7977,5371,3583,10125,6458,1076,1101,10003,5215,4682,10038,2865,1016,3634,1792,9744,3806,9377,7821,10869,2322,9114,3147,1963,4804,5342,5845,4271,7779,1972,10555,1984,1614,1329,6078,3411,5300,4726,1630,3074,3538,10930,10699,11190,865,11244,9161,5330,2676,2056,8818,2686,1766,10359,8236,9335,12011,9483,11480,11877,2543,3485,8039,8925,5612,11395,5087,12196,10805,3291,8996,10504,10485,9149,3555,10294,2283,2435,5673,6607,10614,5372,4665,10529,7639,11322,6744,8844,2559,10204,7251,8177,618,5649,4422,7234,6956,6906,3118,10852];
        uint[] memory pk = new uint[](512);
        for (uint i = 0; i < 512; i++) {
            pk[i] = tmp_pk[i];
        }
        // signature s1
        // prettier-ignore
        int[512] memory tmp_s1 = [int(113), -159,-172,-253,135,213,101,54,-26,99,-166,-2,-186,114,2,-102,32,53,48,157,-14,171,-133,-83,-496,-136,86,58,-402,-115,-231,-272,-306,65,26,374,141,-61,-325,-170,131,-65,370,230,148,97,-22,-156,65,-204,-131,69,-155,-69,29,113,-86,34,271,-178,-312,189,93,-111,-110,-135,159,-52,-191,22,-173,-59,5,-6,38,-96,-124,-124,182,6,64,-286,-135,34,-141,-225,-148,206,-187,-222,-57,69,16,132,-143,98,312,343,-146,22,-71,-226,-11,-48,-287,-38,145,117,44,-175,232,6,-6,309,-249,-63,55,-274,104,-76,-91,155,-234,-101,104,18,175,-207,-59,-40,-5,266,295,-128,-123,17,72,140,226,194,-36,248,-208,-346,8,254,208,-23,-91,100,21,90,88,-50,-264,168,263,-103,-34,-178,40,2,-50,301,-40,-129,101,-130,-37,62,61,-291,99,-276,188,245,-200,111,-354,-52,-133,133,104,-105,-157,-23,-10,-151,-49,-84,-58,150,134,148,-140,-121,-156,78,-11,52,-185,-29,179,15,-233,79,-292,-119,-206,-206,67,42,148,70,19,-179,-174,-95,3,-56,97,-92,-25,88,131,-190,-84,-192,-167,209,276,-43,-94,-182,-48,95,-2,88,176,33,-144,87,-250,92,-118,254,-90,-91,-307,-58,-57,231,-140,-108,86,208,-33,146,-28,243,-247,-119,147,-34,76,56,197,-4,-320,-73,-56,89,-213,-98,134,-110,-232,-123,-162,-12,227,43,-322,54,125,-167,-194,-80,-26,-17,-78,16,187,211,-74,-215,-139,124,-221,226,71,-329,-324,-1,204,165,-17,254,-25,-406,-142,149,-219,13,172,-78,-183,-217,-10,54,-231,77,76,220,4,-136,93,-233,-98,110,15,64,53,116,-11,447,-60,-36,252,93,-60,81,-23,42,25,-132,262,136,-105,52,53,312,61,-187,-60,-346,-113,17,-61,165,-80,-181,175,79,-123,-71,-83,-143,-134,53,-179,204,27,-242,7,98,7,-281,-390,-6,-157,-208,-52,288,126,88,270,82,1,-102,91,118,-217,-53,-65,-30,374,243,9,-126,7,-3,-104,218,-127,215,-55,224,276,198,-71,-265,188,75,-53,19,-50,22,140,-270,235,68,-35,-48,-191,-159,214,-146,-138,55,-133,38,-138,-276,-21,30,-239,-29,-62,161,-107,-20,184,-146,-208,-95,127,163,-274,10,-95,71,72,114,-353,208,150,-207,-44,223,-160,-243,90,197,-14,-22,-44,-280,195,35,159,-215,121,89,53,206,-35,7,89,-44,-10,34,-58,-4,-20,-220,338,42,-191,-26,11,-176,-16,99,317,-114,-259,-371,218,77,455,16,-441,-236,351,259,-27,316,157,450,-100,-126];
        Falcon.Signature memory sig;
        sig.s1 = new int256[](512);
        for (uint i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
        }
        // signature s1 inverse
        // prettier-ignore
        int[512] memory tmp_s1_inv = [int(7029), 6228,9419,376,9146,2900,6343,1664,10596,4606,10707,5502,5059,4664,3316,10870,11793,392,2006,9960,4159,7325,2635,10390,7142,845,747,3707,7504,7490,8583,12115,4546,9259,4492,12115,4147,8696,4832,5150,1911,4978,4732,7700,5019,8675,11810,2305,2386,3691,344,1261,11703,7150,4711,6356,8380,11381,4107,6264,6919,8573,3655,11873,8286,2817,4412,5970,8345,6661,8353,1156,3318,10624,5842,3163,7578,1766,1686,12162,4109,8922,2829,4148,8206,980,9668,11801,8297,3260,7314,75,11573,4674,1951,1096,585,6263,12073,4174,10683,1098,5428,4063,3809,2296,10208,7313,3529,5895,460,7772,5762,3069,8313,3218,48,2493,162,11271,8908,319,11935,9545,7132,12259,435,4638,378,2824,6403,12169,4337,2064,10701,9045,7232,8583,5058,2297,2102,4345,1675,9312,5643,8122,12266,4083,12275,5250,6304,12158,6636,3362,3839,5026,5704,7985,757,2772,3107,8939,2121,2230,10744,2458,439,11141,4947,8170,4930,9932,10051,10383,8220,2229,9030,11313,2732,79,1965,10467,3219,5324,3618,4064,10753,6490,10656,1057,9245,3185,8020,3810,1017,10359,11329,7259,2018,12234,11035,4902,11551,5059,2727,7737,2923,3593,7581,7094,8053,3639,6915,3456,10609,686,5669,9014,3144,7791,11678,5312,5506,5239,8940,2868,1602,2989,5825,939,10940,886,4577,1789,4376,5182,3026,561,2177,350,9975,6026,3585,6228,4533,1817,1162,9123,7413,2126,11303,1863,12278,3469,10231,9702,2231,5986,10473,8385,3327,7600,10389,5565,344,8144,849,6761,1078,11277,4435,5717,12016,1148,10084,7896,6457,1903,9874,8188,10395,8665,9294,9617,5382,8915,10661,3880,10511,4808,7137,7529,8647,6756,5771,8794,3015,6948,1818,6955,1267,6246,10975,11304,1634,169,1190,6644,6682,2764,6519,2497,11772,4495,5090,9722,3336,2597,3308,1975,4756,9930,8237,6736,2797,4356,4842,6336,10374,3127,9837,9558,10947,6501,10731,7158,1590,10528,5481,5284,1268,450,5938,544,8178,2806,9729,8015,10534,492,5017,4219,11679,12201,9114,7429,5794,6357,10853,7047,1136,816,5336,9585,1752,10491,7303,8912,2301,6322,7319,9475,331,11268,1746,3219,9957,10367,6125,7486,7963,909,6308,7734,7642,5723,2796,3248,4172,2372,10447,11419,2719,5354,8221,4598,3098,11598,2755,1045,7304,6651,5875,974,7019,6095,4077,3657,8369,2286,5751,5708,6276,1174,8175,8718,3268,2349,2165,9565,3046,5246,1584,11559,6416,6888,7595,572,10838,9193,3756,9521,996,6046,12229,5882,504,8640,3086,599,4394,4343,715,11757,1801,9217,8646,6474,11468,2470,3867,252,10767,8300,4529,11939,4996,3179,11592,3753,6620,989,3376,1130,3421,1116,11908,9922,3407,8965,1188,3182,1271,763,1806,11717,2084,9301,4155,6652,10985,9914,11833,2715,7242,5847,1566,5409,3942,11302,12282,10350,4724,9206,11276,9395,11442,10504,7293,2841,10432,4597,9940,640,3907,11212,3309,5239,7024,8784,8593,9570];
        // message
        bytes memory msg = "My name is Renaud";
        // salt and message hack because of Tetration confusion
        sig.salt = msg;
        msg = "\x3d\xee\x5a\x93\x94\xc2\xf7\xb4\xb8\x7f\xbd\xaf\xcc\x31\x98\xa8\xd6\x13\x12\x39\xef\x83\xa8\x6e\x14\x48\x1a\x6c\x10\x2a\x1d\x71\xfc\x43\x7e\xd7\x73\x08\x76\x53";
        falcon.verify(msg, sig, pk);
    }
    function testVector1() public view {
        // public key
        // prettier-ignore
        uint[512] memory tmp_pk = [uint(1902), 12040,8072,9952,6562,5247,8297,4170,5108,3383,5120,6557,2339,9615,9782,6454,4287,10630,601,6689,7717,2794,8544,4215,10919,184,7705,1092,8841,10082,10590,8627,8399,5775,8987,10305,8169,3914,5965,1864,6089,14,4953,7981,9763,11992,5746,10666,12246,2823,10214,696,5664,8243,11231,4564,746,8830,4493,5865,7793,11190,1588,3811,8443,9654,6122,12247,8282,7209,375,24,7995,11070,10546,2666,2259,6975,3378,1588,7181,7644,9596,3015,8072,11834,2863,1813,2827,2592,10538,10660,12105,7026,4328,2900,9138,2395,5310,10686,11117,9610,9775,2797,9416,9173,968,2796,7155,3726,8870,5852,4342,9903,5095,7278,7282,10429,5088,405,9119,6969,297,9728,1983,2598,10258,8349,10577,11561,11936,10481,8705,8516,9776,12081,8092,11946,2054,11019,6320,9785,8480,6831,5269,6641,3136,2064,8471,9099,10138,4506,915,4684,5994,11034,3120,9368,5447,422,11483,10934,4879,2269,5589,8646,5976,7886,7986,4220,1533,9842,8500,7429,6515,1510,3882,10129,4448,1365,9821,4632,2457,4952,5970,7442,740,7263,9202,7639,7479,1204,4496,11048,1479,9013,11721,2056,8285,5417,5373,4355,7876,9993,8428,12286,3094,69,4863,9793,1956,7931,11232,6528,553,7766,6172,9315,8405,2142,10163,11010,6541,6549,3830,9167,8809,3443,11609,2316,1473,7452,3738,1810,9635,9614,10165,10151,3574,6539,8465,7384,8693,5511,11247,7126,5814,10001,10090,8442,5596,5098,185,5292,3458,521,6567,7551,1179,4631,7908,7800,2587,8209,6051,11738,8556,8971,5019,6907,6947,7229,2103,657,5424,2820,5639,9621,9398,10055,7679,7604,1610,11221,12040,10404,6209,5119,7634,519,6979,1643,11240,10637,3787,300,10073,6752,6414,242,7668,6495,7468,5757,2478,2430,2638,4756,1350,8591,6055,2097,5179,1234,7441,498,5616,7261,2247,7037,9870,3855,7898,7623,3129,5501,9763,2467,3540,75,2349,11676,12275,2034,11354,961,11384,4328,8634,1660,11808,219,11093,10707,7650,4447,4392,2988,5336,9308,11502,9806,3026,8229,11877,126,5462,5678,8359,45,7834,1152,9903,3423,4867,4057,5693,3714,7539,7769,11812,5909,4129,2345,780,5526,5552,5400,10364,12187,3018,5025,5503,11528,3865,7616,11551,8222,6506,10591,5663,6530,12176,1692,1295,10816,8598,8647,998,144,10916,11290,897,6266,3871,10357,2082,1580,528,10134,1321,3492,7977,5371,3583,10125,6458,1076,1101,10003,5215,4682,10038,2865,1016,3634,1792,9744,3806,9377,7821,10869,2322,9114,3147,1963,4804,5342,5845,4271,7779,1972,10555,1984,1614,1329,6078,3411,5300,4726,1630,3074,3538,10930,10699,11190,865,11244,9161,5330,2676,2056,8818,2686,1766,10359,8236,9335,12011,9483,11480,11877,2543,3485,8039,8925,5612,11395,5087,12196,10805,3291,8996,10504,10485,9149,3555,10294,2283,2435,5673,6607,10614,5372,4665,10529,7639,11322,6744,8844,2559,10204,7251,8177,618,5649,4422,7234,6956,6906,3118,10852];
        uint[] memory pk = new uint[](512);
        for (uint i = 0; i < 512; i++) {
            pk[i] = tmp_pk[i];
        }
        // signature s1
        // prettier-ignore
        int[512] memory tmp_s1 = [int(-75), 89,-203,108,297,165,80,-77,-152,94,44,-108,-17,-86,-254,-202,106,70,-260,-161,-96,179,-82,-302,-63,78,376,76,45,57,5,34,425,264,182,387,-254,-143,0,169,158,337,-164,-95,-136,-68,-258,-255,-78,-259,192,53,256,-274,-61,13,-114,21,88,-93,-306,113,132,4,-56,193,-48,133,41,153,317,-276,100,-226,74,-144,324,170,43,107,76,-174,109,188,308,137,-30,46,177,-197,-35,-92,-374,-116,-96,68,97,88,-67,-164,-29,27,-6,9,-58,-51,-108,16,128,-143,161,-27,-56,-38,-140,-147,170,-129,22,-81,162,-116,-199,8,228,-201,-121,-6,149,-83,-329,-274,9,79,-243,152,-117,77,75,35,32,227,-44,-79,115,-238,303,-178,-170,208,-86,-1,140,-68,-233,184,-76,-104,378,-223,94,97,-415,-5,87,-212,131,-281,58,-205,-212,182,-156,-50,-118,-255,-94,-122,151,214,-75,20,44,100,21,-35,72,-501,-71,-93,183,-285,69,-29,-197,-64,-118,-183,139,-105,-43,172,-44,-172,85,-144,65,250,30,-124,-64,-46,-248,-120,-78,128,-189,207,-139,-160,-28,188,71,25,102,-42,-176,163,-121,145,-89,31,277,141,-97,-33,136,161,456,263,-107,-131,73,-90,-343,-60,12,255,108,-196,-147,15,1,-44,177,23,86,-146,-169,24,164,239,-24,133,-226,-55,-5,-123,134,-97,-175,24,-54,-45,-47,93,-67,50,-439,-31,-429,-145,-419,-31,97,-106,-10,90,40,-82,-198,89,-162,-345,-22,-222,-4,307,115,-407,55,111,-112,-100,72,509,216,-102,92,-198,98,136,-139,17,35,70,6,-93,172,134,122,163,-370,-240,296,-39,1,258,117,162,101,-78,-42,-204,-193,-57,128,-241,17,-103,123,224,16,-48,94,-174,288,4,14,-213,-308,136,-100,34,-470,-201,214,173,-195,245,40,485,-36,-162,-42,-219,137,198,-350,23,87,-121,-18,20,-44,-89,63,135,23,137,-94,228,-252,83,330,-248,-256,-114,-161,38,-13,-275,-216,-196,-188,83,-395,-83,122,-149,170,70,177,-148,129,-55,-39,-20,123,-59,-27,209,313,171,-91,-9,262,141,-80,-22,146,-42,115,-52,62,-166,-161,90,-15,85,20,-235,204,-194,-56,-84,-534,-155,298,301,10,-160,-289,-93,-252,-96,128,43,31,211,-100,72,105,214,-177,-127,-336,84,-35,142,-78,-165,-260,-88,-143,-173,-98,-88,-138,124,-19,-178,-102,144,19,-145,-25,60,101,81,-76,274,-93,17,45,101,-110,-117,-101,-141,24,77,-62,430,95,67,-181,183,-105,-85,288,130,127,-75,8,-67,186,7,194,-115,-69,-216];
        Falcon.Signature memory sig;
        sig.s1 = new int256[](512);
        for (uint i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
        }
        // signature s1 inverse
        // prettier-ignore
        int[512] memory tmp_s1_inv = [int(10374), 8225,6099,373,5230,2795,717,12037,9635,2407,9479,6500,3729,11863,8968,6111,288,10086,6908,4462,8509,11702,1514,6019,11302,11322,1179,11650,5259,4863,6655,8783,8861,8872,12045,1631,4032,5321,6220,11390,11443,8128,9000,6209,3979,5804,9816,4665,7815,3641,9364,8136,4939,5769,10475,8301,1187,2380,10213,10256,10067,7860,7150,5226,8093,9450,7783,3388,8099,5815,6981,7018,930,3067,6503,10074,8738,8407,9193,803,5150,10828,69,7242,1508,11235,11323,5207,2658,9866,7831,6097,7961,1484,1707,6256,11854,9793,8219,7101,10841,10876,3846,6555,3376,6087,12171,6113,470,199,10771,10455,9161,2172,10908,9865,8348,5870,2021,9683,6779,382,10307,9020,1493,10234,4460,7186,11680,4969,3400,7895,10290,4355,10345,3719,1940,2217,5958,1658,10940,8936,10723,4934,10493,11723,9679,5931,9914,10099,1460,1093,4751,1843,11120,7830,7272,12002,11869,10977,9023,2864,715,7791,1573,7206,5352,7611,1678,10883,2534,1460,3689,12099,461,7018,6982,7910,10885,2985,10183,9079,6882,2947,9566,12,10138,4715,11276,1493,9459,2043,1525,5061,2292,6173,5081,6267,9007,2915,9980,4839,10846,12153,803,9898,6854,50,2168,1764,5376,4241,1513,4595,6480,5459,8857,1780,7031,8819,6039,8090,296,8520,7995,6742,8840,5006,370,10512,8283,1478,5505,12169,10210,6811,11329,2224,2840,3933,6144,11289,9662,10127,4094,8858,8875,2487,4491,6938,1987,336,10021,12202,12113,953,11431,8161,6812,5689,1476,4599,6564,2747,10461,8774,11888,8663,8774,210,1589,21,1580,11831,6463,1027,10791,1382,8757,3534,3877,758,4758,2113,527,4947,3627,5692,678,7015,11351,10050,4147,5147,6611,9051,409,8267,3022,11782,1903,1995,4483,424,2573,8879,8429,3098,10860,4486,11048,10578,3523,11029,12150,970,9795,11198,6354,6568,9449,733,11463,8339,2345,1464,12101,5011,10622,5751,11697,6089,10923,3393,6417,6782,10312,5512,11530,5194,11653,1237,8406,1878,9750,7250,5944,10237,11873,11358,6758,1368,9163,97,9116,11627,4650,10620,6648,8174,11115,3971,1477,94,4239,5828,3301,3653,4828,8250,5715,10923,10238,4689,8897,7589,3660,1871,10680,2126,5310,6051,6159,3944,11046,1618,5249,3412,6312,972,765,12013,2558,10152,2077,2425,2403,53,3827,5777,12101,7183,7494,1761,5901,10527,5833,636,3102,5214,5587,6709,4958,4625,2079,10872,4884,11979,3141,2161,1657,5688,9988,5339,9029,3507,2629,4243,8580,10673,4303,11504,6278,8553,758,3245,4949,6748,11734,9372,884,954,10442,6419,6605,10029,2949,3753,2422,11776,772,6587,4969,9353,11926,9188,4956,10528,4278,8862,342,9186,376,10576,11926,7922,8650,3795,5332,8886,11664,11065,881,1,8352,5615,9969,3019,719,9054,7545,8996,6031,3170,758,6057,7759,6356,9489,7158,8970,9949,2239,6469,4690,8789,3825,10727,699,4011,10547,270,10259,4039,618,5373,11428,6582,1734,1002,1234,324];
        // message
        bytes memory msg = "My name is Simon";
        // salt and message hack because of Tetration confusion
        sig.salt = msg;
        msg = "\x16\x91\x4b\xf1\x10\x4f\xab\xa6\x60\x02\xdd\xbf\x00\xfe\x8e\x7e\x3b\xbe\xbe\xa9\xa4\x5b\xb5\x7e\xf0\x85\x5c\xd8\x04\x33\x92\xe3\x72\xad\x88\xd8\xf0\xf8\xc4\x9b";
        falcon.verify(msg, sig, pk);
    }
    function testVector2() public view {
        // public key
        // prettier-ignore
        uint[512] memory tmp_pk = [uint(1902), 12040,8072,9952,6562,5247,8297,4170,5108,3383,5120,6557,2339,9615,9782,6454,4287,10630,601,6689,7717,2794,8544,4215,10919,184,7705,1092,8841,10082,10590,8627,8399,5775,8987,10305,8169,3914,5965,1864,6089,14,4953,7981,9763,11992,5746,10666,12246,2823,10214,696,5664,8243,11231,4564,746,8830,4493,5865,7793,11190,1588,3811,8443,9654,6122,12247,8282,7209,375,24,7995,11070,10546,2666,2259,6975,3378,1588,7181,7644,9596,3015,8072,11834,2863,1813,2827,2592,10538,10660,12105,7026,4328,2900,9138,2395,5310,10686,11117,9610,9775,2797,9416,9173,968,2796,7155,3726,8870,5852,4342,9903,5095,7278,7282,10429,5088,405,9119,6969,297,9728,1983,2598,10258,8349,10577,11561,11936,10481,8705,8516,9776,12081,8092,11946,2054,11019,6320,9785,8480,6831,5269,6641,3136,2064,8471,9099,10138,4506,915,4684,5994,11034,3120,9368,5447,422,11483,10934,4879,2269,5589,8646,5976,7886,7986,4220,1533,9842,8500,7429,6515,1510,3882,10129,4448,1365,9821,4632,2457,4952,5970,7442,740,7263,9202,7639,7479,1204,4496,11048,1479,9013,11721,2056,8285,5417,5373,4355,7876,9993,8428,12286,3094,69,4863,9793,1956,7931,11232,6528,553,7766,6172,9315,8405,2142,10163,11010,6541,6549,3830,9167,8809,3443,11609,2316,1473,7452,3738,1810,9635,9614,10165,10151,3574,6539,8465,7384,8693,5511,11247,7126,5814,10001,10090,8442,5596,5098,185,5292,3458,521,6567,7551,1179,4631,7908,7800,2587,8209,6051,11738,8556,8971,5019,6907,6947,7229,2103,657,5424,2820,5639,9621,9398,10055,7679,7604,1610,11221,12040,10404,6209,5119,7634,519,6979,1643,11240,10637,3787,300,10073,6752,6414,242,7668,6495,7468,5757,2478,2430,2638,4756,1350,8591,6055,2097,5179,1234,7441,498,5616,7261,2247,7037,9870,3855,7898,7623,3129,5501,9763,2467,3540,75,2349,11676,12275,2034,11354,961,11384,4328,8634,1660,11808,219,11093,10707,7650,4447,4392,2988,5336,9308,11502,9806,3026,8229,11877,126,5462,5678,8359,45,7834,1152,9903,3423,4867,4057,5693,3714,7539,7769,11812,5909,4129,2345,780,5526,5552,5400,10364,12187,3018,5025,5503,11528,3865,7616,11551,8222,6506,10591,5663,6530,12176,1692,1295,10816,8598,8647,998,144,10916,11290,897,6266,3871,10357,2082,1580,528,10134,1321,3492,7977,5371,3583,10125,6458,1076,1101,10003,5215,4682,10038,2865,1016,3634,1792,9744,3806,9377,7821,10869,2322,9114,3147,1963,4804,5342,5845,4271,7779,1972,10555,1984,1614,1329,6078,3411,5300,4726,1630,3074,3538,10930,10699,11190,865,11244,9161,5330,2676,2056,8818,2686,1766,10359,8236,9335,12011,9483,11480,11877,2543,3485,8039,8925,5612,11395,5087,12196,10805,3291,8996,10504,10485,9149,3555,10294,2283,2435,5673,6607,10614,5372,4665,10529,7639,11322,6744,8844,2559,10204,7251,8177,618,5649,4422,7234,6956,6906,3118,10852];
        uint[] memory pk = new uint[](512);
        for (uint i = 0; i < 512; i++) {
            pk[i] = tmp_pk[i];
        }
        // signature s1
        // prettier-ignore
        int[512] memory tmp_s1 = [int(28), 40,-124,118,-122,-46,94,164,-52,325,-105,-51,-190,201,-170,74,199,-201,214,-361,74,25,117,77,-85,32,-183,233,-171,90,-3,26,11,93,-96,82,355,309,-132,265,30,-48,269,-18,-276,-196,-195,-91,2,-214,60,74,79,95,110,181,-7,70,-187,-146,183,14,-191,-48,-15,325,-54,26,-213,181,-171,44,-180,13,-37,-98,64,281,74,110,-271,27,1,216,136,-140,205,-26,-132,23,-140,104,-291,149,38,-31,-205,57,-325,224,-24,139,47,301,-243,59,127,-77,197,219,-77,-253,-215,-191,158,-405,-104,-188,166,301,-48,285,-63,286,92,70,149,-197,-100,-41,91,-202,62,-81,250,-53,368,-50,-51,-159,-191,-51,-229,-70,192,-20,52,213,223,-35,-244,90,104,-139,-9,3,-227,140,-169,-220,94,-52,7,-29,-148,-22,170,5,-45,124,111,34,251,4,28,-57,-3,-19,-91,143,63,-202,-73,-180,281,194,-77,89,-149,-203,-142,102,-123,-60,-288,176,-298,-186,-357,-38,-386,-36,-54,-158,173,-188,-224,-237,-214,139,-161,-33,-265,-96,-339,-84,-131,-211,0,-60,-8,-220,-17,-69,109,22,-242,-62,-71,94,119,-325,82,318,-63,347,-241,234,-40,50,384,-15,-130,-225,-143,229,145,34,-29,139,183,-319,-218,102,246,-88,101,59,-193,28,34,134,41,-79,-116,-65,6,-268,51,-398,-133,-105,66,-80,145,68,357,-200,-101,-125,-171,-399,177,52,309,113,-200,67,3,25,-19,258,-11,-64,-52,-61,311,-35,-101,47,42,162,-348,266,-152,-31,-149,216,-137,129,-9,-227,194,248,-65,-6,411,-312,37,-217,50,7,61,65,-122,-172,-71,-67,10,235,264,-50,-99,-154,-90,-168,-104,50,148,465,-14,-171,-86,140,-234,190,-199,-307,-287,-219,-5,-49,-54,-326,212,-278,-19,-340,228,48,-340,132,-23,-64,96,4,-171,155,-258,56,-47,215,-379,-134,-52,-153,65,263,-51,34,-61,-223,-241,21,206,-129,-85,135,-12,178,120,220,-28,175,100,90,-28,140,-133,-139,130,-136,-277,-71,14,4,117,-15,35,77,-36,-195,-2,-98,33,-205,-84,57,-252,162,64,77,17,-257,223,-133,155,222,-71,133,229,349,-133,-3,168,23,-284,-12,-104,-269,-58,26,-247,-135,84,12,203,-66,65,15,-260,-211,-121,-65,-30,-62,-207,-56,-76,354,305,23,241,41,74,8,78,175,-79,51,-70,-111,-121,-80,-161,360,-34,39,42,-164,114,-15,-34,-228,-343,104,-73,270,297,145,-199,20,87,166,-120,178,-63,123,-42,61,67,244,164,52,8,162,-166,38,-196,90,53,277];
        Falcon.Signature memory sig;
        sig.s1 = new int256[](512);
        for (uint i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
        }
        // signature s1 inverse
        // prettier-ignore
        int[512] memory tmp_s1_inv = [int(9373), 11973,9075,9191,5261,4146,3009,1519,2035,5583,8407,4214,2901,9147,7215,4210,2144,6805,4077,6234,8238,8568,8126,10572,7502,8479,10606,5408,2007,6145,9995,3801,720,7815,5519,10566,6022,7593,9494,8203,5935,1280,11760,3367,2988,1026,5939,11879,8531,9217,6221,6152,7710,480,6697,3595,8230,11303,9889,12262,7703,1818,3492,9377,10249,2911,4558,7898,4342,3705,7221,9495,6273,12211,201,6580,3216,4315,6681,4320,8208,10911,3088,1854,3323,4388,939,9137,4044,6664,5737,4810,5144,6784,260,2002,4558,7042,7040,4453,185,5697,2702,5979,12100,5414,9709,1994,5559,345,10707,9771,4358,5690,4598,2517,9186,6189,7015,2083,4755,10557,9656,9121,9319,3239,10326,9638,7929,6876,8419,10591,5290,9376,2927,3089,5174,7022,557,1656,6239,11899,6131,12065,11409,9879,8581,3026,11230,9560,9785,6649,3693,6420,1048,3018,6405,6426,12146,9573,493,3730,10125,2733,238,7788,4050,3604,10071,2473,7352,8339,3174,12049,2251,7423,1418,3044,6443,852,7932,595,4701,6452,2058,7109,580,10315,5295,2267,8684,8618,4880,4583,9555,6143,6926,2899,4045,7734,2388,12222,8326,6937,4673,2273,6322,3720,11075,1387,4687,1649,3354,439,343,5938,2165,5021,1854,307,4473,1664,4686,2536,8563,8508,10441,607,5381,634,4540,4,12027,11059,6291,4848,10361,11492,1329,9481,3125,8796,2284,11672,11432,3950,11252,485,5949,10957,4373,1126,5502,11270,2532,752,8473,2891,1866,1731,11240,2359,8455,4212,4575,8246,11554,10147,6289,9040,5699,11351,3302,8933,4066,5865,6010,6799,11017,3211,1202,10899,7229,971,10387,765,10599,11968,5256,7990,125,1170,91,4873,9538,7663,12036,142,4767,1418,11476,11874,1663,7352,3999,6792,7283,10674,2439,11494,3473,5971,8750,10264,554,4390,7424,3637,5407,277,6703,9154,5351,1070,80,11556,4985,9231,9646,4073,492,5133,7949,4607,8947,10530,10621,5760,3684,6172,6688,6262,6833,6421,1163,3226,2569,9100,506,11050,7546,11574,4735,3959,4589,11178,3703,631,7526,215,5,1543,4927,1354,11064,7875,6170,1502,4089,7494,8893,1788,10296,304,4114,6792,7993,4696,2118,4085,2584,11808,7505,10009,5796,3401,1145,393,4960,6756,7899,4815,1197,11108,3658,10824,1070,10025,11666,8789,8758,2640,4002,6300,6623,5038,10363,11250,5690,4650,4091,9210,9391,9424,4670,385,9496,1714,5801,9369,1484,3894,3151,9627,9761,10204,12163,5980,164,328,12094,1753,2745,8136,10304,7314,1225,3583,976,3444,4288,1658,2247,5613,8798,2351,10449,5857,9134,11292,6629,10671,11306,7508,10537,6670,11288,11115,10647,7553,3169,7562,7811,4364,863,1417,6544,11598,878,12032,8981,6214,48,10212,2855,8837,11041,3382,9265,10127,5535,11294,10236,3286,4113,5715,10843,8892,6088,4471,7748,4312,9559,5556,5439,11748,5985,10700,232,11089,6951,3047,7635,12193,11412,6092,5514,5141,7295,3433,5765,11417];
        // message
        bytes memory msg = "My name is Nicolas";
        // salt and message hack because of Tetration confusion
        sig.salt = msg;
        msg = "\x3c\xcd\xab\x41\x81\xee\x0f\xc3\xeb\x29\x36\x74\xe4\x06\x6f\x4a\xf4\x56\xf1\x1d\x54\x2f\x76\x28\x6d\xd2\xd5\x0a\x57\x29\x8e\x0e\x31\x2c\x3f\x66\x12\x35\xf9\x99";
        falcon.verify(msg, sig, pk);
    }
    function testVector3() public view {
        // public key
        // prettier-ignore
        uint[512] memory tmp_pk = [uint(1902), 12040,8072,9952,6562,5247,8297,4170,5108,3383,5120,6557,2339,9615,9782,6454,4287,10630,601,6689,7717,2794,8544,4215,10919,184,7705,1092,8841,10082,10590,8627,8399,5775,8987,10305,8169,3914,5965,1864,6089,14,4953,7981,9763,11992,5746,10666,12246,2823,10214,696,5664,8243,11231,4564,746,8830,4493,5865,7793,11190,1588,3811,8443,9654,6122,12247,8282,7209,375,24,7995,11070,10546,2666,2259,6975,3378,1588,7181,7644,9596,3015,8072,11834,2863,1813,2827,2592,10538,10660,12105,7026,4328,2900,9138,2395,5310,10686,11117,9610,9775,2797,9416,9173,968,2796,7155,3726,8870,5852,4342,9903,5095,7278,7282,10429,5088,405,9119,6969,297,9728,1983,2598,10258,8349,10577,11561,11936,10481,8705,8516,9776,12081,8092,11946,2054,11019,6320,9785,8480,6831,5269,6641,3136,2064,8471,9099,10138,4506,915,4684,5994,11034,3120,9368,5447,422,11483,10934,4879,2269,5589,8646,5976,7886,7986,4220,1533,9842,8500,7429,6515,1510,3882,10129,4448,1365,9821,4632,2457,4952,5970,7442,740,7263,9202,7639,7479,1204,4496,11048,1479,9013,11721,2056,8285,5417,5373,4355,7876,9993,8428,12286,3094,69,4863,9793,1956,7931,11232,6528,553,7766,6172,9315,8405,2142,10163,11010,6541,6549,3830,9167,8809,3443,11609,2316,1473,7452,3738,1810,9635,9614,10165,10151,3574,6539,8465,7384,8693,5511,11247,7126,5814,10001,10090,8442,5596,5098,185,5292,3458,521,6567,7551,1179,4631,7908,7800,2587,8209,6051,11738,8556,8971,5019,6907,6947,7229,2103,657,5424,2820,5639,9621,9398,10055,7679,7604,1610,11221,12040,10404,6209,5119,7634,519,6979,1643,11240,10637,3787,300,10073,6752,6414,242,7668,6495,7468,5757,2478,2430,2638,4756,1350,8591,6055,2097,5179,1234,7441,498,5616,7261,2247,7037,9870,3855,7898,7623,3129,5501,9763,2467,3540,75,2349,11676,12275,2034,11354,961,11384,4328,8634,1660,11808,219,11093,10707,7650,4447,4392,2988,5336,9308,11502,9806,3026,8229,11877,126,5462,5678,8359,45,7834,1152,9903,3423,4867,4057,5693,3714,7539,7769,11812,5909,4129,2345,780,5526,5552,5400,10364,12187,3018,5025,5503,11528,3865,7616,11551,8222,6506,10591,5663,6530,12176,1692,1295,10816,8598,8647,998,144,10916,11290,897,6266,3871,10357,2082,1580,528,10134,1321,3492,7977,5371,3583,10125,6458,1076,1101,10003,5215,4682,10038,2865,1016,3634,1792,9744,3806,9377,7821,10869,2322,9114,3147,1963,4804,5342,5845,4271,7779,1972,10555,1984,1614,1329,6078,3411,5300,4726,1630,3074,3538,10930,10699,11190,865,11244,9161,5330,2676,2056,8818,2686,1766,10359,8236,9335,12011,9483,11480,11877,2543,3485,8039,8925,5612,11395,5087,12196,10805,3291,8996,10504,10485,9149,3555,10294,2283,2435,5673,6607,10614,5372,4665,10529,7639,11322,6744,8844,2559,10204,7251,8177,618,5649,4422,7234,6956,6906,3118,10852];
        uint[] memory pk = new uint[](512);
        for (uint i = 0; i < 512; i++) {
            pk[i] = tmp_pk[i];
        }
        // signature s1
        // prettier-ignore
        int[512] memory tmp_s1 = [int(-7), -118,-33,220,27,-41,-55,15,-198,27,120,93,75,67,213,-166,14,50,-352,79,-79,-122,118,-139,219,-130,150,-322,-273,-220,-281,63,44,-90,-59,177,316,116,390,-48,-76,-230,-160,274,-22,-208,-173,-368,-56,90,-31,116,-87,140,10,227,23,4,-168,70,451,-171,-52,-303,-262,128,-199,-316,286,187,224,-127,-74,-14,-54,47,-130,172,-237,-171,-328,148,59,-25,258,-9,-48,89,-270,104,-316,-203,20,82,-500,-121,83,-94,64,150,40,125,-263,-157,-158,-196,102,-118,17,191,112,-137,-445,-71,-126,47,78,-186,-84,-149,-124,70,244,263,-30,143,6,-193,283,123,61,45,-370,122,-285,333,82,-74,156,-230,-9,55,-46,-86,92,-235,14,195,-65,-23,-21,-273,57,-245,-179,251,-167,203,-248,-79,127,111,249,-277,-127,-49,-227,-83,201,-144,50,-6,-216,-327,-340,106,49,-172,-172,-115,162,61,-6,-23,-146,109,-201,-138,-25,87,-267,34,15,-56,200,16,-99,209,-82,150,-139,-253,144,-257,192,-315,150,-66,106,82,21,72,169,98,-19,-271,-77,-182,198,32,-103,315,204,-403,-35,-50,88,-365,0,-92,101,-103,-118,142,-244,-113,44,-310,-313,-11,57,-23,294,84,132,-240,81,-402,-43,162,-32,-365,-15,-62,186,-341,218,-310,36,261,296,150,-39,100,169,-146,185,237,-92,-83,-144,-166,-19,-126,-64,91,18,-42,-45,-38,-103,-131,-207,98,231,-328,-177,14,152,-117,132,-185,-145,-1,-177,190,195,52,-83,-107,184,-133,-26,-173,180,-50,-59,257,14,-48,-96,-357,181,-66,-126,110,47,287,-79,-47,-16,166,86,68,48,-77,72,-37,35,186,197,-14,-9,307,-5,33,189,-306,277,-87,124,-17,-148,-66,136,-160,-254,-7,-61,18,-115,16,74,112,-99,302,103,-163,-145,55,102,-113,49,79,31,52,344,-143,-58,40,22,-17,-210,85,62,-201,-177,116,48,14,119,-222,71,-166,-54,-119,-191,59,-114,-45,-129,114,-32,-74,-18,82,-46,230,147,-130,265,329,256,-26,-97,241,136,-289,-222,249,-39,-144,117,-115,-294,338,102,-181,311,247,-55,-128,-171,-28,244,2,3,-57,-40,-52,-191,78,87,-20,-23,34,-149,-427,-196,217,-121,204,-79,-101,-193,-201,41,41,-72,29,-76,220,408,110,-88,135,13,-90,10,-52,12,-136,93,122,218,-55,137,-122,33,-299,-28,-110,290,-305,-27,-3,-125,-22,-183,240,-36,185,-29,204,56,294,-113,-249,-197,176,143,210,-6,-65,473,29,-207,191,-105,-333,-63,-168,350,197,39,114,-74,-353,178,76,217,128];
        Falcon.Signature memory sig;
        sig.s1 = new int256[](512);
        for (uint i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
        }
        // signature s1 inverse
        // prettier-ignore
        int[512] memory tmp_s1_inv = [int(11332), 11159,4462,2225,9233,10387,7562,10801,5161,7046,3315,8168,6872,9238,5078,2245,8754,8639,7155,11818,3263,3223,7913,11129,9149,4571,3733,3674,12082,1091,8735,3336,1947,6367,1607,4548,11059,1286,4872,5757,2551,9642,4437,2611,7798,3504,4091,8889,1860,9185,10093,2855,9080,2420,665,6911,8837,7212,9824,2788,400,11749,9807,5446,1270,6073,11496,10964,2711,8340,8726,12120,540,11155,2991,10449,8357,7235,9488,10624,2689,10975,11172,8830,2054,5064,2085,10732,184,11319,7080,5565,4198,516,1566,7934,9584,670,6552,7556,5321,6626,11727,11587,4871,12017,1406,4232,4933,2980,7896,10328,9651,4039,10663,11577,9093,9171,6514,10969,6953,1237,9082,4139,10476,5964,11936,5320,8270,1894,257,2594,1636,5291,4204,7609,3833,216,7713,5089,7657,1199,3212,10991,7026,9498,11974,10146,1432,7427,8458,1840,11065,11341,9074,9116,8198,6377,2320,2052,3955,7829,3672,7395,10237,7001,3484,11196,1298,6816,9119,11843,11659,10114,11966,4134,220,2257,7398,5249,11151,7915,7814,6751,7137,7194,2157,3475,11137,7817,9733,1795,9424,3603,1851,9813,2966,1732,9828,2743,10954,3211,9260,7305,9919,12024,12154,7363,2592,12173,7260,4194,7538,4441,3790,2954,4753,3777,2081,11239,2465,2597,991,1108,6256,8104,7724,4028,11358,1882,5030,3524,7529,5436,10808,10211,4171,6231,1351,2435,8637,5875,9751,10532,2170,2852,2450,11160,8965,10602,5900,11587,6820,149,3937,653,8643,9580,11392,6123,10248,5809,9710,1992,289,5196,6618,1445,11559,661,4404,5892,9241,1577,1065,7210,10264,1859,7743,8807,10087,5164,1854,769,41,3073,1185,3445,10226,1125,818,5257,2155,11363,2794,8647,2585,11584,10633,401,676,2288,2283,1473,5031,9130,5006,5720,7533,7618,12261,11720,362,9611,6017,8491,6631,8304,3541,4902,9363,1004,9333,6139,8615,11504,4680,6910,7158,8343,2389,8412,5433,7249,10407,2049,1061,3660,37,143,9711,11274,349,10699,11411,12234,2818,7464,8060,12030,1981,10184,3757,10302,268,2943,4369,12274,5903,1904,9347,6971,9415,9719,3344,11716,8855,1902,11325,8142,9701,10365,6162,10764,6883,502,9526,9907,6774,6579,7254,10701,353,4593,2262,12049,1772,4330,10169,356,8347,5035,12101,6486,6599,4006,1268,1788,9588,9328,8275,6235,11495,4061,11066,5347,5610,2261,1434,11935,5054,10295,2100,10198,4980,7662,3676,12136,3136,110,4762,7486,11501,10252,1573,345,4569,11465,5511,7893,5189,10775,4830,23,6859,8881,5940,1546,8367,104,6415,7627,4605,9462,2088,5192,7519,67,4736,5548,6975,1924,1184,9133,4004,9093,10388,3023,4777,3924,3862,4712,1935,8315,11009,4063,8446,6625,3605,9202,1727,4549,2027,11090,2447,1809,7349,4432,7470,10249,1064,12029,12206,4834,5526,8232,2690,8544,10460,811,5508,401,10061,11723,4509,12115,12209,2733,465,6281,5944,11696,6919,1154,11900,5811,2733,10378,5695,9829,3029,6819];
        // message
        bytes memory msg = "We are ZKNox";
        // salt and message hack because of Tetration confusion
        sig.salt = msg;
        msg = "\x09\xe1\xab\x35\xc4\x9b\x38\x0f\x47\x63\x29\x69\x67\xa8\xcd\x3f\xd0\xf7\xc9\xa9\x92\x4b\x0c\x7f\xcd\xb4\x40\xdf\x74\x7b\x69\xe4\xd7\x1a\x71\xd8\x11\x78\x85\x14";
        falcon.verify(msg, sig, pk);
    }
}
