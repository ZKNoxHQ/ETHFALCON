/**
 *
 */
/*ZZZZZZZZZZZZZZZZZZZKKKKKKKKK    KKKKKKKNNNNNNNN        NNNNNNNN     OOOOOOOOO     XXXXXXX       XXXXXXX                         ..../&@&#.       .###%@@@#, ..                         
/*Z:::::::::::::::::ZK:::::::K    K:::::KN:::::::N       N::::::N   OO:::::::::OO   X:::::X       X:::::X                      ...(@@* .... .           &#//%@@&,.                       
/*Z:::::::::::::::::ZK:::::::K    K:::::KN::::::::N      N::::::N OO:::::::::::::OO X:::::X       X:::::X                    ..*@@.........              .@#%%(%&@&..                    
/*Z:::ZZZZZZZZ:::::Z K:::::::K   K::::::KN:::::::::N     N::::::NO:::::::OOO:::::::OX::::::X     X::::::X                   .*@( ........ .  .&@@@@.      .@%%%%%#&@@.                  
/*ZZZZZ     Z:::::Z  KK::::::K  K:::::KKKN::::::::::N    N::::::NO::::::O   O::::::OXXX:::::X   X::::::XX                ...&@ ......... .  &.     .@      /@%%%%%%&@@#                  
/*        Z:::::Z      K:::::K K:::::K   N:::::::::::N   N::::::NO:::::O     O:::::O   X:::::X X:::::X                   ..@( .......... .  &.     ,&      /@%%%%&&&&@@@.              
/*       Z:::::Z       K::::::K:::::K    N:::::::N::::N  N::::::NO:::::O     O:::::O    X:::::X:::::X                   ..&% ...........     .@%(#@#      ,@%%%%&&&&&@@@%.               
/*      Z:::::Z        K:::::::::::K     N::::::N N::::N N::::::NO:::::O     O:::::O     X:::::::::X                   ..,@ ............                 *@%%%&%&&&&&&@@@.               
/*     Z:::::Z         K:::::::::::K     N::::::N  N::::N:::::::NO:::::O     O:::::O     X:::::::::X                  ..(@ .............             ,#@&&&&&&&&&&&&@@@@*               
/*    Z:::::Z          K::::::K:::::K    N::::::N   N:::::::::::NO:::::O     O:::::O    X:::::X:::::X                   .*@..............  . ..,(%&@@&&&&&&&&&&&&&&&&@@@@,               
/*   Z:::::Z           K:::::K K:::::K   N::::::N    N::::::::::NO:::::O     O:::::O   X:::::X X:::::X                 ...&#............. *@@&&&&&&&&&&&&&&&&&&&&@@&@@@@&                
/*ZZZ:::::Z     ZZZZZKK::::::K  K:::::KKKN::::::N     N:::::::::NO::::::O   O::::::OXXX:::::X   X::::::XX               ...@/.......... *@@@@. ,@@.  &@&&&&&&@@@@@@@@@@@.               
/*Z::::::ZZZZZZZZ:::ZK:::::::K   K::::::KN::::::N      N::::::::NO:::::::OOO:::::::OX::::::X     X::::::X               ....&#..........@@@, *@@&&&@% .@@@@@@@@@@@@@@@&                  
/*Z:::::::::::::::::ZK:::::::K    K:::::KN::::::N       N:::::::N OO:::::::::::::OO X:::::X       X:::::X                ....*@.,......,@@@...@@@@@@&..%@@@@@@@@@@@@@/                   
/*Z:::::::::::::::::ZK:::::::K    K:::::KN::::::N        N::::::N   OO:::::::::OO   X:::::X       X:::::X                   ...*@,,.....%@@@,.........%@@@@@@@@@@@@(                     
/*ZZZZZZZZZZZZZZZZZZZKKKKKKKKK    KKKKKKKNNNNNNNN         NNNNNNN     OOOOOOOOO     XXXXXXX       XXXXXXX                      ...&@,....*@@@@@ ..,@@@@@@@@@@@@@&.                     
/*                                                                                                                                   ....,(&@@&..,,,/@&#*. .                             
/*                                                                                                                                    ......(&.,.,,/&@,.                                
/*                                                                                                                                      .....,%*.,*@%                               
/*                                                                                                                                    .#@@@&(&@*,,*@@%,..                               
/*                                                                                                                                    .##,,,**$.,,*@@@@@%.                               
/*                                                                                                                                     *(%%&&@(,,**@@@@@&                              
/*                                                                                                                                      . .  .#@((@@(*,**                                
/*                                                                                                                                             . (*. .                                   
/*                                                                                                                                              .*/
///* Copyright (C) 2025 - Renaud Dubois, Simon Masson - This file is part of ZKNOX project
///* License: This software is licensed under MIT License
///* This Code may be reused including this header, license and copyright notice.
///* See LICENSE file at the root folder of the project.
///* FILE: ZKNOX_falcon_encodings.sol
///* Description: Decompression function of falcon verification
/**
 *
 */

// code generated using pythonref/generate_falcon_epervier_shorter_zknox_test_vectors.py.
pragma solidity ^0.8.25;

import {Test, console} from "forge-std/Test.sol";
import "../src/ZKNOX_falcon_encodings.sol";
import "../src/ZKNOX_falcon.sol";
import "../src/ZKNOX_falcon_deploy.sol";
import "../src/ZKNOX_display.sol";

contract FalconKATS_Test is Test {
    ZKNOX_falcon falcon;
    //exemple of stateless initialisation, no external contract provided
    ZKNOX_NTT ntt = new ZKNOX_NTT(address(0), address(0), 12289, 12265);
    // forgefmt: disable-next-line
    uint256[1024] psi_rev = [uint256(1), 1479, 4043, 7143, 5736, 4134, 1305, 722, 1646, 1212, 6429, 9094, 3504, 8747, 9744, 8668, 4591, 6561, 5023, 6461, 10938, 4978, 6512, 8961, 11340, 9664, 9650, 4821, 563, 9314, 2744, 3006, 1000, 4320, 12208, 3091, 9326, 4896, 2366, 9238, 11563, 7678, 1853, 140, 1635, 9521, 11112, 4255, 7203, 10963, 9088, 9275, 790, 955, 11119, 2319, 9542, 4846, 3135, 3712, 9995, 11227, 3553, 7484, 544, 5791, 11950, 2468, 11267, 9, 9447, 11809, 10616, 8011, 7300, 6958, 1381, 2525, 4177, 8705, 2837, 5374, 4354, 130, 2396, 4452, 3296, 8340, 12171, 9813, 2197, 5067, 11336, 3748, 5767, 827, 3284, 2881, 5092, 10200, 10276, 9000, 9048, 11560, 10593, 10861, 334, 2426, 4632, 5755, 11029, 4388, 10530, 3707, 3694, 7110, 11934, 3382, 2548, 8058, 4890, 6378, 9558, 3932, 5542, 12144, 3459, 3637, 1663, 1777, 1426, 7635, 2704, 5291, 7351, 8653, 9140, 160, 12286, 7852, 2166, 8374, 7370, 12176, 3364, 10600, 9018, 4057, 2174, 7917, 2847, 7875, 7094, 9509, 10805, 4895, 2305, 5042, 4053, 9644, 3985, 7384, 476, 3531, 420, 6730, 2178, 1544, 9273, 243, 9289, 11618, 3136, 5191, 8889, 9890, 9103, 6882, 10163, 1630, 11136, 2884, 8241, 10040, 3247, 9603, 2969, 3978, 6957, 3510, 9919, 9424, 7575, 8146, 1537, 12047, 8585, 2678, 5019, 545, 7404, 1017, 10657, 7205, 10849, 8526, 3066, 12262, 11244, 2859, 2481, 7277, 2912, 5698, 354, 7428, 390, 11516, 3778, 8456, 442, 2401, 5101, 11222, 4976, 10682, 875, 3780, 7278, 11287, 5088, 4284, 6022, 9302, 2437, 3646, 10102, 9723, 6039, 9867, 11854, 7952, 10911, 1912, 11796, 8193, 9908, 5444, 9041, 1207, 5277, 1168, 11885, 4645, 1065, 2143, 3957, 2839, 10162, 151, 11858, 1579, 2505, 5906, 52, 3174, 1323, 2766, 3336, 6055, 6415, 677, 3445, 7509, 4698, 5057, 12097, 10968, 10240, 4912, 5241, 9369, 3127, 4169, 3482, 787, 6821, 11279, 12231, 241, 11286, 3532, 11404, 6008, 10333, 7280, 2844, 3438, 8077, 975, 5681, 8812, 142, 1105, 4080, 421, 3602, 6221, 4624, 6212, 3263, 8689, 5886, 4782, 5594, 3029, 4213, 504, 605, 9987, 2033, 8291, 10367, 8410, 11316, 11035, 10930, 5435, 3710, 6196, 6950, 5446, 8301, 468, 11973, 11907, 6152, 4948, 11889, 10561, 6153, 6427, 3643, 5415, 56, 9090, 5206, 6760, 1702, 10302, 11635, 3565, 5315, 8214, 7373, 4324, 10120, 11767, 5079, 3262, 11011, 2344, 6715, 1973, 5925, 1018, 3514, 11248, 7500, 7822, 5537, 4749, 8500, 12142, 5456, 7840, 6844, 8429, 7753, 1050, 6118, 3818, 9606, 1190, 5876, 2281, 2031, 5333, 8298, 8320, 12133, 2767, 453, 6381, 418, 3772, 5429, 4774, 1293, 7552, 2361, 1843, 9259, 4115, 218, 2908, 8855, 8760, 2882, 10484, 1954, 2051, 2447, 6147, 576, 3963, 1858, 7535, 3315, 11863, 2925, 347, 3757, 1975, 10596, 3009, 174, 11566, 9551, 5868, 2655, 6554, 1512, 11939, 5383, 10474, 9087, 7796, 6920, 10232, 6374, 1483, 49, 11026, 1489, 2500, 10706, 5942, 1404, 11964, 11143, 948, 4049, 3728, 1159, 5990, 652, 5766, 6190, 11994, 4016, 4077, 2919, 3762, 6328, 7183, 10695, 1962, 7991, 8960, 12121, 9597, 7105, 1200, 6122, 9734, 3956, 1360, 6119, 5297, 3054, 6803, 9166, 1747, 5919, 4433, 3834, 5257, 683, 2459, 8633, 12225, 9786, 9341, 6507, 1566, 11454, 6224, 3570, 8049, 3150, 1319, 4046, 11580, 1958, 7967, 2078, 1112, 11231, 8210, 11367, 441, 1826, 9363, 9118, 4489, 3708, 3238, 11153, 3449, 7080, 1092, 3359, 3205, 8024, 8611, 10361, 11825, 2068, 10900, 4404, 346, 3163, 8257, 7449, 6127, 12164, 11749, 10763, 4222, 8051, 11677, 8921, 8062, 7228, 11071, 11851, 3515, 9011, 5993, 6877, 8080, 1536, 10568, 4103, 9860, 11572, 8700, 1373, 2982, 3448, 11946, 4538, 1908, 4727, 11081, 1866, 7078, 10179, 716, 10125, 6873, 1705, 2450, 11475, 416, 10224, 5826, 7725, 8794, 1756, 4145, 8755, 8328, 5063, 4176, 8524, 10771, 2461, 2275, 8022, 5653, 6693, 6302, 11710, 3889, 212, 6323, 9175, 2769, 5734, 1176, 5508, 11014, 4860, 11164, 11158, 10844, 11841, 1014, 7508, 7365, 10962, 3607, 5232, 8347, 12221, 10029, 7723, 5836, 3200, 1535, 9572, 60, 7784, 10032, 10872, 5676, 3087, 6454, 7406, 3975, 7326, 8545, 2528, 3056, 5845, 5588, 11877, 5102, 1255, 506, 10897, 5784, 9615, 2212, 3338, 9013, 1178, 9513, 6811, 8778, 10347, 3408, 1165, 2575, 10453, 425, 11897, 10104, 377, 4578, 375, 1620, 1038, 11366, 6085, 4167, 6092, 2231, 2800, 12096, 1522, 2151, 8946, 8170, 5002, 12269, 7681, 5163, 10545, 1314, 2894, 3654, 11951, 3947, 9834, 6599, 7350, 7174, 1248, 2442, 8330, 6492, 6330, 10141, 5724, 10964, 1945, 1029, 8945, 6691, 10397, 3624, 6825, 4906, 4670, 512, 7735, 11295, 9389, 12050, 1804, 1403, 6195, 7100, 406, 10602, 7021, 12143, 8914, 9998, 7954, 3393, 8464, 8054, 7376, 8761, 11667, 1737, 4499, 5672, 8307, 9342, 11653, 5609, 4605, 2689, 180, 8151, 5219, 1409, 204, 6780, 9806, 2054, 1344, 9247, 463, 8882, 3981, 1468, 4475, 7043, 3017, 1236, 9168, 4705, 2600, 11232, 4739, 4251, 1226, 6771, 11925, 2360, 3028, 5216, 11839, 10345, 11711, 5368, 11779, 7628, 2622, 6903, 8929, 7605, 7154, 12226, 8481, 8619, 2373, 7302, 10891, 9199, 826, 5043, 5789, 8787, 6671, 10631, 9224, 1506, 7806, 5703, 4719, 11538, 6389, 11379, 4693, 9951, 11872, 9996, 6138, 8820, 4443, 8871, 7186, 10398, 1802, 10734, 1590, 4411, 1223, 2334, 2946, 6828, 2637, 4510, 881, 365, 10362, 1015, 7250, 6742, 2485, 904, 24, 10918, 11009, 11675, 980, 11607, 5082, 7699, 5207, 8239, 844, 7087, 3221, 8016, 8452, 2595, 5289, 6627, 567, 2941, 1406, 2633, 6940, 2945, 3232, 11996, 3769, 7434, 3944, 8190, 6759, 5604, 11024, 9282, 10118, 8809, 9169, 6184, 6643, 6086, 8753, 5370, 8348, 8536, 1282, 3572, 9457, 2021, 4730, 3229, 1706, 3929, 5054, 3154, 9004, 7929, 12282, 1936, 8566, 11444, 11520, 5526, 50, 216, 767, 3805, 4153, 10076, 1279, 11424, 9617, 5170, 12100, 3116, 10080, 1763, 3815, 1734, 1350, 5832, 8420, 4423, 1530, 1694, 10036, 10421, 9559, 5411, 4820, 1160, 9195, 7771, 2840, 9811, 4194, 9270, 7315, 4565, 7211, 10506, 944, 7519, 7002, 8620, 7624, 6883, 3020, 5673, 5410, 1251, 10499, 7014, 2035, 11249, 6164, 10407, 8176, 12217, 10447, 3840, 2712, 4834, 2828, 4352, 1241, 4378, 3451, 4094, 3045, 5781, 9646, 11194, 7592, 8711, 8823, 10588, 7785, 11511, 2626, 530, 10808, 9332, 9349, 2046, 8972, 9757, 8957, 12150, 3268, 3795, 1849, 6513, 4523, 4301, 457, 8, 8835, 3758, 8071, 4390, 10013, 982, 2593, 879, 9687, 10388, 11787, 7171, 6063, 8496, 8443, 1573, 5969, 4649, 9360, 6026, 1030, 11823, 10608, 8468, 11415, 9988, 5650, 12119, 648, 12139, 2307, 8000, 11498, 9855, 9416, 2827, 9754, 11169, 21, 6481];
    // forgefmt: disable-next-line
    uint256[1024] psi_inv_rev = [uint256(1), 10810, 5146, 8246, 11567, 10984, 8155, 6553, 3621, 2545, 3542, 8785, 3195, 5860, 11077, 10643, 9283, 9545, 2975, 11726, 7468, 2639, 2625, 949, 3328, 5777, 7311, 1351, 5828, 7266, 5728, 7698, 4805, 8736, 1062, 2294, 8577, 9154, 7443, 2747, 9970, 1170, 11334, 11499, 3014, 3201, 1326, 5086, 8034, 1177, 2768, 10654, 12149, 10436, 4611, 726, 3051, 9923, 7393, 2963, 9198, 81, 7969, 11289, 8652, 8830, 145, 6747, 8357, 2731, 5911, 7399, 4231, 9741, 8907, 355, 5179, 8595, 8582, 1759, 7901, 1260, 6534, 7657, 9863, 11955, 1428, 1696, 729, 3241, 3289, 2013, 2089, 7197, 9408, 9005, 11462, 6522, 8541, 953, 7222, 10092, 2476, 118, 3949, 8993, 7837, 9893, 12159, 7935, 6915, 9452, 3584, 8112, 9764, 10908, 5331, 4989, 4278, 1673, 480, 2842, 12280, 1022, 9821, 339, 6498, 11745, 10146, 11224, 7644, 404, 11121, 7012, 11082, 3248, 6845, 2381, 4096, 493, 10377, 1378, 4337, 435, 2422, 6250, 2566, 2187, 8643, 9852, 2987, 6267, 8005, 7201, 1002, 5011, 8509, 11414, 1607, 7313, 1067, 7188, 9888, 11847, 3833, 8511, 773, 11899, 4861, 11935, 6591, 9377, 5012, 9808, 9430, 1045, 27, 9223, 3763, 1440, 5084, 1632, 11272, 4885, 11744, 7270, 9611, 3704, 242, 10752, 4143, 4714, 2865, 2370, 8779, 5332, 8311, 9320, 2686, 9042, 2249, 4048, 9405, 1153, 10659, 2126, 5407, 3186, 2399, 3400, 7098, 9153, 671, 3000, 12046, 3016, 10745, 10111, 5559, 11869, 8758, 11813, 4905, 8304, 2645, 8236, 7247, 9984, 7394, 1484, 2780, 5195, 4414, 9442, 4372, 10115, 8232, 3271, 1689, 8925, 113, 4919, 3915, 10123, 4437, 3, 12129, 3149, 3636, 4938, 6998, 9585, 4654, 10863, 10512, 10626, 11848, 922, 4079, 1058, 11177, 10211, 4322, 10331, 709, 8243, 10970, 9139, 4240, 8719, 6065, 835, 10723, 5782, 2948, 2503, 64, 3656, 9830, 11606, 7032, 8455, 7856, 6370, 10542, 3123, 5486, 9235, 6992, 6170, 10929, 8333, 2555, 6167, 11089, 5184, 2692, 168, 3329, 4298, 10327, 1594, 5106, 5961, 8527, 9370, 8212, 8273, 295, 6099, 6523, 11637, 6299, 11130, 8561, 8240, 11341, 1146, 325, 10885, 6347, 1583, 9789, 10800, 1263, 12240, 10806, 5915, 2057, 5369, 4493, 3202, 1815, 6906, 350, 10777, 5735, 9634, 6421, 2738, 723, 12115, 9280, 1693, 10314, 8532, 11942, 9364, 426, 8974, 4754, 10431, 8326, 11713, 6142, 9842, 10238, 10335, 1805, 9407, 3529, 3434, 9381, 12071, 8174, 3030, 10446, 9928, 4737, 10996, 7515, 6860, 8517, 11871, 5908, 11836, 9522, 156, 3969, 3991, 6956, 10258, 10008, 6413, 11099, 2683, 8471, 6171, 11239, 4536, 3860, 5445, 4449, 6833, 147, 3789, 7540, 6752, 4467, 4789, 1041, 8775, 11271, 6364, 10316, 5574, 9945, 1278, 9027, 7210, 522, 2169, 7965, 4916, 4075, 6974, 8724, 654, 1987, 10587, 5529, 7083, 3199, 12233, 6874, 8646, 5862, 6136, 1728, 400, 7341, 6137, 382, 316, 11821, 3988, 6843, 5339, 6093, 8579, 6854, 1359, 1254, 973, 3879, 1922, 3998, 10256, 2302, 11684, 11785, 8076, 9260, 6695, 7507, 6403, 3600, 9026, 6077, 7665, 6068, 8687, 11868, 8209, 11184, 12147, 3477, 6608, 11314, 4212, 8851, 9445, 5009, 1956, 6281, 885, 8757, 1003, 12048, 58, 1010, 5468, 11502, 8807, 8120, 9162, 2920, 7048, 7377, 2049, 1321, 192, 7232, 7591, 4780, 8844, 11612, 5874, 6234, 8953, 9523, 10966, 9115, 12237, 6383, 9784, 10710, 431, 12138, 2127, 9450, 8332, 5808, 12268, 1120, 2535, 9462, 2873, 2434, 791, 4289, 9982, 150, 11641, 170, 6639, 2301, 874, 3821, 1681, 466, 11259, 6263, 2929, 7640, 6320, 10716, 3846, 3793, 6226, 5118, 502, 1901, 2602, 11410, 9696, 11307, 2276, 7899, 4218, 8531, 3454, 12281, 11832, 7988, 7766, 5776, 10440, 8494, 9021, 139, 3332, 2532, 3317, 10243, 2940, 2957, 1481, 11759, 9663, 778, 4504, 1701, 3466, 3578, 4697, 1095, 2643, 6508, 9244, 8195, 8838, 7911, 11048, 7937, 9461, 7455, 9577, 8449, 1842, 72, 4113, 1882, 6125, 1040, 10254, 5275, 1790, 11038, 6879, 6616, 9269, 5406, 4665, 3669, 5287, 4770, 11345, 1783, 5078, 7724, 4974, 3019, 8095, 2478, 9449, 4518, 3094, 11129, 7469, 6878, 2730, 1868, 2253, 10595, 10759, 7866, 3869, 6457, 10939, 10555, 8474, 10526, 2209, 9173, 189, 7119, 2672, 865, 11010, 2213, 8136, 8484, 11522, 12073, 12239, 6763, 769, 845, 3723, 10353, 7, 4360, 3285, 9135, 7235, 8360, 10583, 9060, 7559, 10268, 2832, 8717, 11007, 3753, 3941, 6919, 3536, 6203, 5646, 6105, 3120, 3480, 2171, 3007, 1265, 6685, 5530, 4099, 8345, 4855, 8520, 293, 9057, 9344, 5349, 9656, 10883, 9348, 11722, 5662, 7000, 9694, 3837, 4273, 9068, 5202, 11445, 4050, 7082, 4590, 7207, 682, 11309, 614, 1280, 1371, 12265, 11385, 9804, 5547, 5039, 11274, 1927, 11924, 11408, 7779, 9652, 5461, 9343, 9955, 11066, 7878, 10699, 1555, 10487, 1891, 5103, 3418, 7846, 3469, 6151, 2293, 417, 2338, 7596, 910, 5900, 751, 7570, 6586, 4483, 10783, 3065, 1658, 5618, 3502, 6500, 7246, 11463, 3090, 1398, 4987, 9916, 3670, 3808, 63, 5135, 4684, 3360, 5386, 9667, 4661, 510, 6921, 578, 1944, 450, 7073, 9261, 9929, 364, 5518, 11063, 8038, 7550, 1057, 9689, 7584, 3121, 11053, 9272, 5246, 7814, 10821, 8308, 3407, 11826, 3042, 10945, 10235, 2483, 5509, 12085, 10880, 7070, 4138, 12109, 9600, 7684, 6680, 636, 2947, 3982, 6617, 7790, 10552, 622, 3528, 4913, 4235, 3825, 8896, 4335, 2291, 3375, 146, 5268, 1687, 11883, 5189, 6094, 10886, 10485, 239, 2900, 994, 4554, 11777, 7619, 7383, 5464, 8665, 1892, 5598, 3344, 11260, 10344, 1325, 6565, 2148, 5959, 5797, 3959, 9847, 11041, 5115, 4939, 5690, 2455, 8342, 338, 8635, 9395, 10975, 1744, 7126, 4608, 20, 7287, 4119, 3343, 10138, 10767, 193, 9489, 10058, 6197, 8122, 6204, 923, 11251, 10669, 11914, 7711, 11912, 2185, 392, 11864, 1836, 9714, 11124, 8881, 1942, 3511, 5478, 2776, 11111, 3276, 8951, 10077, 2674, 6505, 1392, 11783, 11034, 7187, 412, 6701, 6444, 9233, 9761, 3744, 4963, 8314, 4883, 5835, 9202, 6613, 1417, 2257, 4505, 12229, 2717, 10754, 9089, 6453, 4566, 2260, 68, 3942, 7057, 8682, 1327, 4924, 4781, 11275, 448, 1445, 1131, 1125, 7429, 1275, 6781, 11113, 6555, 9520, 3114, 5966, 12077, 8400, 579, 5987, 5596, 6636, 4267, 10014, 9828, 1518, 3765, 8113, 7226, 3961, 3534, 8144, 10533, 3495, 4564, 6463, 2065, 11873, 814, 9839, 10584, 5416, 2164, 11573, 2110, 5211, 10423, 1208, 7562, 10381, 7751, 343, 8841, 9307, 10916, 3589, 717, 2429, 8186, 1721, 10753, 4209, 5412, 6296, 3278, 8774, 438, 1218, 5061, 4227, 3368, 612, 4238, 8067, 1526, 540, 125, 6162, 4840, 4032, 9126, 11943, 7885, 1389, 10221, 464, 1928, 3678, 4265, 9084, 8930, 11197, 5209, 8840, 1136, 9051, 8581, 7800, 3171, 2926, 10463];

    //stateful initialisation
    function setUp() public {
        bytes32 salt = keccak256(abi.encodePacked("ZKnox"));

        falcon = new ZKNOX_falcon();

        //non compact contract
        address a_psirev; //address of the precomputations bytecode contract
        address a_psiInvrev; //address of the precomputations bytecode contract

        (a_psirev, a_psiInvrev) = Deploy(salt);

        falcon.update(a_psirev, a_psiInvrev);
    }

    //kat vector 0 from NIST submission
    function test_kats_vector0() public {
        // forgefmt: disable-next-line
        bytes memory pk=hex"096BA86CB658A8F445C9A5E4C28374BEC879C8655F68526923240918074D0147C03162E4A49200648C652803C6FD7509AE9AA799D6310D0BD42724E0635920186207000767CA5A8546B1755308C304B84FC93B069E265985B398D6B834698287FF829AA820F17A7F4226AB21F601EBD7175226BAB256D8888F009032566D6383D68457EA155A94301870D589C678ED304259E9D37B193BC2A7CCBCBEC51D69158C44073AEC9792630253318BC954DBF50D15028290DC2D309C7B7B02A6823744D463DA17749595CB77E6D16D20D1B4C3AAD89D320EBE5A672BB96D6CD5C1EFEC8B811200CBB062E473352540EDDEF8AF9499F8CDD1DC7C6873F0C7A6BCB7097560271F946849B7F373640BB69CA9B518AA380A6EB0A7275EE84E9C221AED88F5BFBAF43A3EDE8E6AA42558104FAF800E018441930376C6F6E751569971F47ADBCA5CA00C801988F317A18722A29298925EA154DBC9024E120524A2D41DC0F18FD8D909F6C50977404E201767078BA9A1F9E40A8B2BA9C01B7DA3A0B73A4C2A6B4F518BBEE3455D0AF2204DDC031C805C72CCB647940B1E6794D859AAEBCEA0DEB581D61B9248BD9697B5CB974A8176E8F910469CAE0AB4ED92D2AEE9F7EB50296DAF8057476305C1189D1D9840A0944F0447FB81E511420E67891B98FA6C257034D5A063437D379177CE8D3FA6EAF12E2DBB7EB8E498481612B1929617DA5FB45E4CDF893927D8BA842AA861D9C50471C6D0C6DF7E2BB26465A0EB6A3A709DE792AAFAAF922AA95DD5920B72B4B8856C6E632860B10F5CC08450003671AF388961872B466400ADB815BA81EA794945D19A100622A6CA0D41C4EA620C21DC125119E372418F04402D9FA7180F7BC89AFA54F8082244A42F46E5B5ABCE87B50A7D6FEBE8D7BBBAC92657CBDA1DB7C25572A4C1D0BAEA30447A865A2B1036B880037E2F4D26D453E9E913259779E9169B28A62EB809A5C744E04E260E1F2BBDA874F1AC674839DDB47B3148C5946DE0180148B7973D63C58193B17CD05D16E80CD7928C2A338363A23A81C0608C87505589B9DA1C617E7B70786B6754FBB30A5816810B9E126CFCC5AA49326E9D842973874B6359B5DB75610BA68A98C7B5E83F125A82522E13B83FB8F864E2A97B73B5D544A7415B6504A13939EAB1595D64FAF41FAB25A864A574DE524405E878339877886D2FC07FA0311508252413EDFA1158466667AFF78386DAF7CB4C9B850992F96E20525330599AB601D454688E294C8C3E";
        // forgefmt: disable-next-line
        bytes memory sm=hex"026833B3C07507E4201748494D832B6EE2A6C93BFF9B0EE343B550D1F85A3D0DE0D704C6D17842951309D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8290765843D1E460D17A527D2BCA405BD55BBC7DA09A8C620BE0AF4A767D9DB96B80F55E466676751EAABA7B93B86D71132DAA0EB376782B9EEE37519CE10FDD33FE9F29312C31D8736206D165CF4C528AA3DDC017845E1F0DD5B0A44FF961C42D874A95533E5B438982F524CA954D87533BFBE42C63FF2ABC77A34C79DB55A99171BBCB72C842A6530AF2F753F0C34AC632F9F1E7949F0BF6C67665B27722A8857D626B6FF1A136D923A39F4069B7477FF946E5247A6627791D49B59EDC9E2525A860E6E9828D18F64A9F17222E8166A02453859BBDA0B8186D8C9928BB571E4146401D7430E225904673AD21CCAC54C146C248A1DD69AB6491E901D6D71B152155BE97DE057F3916A3F1B4273308C29B2F4D9697167B90681B1583ED930A71E990467DEA368134BECEEBD597F9BEC922E816F1B0570D728F4AE0464C1F797657F87A4E52DCDCAEB9272662EA66D7C6CD8781B31AF555AD93F5F65E75816CB8DC306BB67E592B5261BACA7C509629EA2AF8ABB80CBA89EE535B76DFD9CCBBE3BF48F2BC8AA34B26E1103291053F5CB8DE3A45AFA5A76DF8B2122ED2C82FBCF2259290D41A14F86B12F35F5D49762B34CFF13EE7E42EDEC70201D7F37C33316288FA3078E36E58108865C3CFE263D563692043DECC62F3426F86061285B7B1B336F56FF41BB65E9CD6D9B92FD90F864AA1C923CB8C755F5CDE1770D862595427149D7721AAAB5D194AEA9ACDECA15BE43CBA6A62B5A33909E9FC4DA1C5814FBD7CD6A2FA572E318B42C6C319140B86E66392580A11A2B431F44C1F9270E4F7B2490F3B325A9977A71A575915636635B9969DBD6D220B24C3D99CEBBBD834B88222BD08C3ABE124E80";
        // forgefmt: disable-next-line
        uint256[512] memory sigDecompress=[uint256(0x87), 0x2e6b, 0x8f, 0x9e, 0x118, 0x2fdf, 0x2f18, 0x27, 0x2f5c, 0x2e9c, 0x81, 0x2f44, 0x56, 0x2ea3, 0x2f8b, 0x4, 0x2fd9, 0x2f75, 0x5, 0x2fa1, 0x5e, 0x29, 0x2fce, 0x2fa8, 0x2eca, 0x6b, 0x1, 0x2f2c, 0x2f1d, 0x2fe8, 0x13b, 0x2f2d, 0x2f97, 0xd7, 0x3d, 0x2fee, 0x70, 0x2fcc, 0x2ff9, 0x32, 0x2f4c, 0x87, 0x66, 0x2fa8, 0x2f40, 0x73, 0x2fc6, 0x1b, 0x51, 0x39, 0x2efd, 0x2f86, 0x4c, 0x2f02, 0xbe, 0x49, 0x12, 0x2efb, 0x2f29, 0x2fb4, 0x110, 0x2f4d, 0x65, 0x2fe3, 0xb1, 0x28, 0xd4, 0x2f93, 0x2e41, 0xf8, 0x17, 0xf, 0xd, 0x2f56, 0x2efc, 0x13, 0x2f85, 0x61, 0x2f79, 0x16c, 0x2faf, 0x4a, 0x153, 0x2f8f, 0x2ecd, 0x2fbd, 0x2fff, 0x2f17, 0xa6, 0x52, 0xd3, 0x2f7a, 0x4c, 0x2fa2, 0x2f43, 0x18b, 0x2ff2, 0x2f08, 0x57, 0x1d, 0x2fb0, 0xcc, 0x2f1a, 0x2f4c, 0xea, 0x2f70, 0x2fbb, 0x2f23, 0xee, 0x164, 0xa, 0x32, 0x30, 0xde, 0x7b, 0x53, 0x2fa0, 0x10d, 0x58, 0x2ff5, 0x7c, 0x2f90, 0x2eb2, 0x49, 0x2f20, 0x2f06, 0x2ff5, 0x2fa8, 0x2d, 0xa7, 0x2fb9, 0xd4, 0xa, 0x2f8c, 0x93, 0x6d, 0x2f05, 0x2ee0, 0x2fcb, 0x2eef, 0x2fb0, 0x2f62, 0x1, 0x4d, 0xf4, 0x2fa2, 0x2f85, 0x46, 0x2f37, 0x23, 0x2f5b, 0x2ff8, 0x2fc5, 0x9d, 0x26, 0x2fd5, 0x2f94, 0x2fee, 0x2f78, 0x25, 0x50, 0x2ffe, 0xb7, 0xb0, 0x46, 0x18, 0x2f95, 0xaa, 0x2f10, 0x2fb9, 0x97, 0x2, 0x2fe7, 0x101, 0x14, 0x2fbf, 0x2fe6, 0xfb, 0x5, 0x3000, 0xd, 0x163, 0xb2, 0x45, 0x2f4c, 0x2fba, 0x20, 0xc6, 0x80, 0x2f2a, 0x10c, 0x2f3d, 0x2c, 0x84, 0x2fe5, 0x2fab, 0x21, 0x2f68, 0x62, 0x1cc, 0x46, 0x2ffd, 0x22, 0xe, 0x2fab, 0xb5, 0x2f4f, 0x23, 0x2d5d, 0x2fab, 0x2ed3, 0x2f50, 0xc8, 0x55, 0x17d, 0x7d, 0x2fc1, 0x5f, 0x2fe5, 0x16, 0x47, 0x2fbb, 0x2ee0, 0x2fb5, 0x2f7d, 0x2efc, 0x2fcf, 0x2f98, 0x65, 0x4b, 0x96, 0x2f13, 0x6, 0x83, 0x2ff7, 0x2ffe, 0x2ea6, 0x30, 0x14e, 0x2f98, 0x20, 0x19, 0x2f12, 0x46, 0x2f61, 0x34, 0x7d, 0x3b, 0x5e, 0xd9, 0x2f03, 0x2fc3, 0x2f6f, 0x97, 0x2, 0x2f45, 0x2f51, 0x15c, 0x2f53, 0x47, 0x4a, 0x2fc1, 0x119, 0x2ffe, 0x2f23, 0xf6, 0x5f, 0x2fbe, 0x2fdd, 0x2f37, 0xee, 0x2f48, 0x75, 0x2f6f, 0x2fb8, 0xb1, 0x2fad, 0x2f66, 0xfc, 0x2f4e, 0x2ffa, 0x83, 0x2fe9, 0x2f52, 0xd5, 0x2fd4, 0x27, 0x2faa, 0x2fcf, 0x2f1a, 0xe0, 0x6c, 0x71, 0x70, 0x2f7e, 0x76, 0x2fe2, 0x2c, 0xab, 0x49, 0xd, 0x2fd5, 0x4f, 0x114, 0xac, 0xcf, 0xc5, 0xfc, 0xd7, 0x2f41, 0x2f6a, 0x44, 0x2f13, 0xcd, 0x2f4a, 0x2fca, 0x2f95, 0x2fb5, 0x77, 0x2ff3, 0x2f07, 0x9e, 0xde, 0x95, 0x9a, 0x64, 0x2f49, 0x110, 0x2fed, 0x90, 0x4f, 0x2f53, 0x71, 0x78, 0x2eaf, 0x6b, 0x2faf, 0x2f5a, 0x2fca, 0x2fbc, 0x121, 0x97, 0x2fdc, 0x20, 0x7d, 0x2eb2, 0x12, 0x2fef, 0x21, 0xd0, 0x2f60, 0x1be, 0x2f55, 0x12f, 0x2fd2, 0xdd, 0x25, 0x2f50, 0x66, 0x33, 0x2f89, 0x3e, 0x2fb2, 0x2ff1, 0x76, 0x2f15, 0x2fc1, 0x0, 0x2faa, 0x2f9b, 0x2f91, 0x2fe8, 0x116, 0xc4, 0x2f0d, 0x2ffe, 0x2ef3, 0x2eca, 0xe0, 0x8, 0xc, 0x70, 0x2f9a, 0x2f1f, 0x2f72, 0x156, 0x2fcd, 0xa0, 0x8f, 0x2f95, 0x2f75, 0x79, 0xc2, 0x2e43, 0x3000, 0x89, 0x8b, 0x2fc4, 0x11b, 0x2f66, 0x2f97, 0x2fc2, 0x2fe1, 0x2f46, 0x2fea, 0xce, 0x2fd4, 0x66, 0x2f38, 0x2e86, 0xf, 0xc, 0x2a, 0x8e, 0xa4, 0x2f9c, 0x2f75, 0x2f2c, 0x2f8c, 0x2fe6, 0x2ffc, 0x2f49, 0x2fd1, 0x2f78, 0x2f6c, 0x9, 0x2f77, 0x3a, 0x2fa5, 0x8d, 0xd5, 0x2fd3, 0x99, 0x2b, 0x54, 0x2fd5, 0x2fc4, 0xa8, 0x5b, 0x2f39, 0x2f9c, 0x2fdb, 0xcc, 0x5a, 0x2ede, 0x2f39, 0x13d, 0x2f05, 0x36, 0x10e, 0xe0, 0x4f, 0x7a, 0x2f0e, 0x16a, 0x17d, 0x5c, 0x71, 0x18, 0xe8, 0xe3, 0x2efb, 0x2f70, 0x2, 0x2f3e, 0x2fb5, 0x2f73, 0x25, 0x81, 0x8, 0x2fdf, 0xe8, 0x2ff2, 0x44, 0x2ffe, 0x2f9d, 0xb8, 0x2fb8, 0x2fa3, 0x2f6f, 0x21, 0x2fb3, 0x2ee8, 0xea, 0x2f6a, 0x2f98, 0x2ef4, 0xdd, 0x2f70, 0x58, 0x2e4e, 0x2fd4, 0x2f68, 0x2f5a, 0x2f44, 0x2fcd, 0x90, 0x64, 0x30, 0x2f95, 0x2fe5, 0x2f2a, 0x2fa3, 0x2f7e, 0x12e, 0x84, 0x15, 0x2fb1, 0x98, 0x2fac, 0x2ea0, 0xa7];
        // forgefmt: disable-next-line
        uint256[512] memory KpubDecompress=[uint256(0x1aea), 0x6cb, 0x1962, 0x28f4, 0x1172, 0x1a5e, 0x130a, 0x374, 0x2fb2, 0x79c, 0x2195, 0x1f68, 0x149a, 0x1232, 0x1024, 0x1807, 0x1340, 0x147c, 0xc5, 0x22e4, 0x2924, 0x2006, 0x1231, 0x2528, 0xf1, 0x2fd7, 0x1426, 0x2e9a, 0x29e6, 0x1d63, 0x434, 0xbd4, 0x9c9, 0xe06, 0xd64, 0x2018, 0x1881, 0x3000, 0x1d9f, 0xa5a, 0x2151, 0x2b17, 0x154c, 0x8c3, 0x12e, 0x4fc, 0x24ec, 0x69e, 0x996, 0x185b, 0xe63, 0x16b8, 0xd1a, 0x1828, 0x1ffe, 0x29a, 0x2a08, 0xf17, 0x29fd, 0x226, 0x2ac8, 0x1f60, 0x7af, 0x1717, 0x1489, 0x2bab, 0x95b, 0x1888, 0x23c0, 0x903, 0x959, 0x2d63, 0x20f5, 0x2845, 0x1fa8, 0x155a, 0x250c, 0x187, 0x356, 0x9c6, 0x1e3b, 0x1304, 0x967, 0x29d3, 0x1ec6, 0x13bc, 0xa9f, 0xcbc, 0x2fb1, 0x11d6, 0x2456, 0xc44, 0x1ce, 0x2ec9, 0x1e49, 0x2302, 0x14cc, 0x18bc, 0x2553, 0x1bf5, 0x345, 0x1028, 0xa43, 0x1c2d, 0xc27, 0x7b7, 0x2c0a, 0x2682, 0xdd1, 0xd46, 0xf68, 0x1774, 0x2565, 0x1cb7, 0x1f9b, 0x116d, 0x834, 0x1b4c, 0xeab, 0x189d, 0xc83, 0x2be5, 0x299c, 0x2bb9, 0x1b5b, 0xd5c, 0x7bf, 0x2c8b, 0x2044, 0x200c, 0x2ec1, 0x22e4, 0x1ccd, 0x1254, 0x3b7, 0x1ef8, 0x2be5, 0x99f, 0x2337, 0x11dc, 0x1f1a, 0x73f, 0x31e, 0x26bc, 0x2dc2, 0x1756, 0x9c, 0x1f94, 0x1a12, 0x1b7f, 0xdcd, 0x240b, 0x2da7, 0xa9b, 0x1462, 0x2a38, 0x29b, 0x2b0a, 0x1c9d, 0x1ee8, 0x13a7, 0x221, 0x2bb6, 0x8f5, 0x2fee, 0x2f43, 0x28fb, 0x1e8e, 0x1aa9, 0x255, 0x2041, 0xfaf, 0x2003, 0x2018, 0x1106, 0x1303, 0x1db1, 0x2f6e, 0x1d45, 0x1699, 0x1c7d, 0x7ad, 0x2f29, 0x1ca0, 0x320, 0x198, 0x23cc, 0x17a1, 0x21c8, 0x2a29, 0xa62, 0x125e, 0x2855, 0xdbc, 0x2409, 0xe12, 0x149, 0xa2d, 0x1077, 0xf1, 0x23f6, 0xd90, 0x27db, 0x509, 0x1dd0, 0x4e2, 0x5d, 0x2707, 0x22ea, 0x1a1f, 0x2790, 0xa8b, 0xaea, 0x1c01, 0x2df6, 0x23a0, 0x2dce, 0x24c2, 0x29ad, 0xf51, 0x22ef, 0x2e34, 0x1574, 0xaf2, 0x813, 0x1dc0, 0xc72, 0x5c, 0x1cb3, 0xb64, 0x1e50, 0xb1e, 0x19e5, 0xd85, 0x26ab, 0x2bce, 0x2837, 0x2b58, 0x758, 0x1b92, 0x122f, 0x1969, 0x1ed7, 0xb97, 0x12a0, 0x176e, 0x23e4, 0x1046, 0x272b, 0x20ab, 0x13b6, 0x12d2, 0x2bba, 0x1f7e, 0x2d40, 0x296d, 0x2be0, 0x574, 0x1d8c, 0x5c1, 0x627, 0x11d9, 0x2102, 0x2094, 0x13c1, 0x47f, 0x2e07, 0x2511, 0x1083, 0x2678, 0x246e, 0x18fa, 0x1b09, 0x1703, 0x1356, 0x2063, 0x10df, 0x1379, 0x5df, 0xe8d, 0xfe9, 0x2eaf, 0x4b8, 0x2dbb, 0x1fae, 0xe49, 0x2120, 0x1612, 0x2c64, 0x2961, 0x1f69, 0x1fb4, 0x1793, 0xdf8, 0x24e4, 0x27d8, 0x2ea1, 0x2aa, 0x2187, 0x19c5, 0x11c, 0x1c6d, 0x31b, 0x1f7e, 0xaec, 0x2646, 0x1683, 0x2b6a, 0xe9c, 0x9de, 0x1e4a, 0x2afa, 0x2be4, 0x22aa, 0x2577, 0x1592, 0x2dc, 0x2b4b, 0x2215, 0x2c6e, 0x18ca, 0x60b, 0x43d, 0x1cc0, 0x2114, 0x3, 0x19c6, 0x2f38, 0x2258, 0x1872, 0x2d19, 0x2400, 0x2b6e, 0x15b, 0x2a07, 0x2a79, 0x1251, 0x1d19, 0x2840, 0x622, 0x29b2, 0x20d4, 0x713, 0x2a62, 0x308, 0x1dc1, 0x944, 0x19e3, 0x1c90, 0x18f0, 0x1100, 0x2d9f, 0x29c6, 0xf7, 0x2f22, 0x1afa, 0x153e, 0x82, 0x912, 0x242f, 0x11b9, 0x1b5a, 0x2f3a, 0x7b5, 0x29f, 0x16fe, 0x2fa3, 0x17bb, 0x2eb2, 0x1265, 0x1f2f, 0x1a1d, 0x2df0, 0x2557, 0xa93, 0x1d0, 0x2eba, 0x2304, 0x11ea, 0x65a, 0xac4, 0x36b, 0x2200, 0x37e, 0xbd3, 0x126d, 0x114f, 0x29e9, 0x4c9, 0x1977, 0x27a4, 0x169b, 0xa29, 0x22eb, 0x2026, 0x25c7, 0x1138, 0x4e2, 0x1838, 0x1f2b, 0x2f6a, 0x74f, 0x6b1, 0x2748, 0xe77, 0x1b47, 0x2cc5, 0x8c5, 0x251b, 0x1e01, 0x2005, 0x8b7, 0x25cf, 0x163c, 0x1606, 0x13b1, 0x1f34, 0x5d1, 0x1ba0, 0xcd7, 0x24a3, 0x2a3, 0xe0d, 0x23a2, 0xea0, 0x1c06, 0x232, 0x750, 0x1562, 0x1b9d, 0x2871, 0x217e, 0x1edc, 0x786, 0x2d9d, 0x14fb, 0x2cc2, 0x2581, 0x1a04, 0xb9e, 0x49b, 0xfcc, 0x16a9, 0x932, 0x1ba7, 0x1842, 0x25ce, 0x74b, 0x18d6, 0x1b5d, 0x2dd5, 0x210b, 0x29a2, 0x298c, 0x1ed7, 0x283f, 0x496, 0x2825, 0x8b8, 0x13b8, 0xfee, 0xf86, 0x138a, 0x297b, 0x1ced, 0x1d54, 0x129d, 0x15b, 0x1941, 0xa13, 0x24e7, 0x2ab1, 0x1657, 0x164f, 0x2bd0, 0x1fab, 0x96a, 0x64a, 0x15d3, 0x1e52, 0x1101, 0x1e87, 0x20ce, 0x1877, 0x221b, 0x12fc, 0x1fe, 0x2031, 0x542, 0x252, 0x104f, 0x2dfa, 0x456, 0x466, 0x199e, 0x2ff7, 0x20e1, 0x2daf, 0x1f2d, 0xc9b, 0x2142, 0x192f, 0x25b8, 0x2052, 0x14cc, 0x599, 0x2ad8, 0x1d4, 0x151a, 0x8e2, 0x2532, 0xc3e];
        // forgefmt: disable-next-line
        uint256[512] memory expectedHashNIST=[uint256(0x16e0),0x25c8,0x162,0x25f7,0x1d15,0x188b,0x28de,0x218c,0x55,0xf00,0x9a,0x12f5,0x2652,0x9c2,0x1891,0x2bc1,0x2a24,0x544,0x1317,0x26c9,0x18ce,0x2c55,0x233e,0x2093,0x65c,0x1a28,0x1b6d,0x1d19,0x2e71,0x1a0f,0x194c,0x22d0,0x1560,0x238f,0x2d65,0x1379,0x2e17,0x1e63,0x185c,0x1310,0xd8d,0x9bd,0x1c7,0x2308,0x1ebd,0x268f,0xed3,0x2906,0x18,0x240f,0x684,0x2af7,0x1731,0x2953,0x1a7c,0x57f,0x95,0x39a,0x374,0x13e4,0x1d3d,0x2a9e,0xc9f,0x264e,0x23dd,0x12d5,0x1e95,0x27d5,0x2681,0x692,0x15b7,0x2667,0x27c0,0xeb5,0x2747,0x2f30,0x1411,0x2df7,0x1e8e,0x952,0x1d94,0x1c04,0x9ef,0xe97,0x16d2,0x25a3,0x1902,0x2c98,0x20c3,0x232e,0x26b1,0x1940,0x1e67,0x1f97,0x1d5,0x165b,0x229f,0x528,0x104b,0x134e,0x1f64,0x1c01,0x427,0x586,0x10c2,0xfaf,0xb46,0x1590,0x1cee,0x188b,0x6bf,0x2f5,0xa1d,0x1394,0x289e,0x15b,0xb81,0x1381,0xdcf,0x2f46,0x1015,0x2735,0x24fd,0xe09,0x25f,0x1a0b,0x2c24,0xb5f,0x1576,0x28ed,0x1359,0x1567,0x1f4c,0x1a59,0x10e7,0x1e3b,0x1352,0x726,0x2224,0x2bf1,0x28b2,0x539,0x86f,0x17d7,0x28b3,0x1ac4,0x2aa6,0x27a,0x863,0x2b13,0x73,0x2e9e,0x7d8,0x14a3,0x25e0,0x14db,0x1faf,0x2960,0x1168,0xf50,0x2b83,0x1ba8,0x1aae,0x113,0x2cfc,0x1ef8,0x2152,0x1e0f,0x693,0x2ced,0x16ef,0x2b9d,0x1bbc,0x32a,0x1eb1,0x1655,0x27b6,0x23aa,0x2bba,0x29af,0x218,0x2e1,0x2fd8,0x18d1,0x2160,0xf61,0x13aa,0xf4d,0x2207,0x210e,0x288a,0xc5d,0x118d,0x2340,0x85c,0x234b,0x1d24,0x126f,0xde0,0x1b67,0x1175,0x23d6,0x176a,0x23be,0x1916,0x2b7a,0xbb8,0x7b8,0x2262,0x7f1,0x2cb1,0x748,0x215f,0x263,0xb77,0x2cae,0x903,0x16e4,0x15b2,0x2e5,0x1977,0x22b5,0xb8a,0x1654,0x1b52,0xdd0,0x1bfc,0x14a0,0xd85,0x17cf,0x157a,0x2c85,0x2d48,0x246b,0x2f57,0x1411,0xb6b,0x15ab,0x243e,0x1a4a,0x9d1,0x20ec,0x287c,0x912,0x2eea,0x2dc7,0x117c,0x2175,0x7a6,0x927,0x84e,0x1a67,0x183f,0x21b9,0x2518,0x16c3,0x14db,0xa69,0x1169,0x2fcf,0x18e1,0x496,0x18a1,0x29e6,0x17ae,0x5be,0x28,0xdf4,0x16c1,0x2428,0xbd6,0x1ffd,0x118f,0x2acd,0x1d84,0x28cc,0xf59,0xd08,0x1e27,0x1e15,0xf50,0xca8,0x1508,0x180e,0x2889,0x2583,0x2d37,0x2c7b,0x1973,0x17f,0x2ac2,0x2862,0x2aad,0x252c,0xa01,0x2420,0x2ce1,0x1765,0x172b,0x2a6c,0x16fc,0x24e8,0x2efd,0x1099,0x1271,0x2c93,0x1974,0x397,0x24c6,0xfb5,0xafd,0x1921,0xfdc,0x1855,0x246c,0x20cc,0xe47,0xfc6,0x2c89,0x2c7f,0x19e0,0x1b35,0x4a3,0x1e62,0x2535,0x14aa,0x11ed,0x6ea,0x266c,0x737,0x1477,0x2e94,0x1319,0x2014,0x6ab,0x1667,0x136e,0x9e3,0x1c1,0xad0,0x2f20,0x2683,0x2853,0xd83,0x127f,0x25bd,0x180,0x4a5,0x1d7c,0x161d,0x2e44,0x257b,0x1a5d,0x790,0x1b56,0x2dfe,0xb3d,0xd39,0x89f,0x2690,0x10fe,0x2b45,0x26e1,0x1c7,0x9f8,0x219d,0x26da,0x192a,0x1c4e,0xc55,0x2a61,0x1230,0x683,0x24ef,0x613,0x2194,0x1577,0x378,0x1f71,0x2b14,0xbc7,0x2854,0xb91,0xb00,0x24a3,0x22d2,0x15ac,0x1b36,0x2098,0x230c,0x2306,0xe0,0x197c,0x1f1a,0x1b66,0x10ad,0x2ec1,0x25b7,0x18a5,0x2b1a,0xb9b,0x1a1,0x892,0x23e0,0x226a,0xa75,0x2fb,0x1cd9,0x1fa3,0x7c1,0x2d62,0x10f7,0x1226,0x10ea,0x8cf,0xd05,0x1172,0x1937,0x1da3,0x1d3b,0x183d,0x11c9,0x15dd,0xc6b,0x1b41,0x193e,0x1b16,0x1d28,0x2dd4,0x23c6,0x1c18,0x1131,0x17d1,0x2e8c,0x280,0x2357,0x469,0x185b,0x1e70,0x27aa,0x1dbf,0x2dc0,0x1276,0x1b26,0x10bf,0x153e,0xeff,0xdc2,0x21ce,0x11f,0x2db0,0x1a96,0x8a1,0x2256,0x2010,0x24ab,0x1de6,0x273b,0x2b81,0xf27,0x2cf9,0x2c82,0x14f,0xe61,0x16e6,0x16ef,0xca0,0x5b,0x17c0,0xca5,0x10d6,0x1800,0x2f88,0x27e7,0x21d5,0x29b7,0x2a9d,0x945,0x1bf9,0x1d48,0x2b2a,0x19aa,0x22b,0x2e03,0x68c,0xe1d,0x200d,0x1ec5,0xa31,0xf47,0x2c4e,0x23a,0x2256,0x2dad,0x1784,0xb75,0x1681,0x1c74,0x3ea,0x20c5,0x2250,0x994,0x1682,0xf42,0x1eee,0x12aa,0x1cd,0x1ba0,0x15f6,0x1c19,0x2c41,0xc01];

        uint256[] memory kpub;
        uint256[] memory s2;

        uint256[] memory cs2;
        bytes memory salt;
        bytes memory message;

        (kpub, s2, salt, message) = decompress_KAT(pk, sm);
        uint256[] memory hashed = hashToPointNIST(salt, message);

        for (uint256 i = 0; i < 512; i++) {
            assertEq(s2[i], sigDecompress[i]);
            assertEq(kpub[i], KpubDecompress[i]);
            assertEq(hashed[i], expectedHashNIST[i]);
        }
        //Display_HexArray(" hashToPoint", hashed);

        //Display_HexArray(" public key canonical form", kpub);
        //Display_HexArray("sig canonical form", s2);

        uint256[] memory ntth = _ZKNOX_NTT_Compact(_ZKNOX_NTTFW_vectorized(kpub));

        cs2 = _ZKNOX_NTT_Compact(_ZKNOX_NTTFW_vectorized(s2));

        console.log("ntth length:", ntth.length);
        console.log("salt:");
        console.logBytes(salt);

        console.log("message:");
        console.logBytes(message);

        Display_HexArray("ntt public key form", ntth);
        Display_HexArray("s2", cs2);

        bool result = falcon.verify(message, salt, cs2, ntth);

        console.log("result", result);
    }
}
