// code generated using pythonref/generate_falcon_test_vectors.py.
pragma solidity ^0.8.25;

import {Test, console} from "forge-std/Test.sol";
import "../src/ZKNOX_NTT.sol";
import "../src/ZKNOX_falcon_utils.sol";
import "../src/ZKNOX_ethfalcon.sol";
import "../src/ZKNOX_falcon_core.sol";
import "../src/ZKNOX_falcon_deploy.sol";

contract ZKNOX_FalconTest is Test {
    ZKNOX_ethfalcon falcon;

    //stateful initialisation
    function setUp() public {
        bytes32 salt = keccak256(abi.encodePacked("ZKnox"));

        falcon = new ZKNOX_ethfalcon();
    }

    function testVector0() public view {
        // public key
        // uncompressed pk = [8494, 9875, 5391, 1879, 708, 7214, 6161, 7426, 130, 4397, 5498, 8631, 2407, 9977, 1931, 7029, 2352, 991, 9225, 9158, 8285, 955, 12093, 4942, 2664, 778, 3383, 11334, 11105, 10565, 3474, 7022, 2706, 1183, 6455, 1113, 1385, 4181, 5984, 1364, 6193, 7574, 2703, 11943, 2783, 9363, 10213, 6442, 10177, 6408, 8584, 2766, 1171, 7190, 253, 3679, 2625, 7796, 8043, 5703, 2065, 459, 1063, 5107, 475, 7421, 2950, 1363, 9991, 2222, 1222, 2148, 12181, 10486, 7239, 2220, 8612, 10147, 11233, 10557, 3816, 7607, 2043, 9737, 1487, 6402, 7156, 4425, 11155, 8706, 2669, 9984, 4688, 8809, 3126, 5346, 8576, 11683, 12012, 2541, 7468, 3700, 12043, 6636, 274, 7905, 1637, 11874, 8091, 6388, 2132, 3454, 5363, 11278, 8138, 4104, 3664, 6955, 7423, 9252, 5243, 717, 9654, 11089, 2662, 5813, 2725, 3997, 7882, 8147, 1972, 5360, 9958, 6537, 9866, 1837, 9724, 2515, 6909, 11077, 7382, 8940, 10578, 66, 991, 11249, 12078, 5661, 297, 4236, 5240, 10615, 8894, 6752, 1599, 8903, 4789, 8794, 721, 143, 708, 3893, 9853, 10975, 12240, 4519, 3983, 9215, 420, 8767, 11835, 10220, 3914, 10930, 3539, 11989, 4395, 2901, 1427, 7668, 5489, 4941, 6674, 12249, 5831, 3530, 12171, 10261, 775, 894, 11564, 5706, 3810, 11670, 9294, 9899, 5872, 9997, 9218, 8757, 7970, 11087, 3323, 4779, 9473, 12172, 9576, 2989, 1404, 11193, 376, 7670, 9520, 11007, 10252, 55, 8952, 3523, 8081, 2097, 6848, 11377, 6165, 5777, 12044, 12000, 8941, 1892, 8951, 4426, 8954, 9118, 4116, 7340, 10060, 9311, 7351, 11995, 9476, 6246, 2151, 1574, 4104, 12141, 880, 3709, 2410, 8871, 1771, 8281, 11433, 8802, 5517, 7260, 8932, 2340, 11134, 8858, 1110, 2811, 6777, 10364, 9649, 7387, 1996, 6561, 7065, 2190, 12094, 11677, 10503, 2145, 11418, 10041, 9467, 109, 5395, 5299, 7200, 11203, 3966, 6117, 1065, 3458, 5521, 12182, 6969, 1134, 7108, 648, 285, 8703, 100, 12113, 6653, 7377, 6804, 1717, 9467, 10055, 4009, 3545, 7482, 28, 4253, 47, 12043, 7057, 1286, 10754, 3347, 3280, 3738, 3323, 7715, 6500, 350, 12245, 11148, 1705, 6450, 336, 2873, 176, 9059, 2491, 7546, 2877, 7417, 9768, 2526, 2893, 551, 9462, 1754, 3452, 7819, 10010, 844, 4087, 8473, 5019, 9155, 12253, 8338, 10746, 6837, 9485, 7469, 4277, 8497, 10631, 2810, 5104, 5895, 7050, 298, 1144, 3489, 7210, 11509, 4913, 7844, 1396, 9705, 11371, 1646, 3089, 7918, 12187, 6710, 106, 6810, 3783, 9423, 180, 3100, 228, 6112, 9775, 3407, 10474, 3340, 232, 11654, 454, 2551, 6891, 10879, 2473, 6594, 9791, 6870, 5661, 5877, 8893, 3075, 4752, 1135, 3859, 2495, 5101, 1384, 5825, 5539, 1734, 4694, 7444, 8731, 4653, 7432, 7238, 9267, 1719, 9790, 6698, 6049, 2948, 4962, 8614, 2381, 2866, 6384, 11786, 775, 4155, 7072, 9670, 2011, 4684, 6722, 1077, 7784, 7614, 217, 90, 9505, 4379, 1799, 1159, 6056, 11386, 5041, 3383, 102, 12112, 9520, 8228, 9636, 668, 210, 4688, 3381, 2281, 2261, 11425, 7820, 2252, 9565, 7195, 8650, 7037, 11164, 9071, 1220, 1974, 6262, 8288, 4926, 1069, 206, 7288, 4139, 4020, 728, 10582, 10621, 4568, 5054, 9984, 6837, 236, 7164, 9106, 9007, 3765, 700, 4173, 1524, 11782, 6690, 9860, 2926, 538, 11340, 6889, 10459, 7255, 7705, 6244, 10579, 7541, 10909, 11397, 9092, 115, 2610, 5294, 10509, 3454, 4985, 2496]
        // forgefmt: disable-next-line
        uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
        uint256[] memory pkc = new uint256[](32);
        for (uint256 i = 0; i < 32; i++) {
            pkc[i] = tmp_pkc[i];
        }
        // signature s2
        // uncompressed s2 = [170, 11878, 88, 12083, 12279, 18, 18, 12138, 12271, 92, 12098, 321, 225, 12046, 311, 107, 31, 252, 12186, 207, 12148, 172, 128, 12200, 122, 12207, 140, 141, 11982, 12158, 96, 175, 12094, 168, 12241, 12147, 1, 142, 14, 11996, 70, 9, 38, 12, 12002, 12153, 27, 10, 40, 12274, 12272, 155, 12243, 12253, 125, 256, 12236, 12203, 247, 97, 12120, 103, 21, 12207, 12099, 108, 12252, 12214, 45, 183, 12261, 48, 183, 143, 240, 11822, 70, 65, 35, 12242, 6, 12123, 12267, 51, 229, 12215, 23, 19, 239, 68, 12268, 12165, 42, 180, 12269, 12179, 12217, 138, 12248, 12136, 177, 12265, 95, 38, 12259, 12197, 145, 11880, 12075, 12176, 12110, 50, 224, 61, 198, 98, 12104, 11928, 32, 71, 54, 45, 175, 84, 12248, 163, 399, 12219, 106, 17, 12109, 175, 12250, 71, 24, 123, 224, 12004, 357, 12, 94, 48, 251, 44, 85, 131, 61, 110, 75, 12162, 149, 128, 55, 65, 12028, 12262, 12039, 197, 207, 111, 12121, 12177, 12244, 12221, 12256, 125, 12263, 12074, 12155, 186, 119, 12134, 48, 12207, 176, 12137, 0, 432, 12132, 12053, 12171, 99, 12071, 12101, 12242, 12246, 12155, 52, 12217, 12039, 12276, 12209, 80, 12227, 352, 72, 91, 12135, 43, 38, 12009, 12203, 12203, 12139, 12264, 85, 12213, 75, 12162, 12143, 225, 12274, 83, 12109, 12159, 12279, 12281, 12136, 12233, 118, 197, 12186, 55, 143, 12123, 12147, 12206, 149, 208, 12164, 26, 86, 407, 238, 47, 12011, 12075, 11926, 12273, 12260, 12265, 214, 55, 12287, 92, 89, 128, 12063, 42, 12174, 423, 11905, 12252, 12198, 12174, 231, 12115, 12221, 12217, 12286, 17, 12247, 12111, 22, 12194, 12250, 12220, 202, 12263, 235, 198, 12159, 209, 12243, 313, 154, 12212, 12249, 133, 10, 15, 45, 182, 12195, 57, 102, 12092, 12092, 152, 98, 12246, 12168, 20, 45, 397, 11952, 12281, 206, 188, 12094, 423, 12057, 43, 79, 74, 88, 12117, 12060, 12173, 12092, 12194, 184, 12192, 44, 9, 152, 130, 2, 12188, 12281, 124, 12278, 296, 12243, 311, 11994, 11822, 12159, 45, 57, 154, 165, 124, 12251, 244, 12215, 124, 12193, 12263, 94, 12241, 12128, 231, 30, 104, 12246, 12160, 12113, 12142, 152, 199, 60, 12101, 12227, 215, 12263, 12237, 11966, 12227, 47, 108, 12078, 12286, 12266, 11976, 33, 212, 12110, 12084, 12041, 133, 4, 277, 12082, 136, 12216, 252, 12090, 11965, 377, 17, 117, 12212, 321, 12205, 221, 69, 12212, 12126, 11990, 12061, 12272, 62, 12252, 12162, 172, 12272, 12272, 12078, 105, 85, 12096, 12068, 12209, 12180, 42, 12272, 12203, 12276, 12228, 85, 198, 12097, 302, 12103, 198, 12119, 12259, 12220, 128, 118, 159, 12207, 12061, 12266, 298, 131, 38, 12116, 4, 12204, 32, 3, 12168, 180, 168, 12216, 12261, 16, 40, 12268, 221, 322, 248, 12151, 12227, 12283, 64, 12174, 12162, 299, 12267, 12219, 12184, 94, 12186, 12150, 93, 12188, 106, 12083, 12114, 288, 339, 12208, 95, 20, 55, 157, 128, 200, 12087, 12203, 69, 12288, 152, 11929, 12191, 12144, 12182, 12038, 12100, 55, 12113, 12166, 185, 316, 12044, 74, 12025, 247, 12009, 63, 12040, 12272, 12221, 6, 12281, 114, 12149, 173, 12161, 12244, 12143, 584, 12246, 12195, 41, 12240, 169, 417, 127]
        // forgefmt: disable-next-line
        uint256[32] memory tmp_s2 = [189061025430138993865854805011532069333293715869299695949354293295109767338, 309200829492683618362801840838735315073239679824516877254610688296907178015, 17669203565873415420439226729611576544749443656481276334890396524208467774, 21567902685951065342220093337212015325627859479836552266578154972738260959272, 21629742710641854202617034886213873892640485268970955124070672848858167127875, 21518761173595649991077541634911872372568563460460287375282464679909027151878, 88668843202050080354162430362465493400899326659627631899251092744825352121, 21589115041612929508944530253353887521990674352656231997732268725231305949408, 77748037816609010048821043986758852741763365848433569238103440621543948394, 196125604980477431416529085554673976708993318735365421874476849166068940885, 21444227575187532861933165945345576589177205410775875437029272647414716641113, 21571766779137214249890997998635625679180679668367453624699784252197002280960, 132842791722068690864021037096966919030178447937701691660884444009250095184, 252660618073406522895016361327352646221166102604901000414436689373735890818, 21661875898514585455300483231269254543688174841797784277884596070553710964571, 408469887372575727764354863939787898486221033046251585808276641395393310697, 21483098798806565528090561173471573130149923357778077129069435100923827138387, 21365040707017283224032169374693579384647805515287338499452209675962376454353, 139582082355163817792446396090827957258977980096747497728717346717617488024, 21698977390374140751926738932285965733024723476130692021975378126228657012810, 21582043479534721231928031949222680268801040592884446810862621247728671654012, 106016188978695213660006561000087639649638405319762547008619378770056380540, 21396523669988578255532519494435324598773577619532813394543061212841669504837, 567487142710691728457912662951684626851937150493245889102477722465050636084, 185844569086061214504135130584456987157183142589951887136070171885834153901, 350162015184944149647336545709148596957881292049384682934039156939714199637, 56868125263755762880306655715105756108612883350558868787549471782918631255, 113409366200701537080466339400905201724440194357091543728319651397816025091, 598968924407998825190710488524458442266573561012338161932509137359297720206, 21524058349737765174490280399545977619713148567855354072883708688105677467568, 21592968836075103278633512472085925061228035841536899495353847705011755429638, 224400819594214410949880090102269951771459564115310187818733077437072605190];
        uint256[] memory s2 = new uint256[](32);
        for (uint256 i = 0; i < 32; i++) {
            s2[i] = tmp_s2[i];
        }
        // message = "My name is Renaud"
        // salt = "\x46\xb9\xdd\x2b\x0b\xa8\x8d\x13\x23\x3b\x3f\xeb\x74\x3e\xeb\x24\x3f\xcd\x52\xea\x62\xb8\x1b\x82\xb5\x0c\x27\x64\x6e\xd5\x76\x2f\xd7\x5d\xc4\xdd\xd8\xc0\xf2\x00"
        // hash to point
        // forgefmt: disable-next-line
        uint256[512] memory _hashed = [uint256(8744), 9952, 7149, 4779, 11786, 10889, 6385, 1181, 7100, 7189, 6211, 9671, 4540, 9318, 11953, 1642, 163, 6091, 7337, 12233, 2308, 6730, 11657, 10024, 4668, 8040, 522, 7560, 1751, 7358, 9452, 8746, 4081, 1964, 5377, 3603, 8832, 8956, 5963, 2931, 1636, 11116, 6615, 8391, 3906, 4363, 2873, 469, 741, 9050, 6093, 7641, 9448, 760, 8049, 3579, 4449, 6665, 707, 8739, 7210, 6144, 6400, 9583, 11322, 10865, 3184, 9394, 5204, 4446, 9203, 12221, 4269, 4511, 2856, 542, 10980, 5976, 8725, 4494, 7236, 606, 8748, 6885, 3847, 5265, 12134, 1342, 586, 6068, 2517, 2685, 3859, 11063, 3037, 8329, 7684, 2301, 2448, 4020, 6467, 5208, 4311, 5371, 11962, 7086, 2161, 1364, 7638, 9608, 3282, 2485, 6626, 8297, 3352, 2184, 653, 4908, 7992, 747, 7239, 7170, 4951, 5816, 6302, 2617, 4355, 11460, 8697, 11335, 9182, 414, 9643, 1262, 1324, 777, 12252, 8802, 3154, 8473, 1799, 9835, 6632, 1326, 335, 8502, 11557, 10977, 12241, 11287, 3771, 1990, 5922, 7096, 2459, 11720, 2073, 10315, 9482, 2976, 7791, 8922, 389, 5421, 9424, 7779, 11708, 8374, 9190, 4683, 1468, 10705, 10061, 6894, 2495, 2969, 5433, 7755, 8738, 5139, 8753, 899, 7878, 9330, 3716, 9238, 2373, 10743, 5347, 4269, 10393, 6420, 8192, 9920, 5806, 678, 8580, 7866, 3167, 8041, 10067, 3591, 6448, 11933, 8092, 6121, 1304, 355, 2541, 9902, 9359, 1082, 319, 4204, 5858, 9360, 910, 9706, 8771, 200, 3467, 5004, 2727, 3955, 3106, 7348, 1759, 12000, 2117, 3814, 8576, 11973, 5817, 8056, 5785, 6835, 10702, 6370, 4749, 7640, 3096, 3812, 2176, 2412, 5478, 3910, 8172, 2406, 3353, 11923, 577, 11977, 11114, 6867, 6461, 9854, 1949, 6407, 157, 11758, 10869, 11073, 1835, 11172, 9325, 8034, 1171, 5273, 11536, 3893, 10672, 2993, 10065, 2780, 10722, 11128, 4184, 2005, 1010, 9136, 1775, 11277, 10086, 5229, 9254, 11343, 10670, 7394, 4803, 1746, 7000, 5035, 9416, 8731, 6927, 3708, 9385, 5461, 4657, 10342, 7922, 2049, 3149, 8204, 9505, 3162, 5866, 11424, 7460, 6673, 2047, 496, 11421, 937, 293, 4547, 4245, 1466, 502, 4884, 547, 8861, 736, 2301, 1648, 6525, 1267, 433, 11573, 10747, 8655, 9819, 10813, 10201, 6568, 6783, 8736, 4716, 10150, 3265, 3321, 9072, 6211, 6548, 6591, 5060, 7138, 1021, 11237, 12186, 2990, 8874, 11131, 105, 10261, 1334, 1474, 2895, 4934, 3750, 11274, 1377, 3722, 7895, 2622, 3667, 1731, 9451, 7796, 6051, 11398, 8760, 10524, 8558, 5268, 5090, 7487, 405, 8593, 1566, 11029, 7566, 11222, 9849, 1281, 1969, 3922, 11378, 1587, 764, 5758, 7358, 1810, 8768, 7423, 6493, 5977, 9416, 11683, 6347, 8425, 9633, 3867, 7626, 2991, 10568, 7824, 4611, 8887, 6243, 6190, 11307, 7404, 9955, 3056, 8872, 9046, 4105, 10924, 2477, 690, 1660, 591, 9915, 5886, 7094, 7512, 255, 3700, 6563, 9357, 2294, 2329, 8367, 7028, 864, 585, 5516, 3551, 11616, 4993, 8600, 11889, 4702, 10123, 11272, 10774, 7193, 240, 2976, 6827, 100, 11698, 7533, 9468, 9821, 145, 5127, 2938, 3022, 363, 7564, 8361, 4516, 7543, 5526, 6244, 8388, 4094, 6995, 12111, 1559, 6465, 12012, 3649, 3934, 3569, 9600, 4984, 6529, 10509, 8774, 3062, 7583, 1453, 6875, 8493, 6259, 1325, 6814, 8422, 1454, 8313, 11265, 12260, 5766, 10156, 370, 1265, 8328, 6336, 10072, 8685, 6552, 10494, 12166, 11621, 5853, 3015, 12174, 212, 3581];
        uint256[] memory hashed = new uint256[](512);
        for (uint256 i = 0; i < 512; i++) {
            hashed[i] = _hashed[i];
        }
        bool result = falcon_core(s2, pkc, hashed);
        assertEq(true, result);
    }

    function testVector1() public view {
        // public key
        // uncompressed pk = [8494, 9875, 5391, 1879, 708, 7214, 6161, 7426, 130, 4397, 5498, 8631, 2407, 9977, 1931, 7029, 2352, 991, 9225, 9158, 8285, 955, 12093, 4942, 2664, 778, 3383, 11334, 11105, 10565, 3474, 7022, 2706, 1183, 6455, 1113, 1385, 4181, 5984, 1364, 6193, 7574, 2703, 11943, 2783, 9363, 10213, 6442, 10177, 6408, 8584, 2766, 1171, 7190, 253, 3679, 2625, 7796, 8043, 5703, 2065, 459, 1063, 5107, 475, 7421, 2950, 1363, 9991, 2222, 1222, 2148, 12181, 10486, 7239, 2220, 8612, 10147, 11233, 10557, 3816, 7607, 2043, 9737, 1487, 6402, 7156, 4425, 11155, 8706, 2669, 9984, 4688, 8809, 3126, 5346, 8576, 11683, 12012, 2541, 7468, 3700, 12043, 6636, 274, 7905, 1637, 11874, 8091, 6388, 2132, 3454, 5363, 11278, 8138, 4104, 3664, 6955, 7423, 9252, 5243, 717, 9654, 11089, 2662, 5813, 2725, 3997, 7882, 8147, 1972, 5360, 9958, 6537, 9866, 1837, 9724, 2515, 6909, 11077, 7382, 8940, 10578, 66, 991, 11249, 12078, 5661, 297, 4236, 5240, 10615, 8894, 6752, 1599, 8903, 4789, 8794, 721, 143, 708, 3893, 9853, 10975, 12240, 4519, 3983, 9215, 420, 8767, 11835, 10220, 3914, 10930, 3539, 11989, 4395, 2901, 1427, 7668, 5489, 4941, 6674, 12249, 5831, 3530, 12171, 10261, 775, 894, 11564, 5706, 3810, 11670, 9294, 9899, 5872, 9997, 9218, 8757, 7970, 11087, 3323, 4779, 9473, 12172, 9576, 2989, 1404, 11193, 376, 7670, 9520, 11007, 10252, 55, 8952, 3523, 8081, 2097, 6848, 11377, 6165, 5777, 12044, 12000, 8941, 1892, 8951, 4426, 8954, 9118, 4116, 7340, 10060, 9311, 7351, 11995, 9476, 6246, 2151, 1574, 4104, 12141, 880, 3709, 2410, 8871, 1771, 8281, 11433, 8802, 5517, 7260, 8932, 2340, 11134, 8858, 1110, 2811, 6777, 10364, 9649, 7387, 1996, 6561, 7065, 2190, 12094, 11677, 10503, 2145, 11418, 10041, 9467, 109, 5395, 5299, 7200, 11203, 3966, 6117, 1065, 3458, 5521, 12182, 6969, 1134, 7108, 648, 285, 8703, 100, 12113, 6653, 7377, 6804, 1717, 9467, 10055, 4009, 3545, 7482, 28, 4253, 47, 12043, 7057, 1286, 10754, 3347, 3280, 3738, 3323, 7715, 6500, 350, 12245, 11148, 1705, 6450, 336, 2873, 176, 9059, 2491, 7546, 2877, 7417, 9768, 2526, 2893, 551, 9462, 1754, 3452, 7819, 10010, 844, 4087, 8473, 5019, 9155, 12253, 8338, 10746, 6837, 9485, 7469, 4277, 8497, 10631, 2810, 5104, 5895, 7050, 298, 1144, 3489, 7210, 11509, 4913, 7844, 1396, 9705, 11371, 1646, 3089, 7918, 12187, 6710, 106, 6810, 3783, 9423, 180, 3100, 228, 6112, 9775, 3407, 10474, 3340, 232, 11654, 454, 2551, 6891, 10879, 2473, 6594, 9791, 6870, 5661, 5877, 8893, 3075, 4752, 1135, 3859, 2495, 5101, 1384, 5825, 5539, 1734, 4694, 7444, 8731, 4653, 7432, 7238, 9267, 1719, 9790, 6698, 6049, 2948, 4962, 8614, 2381, 2866, 6384, 11786, 775, 4155, 7072, 9670, 2011, 4684, 6722, 1077, 7784, 7614, 217, 90, 9505, 4379, 1799, 1159, 6056, 11386, 5041, 3383, 102, 12112, 9520, 8228, 9636, 668, 210, 4688, 3381, 2281, 2261, 11425, 7820, 2252, 9565, 7195, 8650, 7037, 11164, 9071, 1220, 1974, 6262, 8288, 4926, 1069, 206, 7288, 4139, 4020, 728, 10582, 10621, 4568, 5054, 9984, 6837, 236, 7164, 9106, 9007, 3765, 700, 4173, 1524, 11782, 6690, 9860, 2926, 538, 11340, 6889, 10459, 7255, 7705, 6244, 10579, 7541, 10909, 11397, 9092, 115, 2610, 5294, 10509, 3454, 4985, 2496]
        // forgefmt: disable-next-line
        uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
        uint256[] memory pkc = new uint256[](32);
        for (uint256 i = 0; i < 32; i++) {
            pkc[i] = tmp_pkc[i];
        }
        // signature s2
        // uncompressed s2 = [12241, 12216, 12163, 12208, 61, 12043, 387, 10, 12185, 158, 253, 218, 421, 225, 12191, 12106, 12283, 12191, 177, 27, 48, 138, 12224, 45, 44, 40, 12232, 329, 12236, 156, 95, 162, 12115, 30, 69, 280, 11980, 258, 119, 91, 19, 25, 12165, 122, 12059, 12082, 0, 188, 12285, 11872, 167, 12283, 12276, 12243, 239, 12183, 33, 12174, 12264, 12032, 12251, 12160, 99, 12073, 12231, 12089, 12193, 113, 108, 184, 12173, 12237, 11942, 12056, 12259, 41, 12269, 12163, 12262, 221, 12148, 12233, 12148, 66, 12180, 12158, 67, 11980, 12267, 157, 12093, 80, 485, 64, 74, 12133, 12223, 12215, 12187, 12250, 383, 253, 12198, 11900, 12210, 12200, 12129, 5, 12219, 59, 12271, 120, 12237, 137, 11976, 12081, 259, 29, 12229, 11984, 65, 213, 12144, 12205, 130, 12077, 111, 91, 12268, 12223, 12288, 81, 91, 148, 197, 66, 12088, 11936, 12097, 300, 12061, 119, 121, 104, 200, 217, 12250, 12220, 2, 84, 94, 12091, 233, 144, 12238, 12196, 169, 18, 67, 251, 12174, 12086, 11890, 12268, 300, 12082, 378, 6, 198, 12134, 12019, 12263, 12, 82, 12186, 17, 12254, 12123, 12146, 12047, 70, 12093, 143, 12086, 12112, 12164, 321, 119, 80, 12171, 11810, 12218, 12240, 173, 12122, 150, 11964, 12187, 200, 12194, 12237, 7, 39, 105, 45, 12189, 66, 12223, 122, 12148, 12239, 12077, 12233, 375, 1, 11982, 137, 12169, 42, 80, 141, 12108, 20, 116, 164, 12259, 12267, 11932, 12189, 183, 12237, 12223, 204, 156, 130, 12042, 187, 12257, 12149, 12208, 114, 12119, 335, 12225, 12163, 111, 12225, 11987, 12028, 11889, 186, 12015, 78, 12252, 12116, 12284, 123, 12233, 77, 27, 97, 184, 13, 12152, 103, 91, 12221, 12232, 12115, 326, 2, 58, 280, 111, 314, 101, 10, 12075, 114, 423, 11984, 12000, 12048, 12196, 12153, 4, 178, 12191, 368, 12112, 231, 12044, 56, 11895, 106, 12201, 12230, 140, 12229, 12242, 12156, 11935, 67, 254, 211, 12283, 12241, 12065, 179, 232, 10, 12111, 46, 187, 218, 12116, 91, 12241, 12285, 69, 135, 56, 12242, 12087, 5, 231, 144, 12100, 12265, 60, 12255, 70, 131, 12227, 12167, 12259, 51, 154, 12188, 157, 12137, 159, 12062, 171, 83, 12286, 12047, 91, 12223, 12216, 171, 12281, 243, 52, 287, 12222, 12267, 12157, 12274, 27, 12256, 11938, 138, 128, 12250, 12113, 12196, 232, 12211, 79, 157, 12268, 12017, 12158, 12193, 51, 238, 12211, 12193, 12147, 128, 100, 12234, 31, 95, 11875, 12238, 12054, 11998, 12157, 12241, 244, 12204, 3, 124, 192, 39, 166, 12239, 144, 12095, 12188, 12144, 55, 12076, 12242, 71, 12158, 12241, 21, 12047, 229, 12046, 0, 12143, 128, 307, 244, 33, 47, 274, 30, 226, 12144, 107, 45, 12276, 11998, 50, 0, 12252, 257, 11978, 12270, 88, 17, 12098, 12116, 22, 12017, 12243, 345, 11991, 12133, 12212, 94, 12186, 12205, 45, 12210, 28, 51, 171, 20, 12062, 12136, 11929, 12145, 123, 54, 12102, 173, 53, 12258, 11981, 12178, 123, 12097, 12243, 46, 12206, 12132, 144, 175, 12153, 11916, 207, 205, 12022, 187, 209, 301, 12223, 11, 185, 12194, 204, 58, 84, 106, 12078, 70, 20, 12010, 225, 11807, 80, 12110, 12235, 497, 12003, 12068, 384, 253, 184, 206, 155, 156, 12250, 26, 12198, 12159]
        // forgefmt: disable-next-line
        uint256[32] memory tmp_s2 = [21389779235009502201415165388746255644806892009849907291296782704405420453841, 286231785753283125087165732204630875303174395032629853291564152839691251707, 332167253148658464931892866119162250749481723589252256811541324801983262547, 21331147287106564815154771559739610854777572529827134032693081522727985098749, 390803789185700534422664623113098797438358549533391876953264459802635481031, 21437157432018521557300654492734731837469269454708526135539847111485524881268, 212352473303306617178005169687275167862272245415408780262489065209963425727, 160786080417103479597398726898564919367592921725238371463359061334690443213, 183755356939528164237166444739620027708760402614217082842194601394376224748, 443480419583206998324575234800502651888597160387945815889414713855595577544, 30364934045051351224339035424002151875464837331694250019715006620526587790, 21587655839439298281873340802225135733069571719225545857267033283560952508382, 21596173457156935737215552062946709497266589574164543125867313261728045543376, 204954803694169105334756321910335731867542077551244595806771417786214514810, 21569996508248813623418686077061390038430331196338787038020544784285313466532, 21704275995491673251592576794285996174400088524993326206178893108443371470962, 102477183811224295097924048455714563029308181834196063566739250135981162619, 21539637365585511906106736977123446346808991235780246601987378902571693310232, 448780965679986847335436220061629018054869059841247396137619973937795432816, 122243655450170358270086289456520894929583883624488973887325127821286375635, 21660106193819209596094672258887579936954676111742240365874063960176141533319, 21698653417719665677454090054196501073641284466281047596240524734197967487027, 410237327521213803882721629363884331799761118203603320144501266873773719795, 55102087036794253709851738127517526658228991585835984322690549363151679411, 254755940183635284094629628251276060586021284081723019220411086535687077983, 226483798924088018395144638755116856102039888951488409756324836504531382079, 454410008914611017345956522395726266705039679130597014282491153409291583795, 21564696959569012654486252742655996148338027174049096304074523451403302481610, 21658012749001852508610486044878271513248470827713510347640848654353220894765, 330724513676723763687802969890834086273114257896926143478088551482478702285, 20861169364767011447189625560664371597112065363288028553556967462944971227345, 21483422318080593641041318043957332206291503508643413574548833598637165379664];
        uint256[] memory s2 = new uint256[](32);
        for (uint256 i = 0; i < 32; i++) {
            s2[i] = tmp_s2[i];
        }
        // message = "My name is Simon"
        // salt = "\x34\x9e\xc7\x55\x46\xf5\x8f\xb7\xc2\x77\x5c\x38\x46\x2c\x50\x10\xd8\x46\xc1\x85\xc1\x51\x11\xe5\x95\x52\x2a\x6b\xcd\x16\xcf\x86\xf3\xd1\x22\x10\x9e\x3b\x1f\xdd"
        // hash to point
        // forgefmt: disable-next-line
        uint256[512] memory _hashed = [uint256(5039), 10499, 7543, 5430, 6740, 2384, 8653, 8454, 4279, 11089, 8761, 11807, 949, 12222, 6631, 4435, 6359, 7291, 8223, 76, 8296, 3511, 10712, 8389, 9245, 10814, 1459, 7430, 3760, 461, 225, 833, 11118, 3789, 5275, 2853, 8761, 3762, 11932, 665, 1708, 3985, 9702, 7802, 9146, 11993, 9989, 8710, 723, 6939, 9595, 9736, 9962, 11015, 8931, 2699, 6115, 315, 8504, 1608, 4804, 7844, 35, 2908, 11095, 2224, 8004, 9755, 4479, 298, 7006, 8370, 10999, 175, 8174, 7813, 4269, 7565, 23, 11618, 4943, 2516, 11608, 942, 5232, 7155, 4606, 7722, 10020, 938, 5700, 1624, 11043, 11958, 4046, 3020, 7281, 10496, 4123, 6559, 7170, 9564, 7592, 1297, 11804, 10894, 10623, 6351, 3360, 8454, 98, 1507, 387, 56, 12251, 9136, 2850, 10151, 7565, 2763, 3323, 3247, 3463, 1172, 4045, 11602, 8025, 6307, 5965, 6353, 8589, 9665, 2419, 1449, 3038, 2234, 2980, 9081, 5914, 9637, 3232, 3163, 10445, 6115, 5443, 992, 6907, 8862, 9648, 4102, 10189, 4190, 8979, 4535, 304, 347, 2991, 642, 11259, 5904, 9727, 4830, 9753, 2653, 1252, 913, 8876, 3760, 11710, 1015, 630, 474, 8106, 10136, 8068, 5115, 9818, 10695, 11348, 151, 5977, 10625, 2485, 5888, 8919, 9104, 4613, 3011, 1886, 5910, 8497, 3539, 11554, 1017, 6782, 6093, 4809, 10010, 6182, 9158, 7795, 8571, 4474, 3307, 7618, 3651, 10255, 5619, 7942, 11796, 3050, 6984, 1581, 8647, 349, 6306, 5800, 1214, 8372, 41, 4197, 9317, 7217, 3403, 2468, 1226, 4304, 5929, 11032, 3254, 2852, 6164, 2338, 9451, 3385, 9522, 866, 7964, 10107, 8903, 2182, 11339, 4842, 1126, 11477, 4851, 100, 1293, 3215, 2203, 3511, 2936, 6405, 6688, 2237, 11473, 6662, 5028, 3976, 1858, 7909, 6481, 5962, 5864, 7774, 8803, 2173, 10360, 758, 1660, 5337, 5884, 5980, 6131, 9231, 6853, 4390, 5181, 10330, 3401, 7510, 7823, 11895, 9365, 9726, 5487, 5720, 7969, 12257, 9972, 8330, 12058, 11728, 5621, 3250, 11383, 2089, 11785, 3685, 11259, 12242, 8586, 6208, 6583, 8930, 3658, 213, 2370, 712, 7193, 10637, 1550, 4528, 5062, 4241, 11182, 8770, 1691, 6426, 7495, 11512, 4099, 7912, 4228, 3328, 1051, 1925, 5450, 427, 6885, 8747, 2963, 5222, 12114, 4895, 11945, 1696, 10633, 1180, 4278, 3415, 6687, 3185, 3044, 3113, 361, 11966, 2528, 11389, 3144, 3124, 568, 863, 2401, 8648, 5053, 2742, 2056, 5595, 12083, 10865, 11903, 3127, 6963, 6695, 2337, 7423, 11303, 1166, 10507, 5723, 7767, 8098, 7206, 3230, 1841, 8782, 6342, 9280, 10095, 3761, 7812, 798, 7370, 7124, 1471, 7339, 4520, 10346, 4124, 9823, 1128, 537, 766, 9647, 9649, 11632, 6583, 11104, 8465, 6585, 8685, 4765, 5090, 8151, 1930, 5022, 2952, 6307, 7677, 4795, 9211, 5660, 1588, 3151, 9070, 9371, 6825, 12167, 10445, 7806, 4574, 2067, 8634, 11004, 8244, 7930, 11923, 9329, 11966, 3476, 11408, 6076, 8015, 4659, 8858, 745, 7749, 7735, 5034, 1524, 9472, 11804, 3701, 10686, 10742, 2919, 10100, 923, 6897, 1221, 9459, 36, 6675, 11807, 1017, 12273, 6592, 70, 7580, 10547, 3651, 11475, 8239, 5379, 8520, 173, 4970, 6256, 2548, 1283, 2295, 6444, 9363, 2616, 9058, 4019, 8111, 1165, 7217, 10820, 6869, 6180, 4556, 9611, 4668, 2631, 10684, 788, 6663, 2346, 5923, 1576, 6755, 8789, 10773, 5375, 2742, 4330, 3687, 3276, 2271, 3334, 8164, 4605, 7530, 6131, 179, 11729, 2694, 5016, 9744];
        uint256[] memory hashed = new uint256[](512);
        for (uint256 i = 0; i < 512; i++) {
            hashed[i] = _hashed[i];
        }
        bool result = falcon_core(s2, pkc, hashed);
        assertEq(true, result);
    }

    function testVector2() public view {
        // public key
        // uncompressed pk = [8494, 9875, 5391, 1879, 708, 7214, 6161, 7426, 130, 4397, 5498, 8631, 2407, 9977, 1931, 7029, 2352, 991, 9225, 9158, 8285, 955, 12093, 4942, 2664, 778, 3383, 11334, 11105, 10565, 3474, 7022, 2706, 1183, 6455, 1113, 1385, 4181, 5984, 1364, 6193, 7574, 2703, 11943, 2783, 9363, 10213, 6442, 10177, 6408, 8584, 2766, 1171, 7190, 253, 3679, 2625, 7796, 8043, 5703, 2065, 459, 1063, 5107, 475, 7421, 2950, 1363, 9991, 2222, 1222, 2148, 12181, 10486, 7239, 2220, 8612, 10147, 11233, 10557, 3816, 7607, 2043, 9737, 1487, 6402, 7156, 4425, 11155, 8706, 2669, 9984, 4688, 8809, 3126, 5346, 8576, 11683, 12012, 2541, 7468, 3700, 12043, 6636, 274, 7905, 1637, 11874, 8091, 6388, 2132, 3454, 5363, 11278, 8138, 4104, 3664, 6955, 7423, 9252, 5243, 717, 9654, 11089, 2662, 5813, 2725, 3997, 7882, 8147, 1972, 5360, 9958, 6537, 9866, 1837, 9724, 2515, 6909, 11077, 7382, 8940, 10578, 66, 991, 11249, 12078, 5661, 297, 4236, 5240, 10615, 8894, 6752, 1599, 8903, 4789, 8794, 721, 143, 708, 3893, 9853, 10975, 12240, 4519, 3983, 9215, 420, 8767, 11835, 10220, 3914, 10930, 3539, 11989, 4395, 2901, 1427, 7668, 5489, 4941, 6674, 12249, 5831, 3530, 12171, 10261, 775, 894, 11564, 5706, 3810, 11670, 9294, 9899, 5872, 9997, 9218, 8757, 7970, 11087, 3323, 4779, 9473, 12172, 9576, 2989, 1404, 11193, 376, 7670, 9520, 11007, 10252, 55, 8952, 3523, 8081, 2097, 6848, 11377, 6165, 5777, 12044, 12000, 8941, 1892, 8951, 4426, 8954, 9118, 4116, 7340, 10060, 9311, 7351, 11995, 9476, 6246, 2151, 1574, 4104, 12141, 880, 3709, 2410, 8871, 1771, 8281, 11433, 8802, 5517, 7260, 8932, 2340, 11134, 8858, 1110, 2811, 6777, 10364, 9649, 7387, 1996, 6561, 7065, 2190, 12094, 11677, 10503, 2145, 11418, 10041, 9467, 109, 5395, 5299, 7200, 11203, 3966, 6117, 1065, 3458, 5521, 12182, 6969, 1134, 7108, 648, 285, 8703, 100, 12113, 6653, 7377, 6804, 1717, 9467, 10055, 4009, 3545, 7482, 28, 4253, 47, 12043, 7057, 1286, 10754, 3347, 3280, 3738, 3323, 7715, 6500, 350, 12245, 11148, 1705, 6450, 336, 2873, 176, 9059, 2491, 7546, 2877, 7417, 9768, 2526, 2893, 551, 9462, 1754, 3452, 7819, 10010, 844, 4087, 8473, 5019, 9155, 12253, 8338, 10746, 6837, 9485, 7469, 4277, 8497, 10631, 2810, 5104, 5895, 7050, 298, 1144, 3489, 7210, 11509, 4913, 7844, 1396, 9705, 11371, 1646, 3089, 7918, 12187, 6710, 106, 6810, 3783, 9423, 180, 3100, 228, 6112, 9775, 3407, 10474, 3340, 232, 11654, 454, 2551, 6891, 10879, 2473, 6594, 9791, 6870, 5661, 5877, 8893, 3075, 4752, 1135, 3859, 2495, 5101, 1384, 5825, 5539, 1734, 4694, 7444, 8731, 4653, 7432, 7238, 9267, 1719, 9790, 6698, 6049, 2948, 4962, 8614, 2381, 2866, 6384, 11786, 775, 4155, 7072, 9670, 2011, 4684, 6722, 1077, 7784, 7614, 217, 90, 9505, 4379, 1799, 1159, 6056, 11386, 5041, 3383, 102, 12112, 9520, 8228, 9636, 668, 210, 4688, 3381, 2281, 2261, 11425, 7820, 2252, 9565, 7195, 8650, 7037, 11164, 9071, 1220, 1974, 6262, 8288, 4926, 1069, 206, 7288, 4139, 4020, 728, 10582, 10621, 4568, 5054, 9984, 6837, 236, 7164, 9106, 9007, 3765, 700, 4173, 1524, 11782, 6690, 9860, 2926, 538, 11340, 6889, 10459, 7255, 7705, 6244, 10579, 7541, 10909, 11397, 9092, 115, 2610, 5294, 10509, 3454, 4985, 2496]
        // forgefmt: disable-next-line
        uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
        uint256[] memory pkc = new uint256[](32);
        for (uint256 i = 0; i < 32; i++) {
            pkc[i] = tmp_pkc[i];
        }
        // signature s2
        // uncompressed s2 = [50, 78, 12214, 12267, 12165, 12019, 61, 215, 59, 73, 12032, 53, 166, 12135, 43, 12225, 249, 12204, 170, 187, 78, 160, 119, 12102, 11999, 12008, 9, 18, 12257, 119, 12169, 12004, 101, 359, 16, 12192, 12083, 12143, 85, 271, 158, 25, 131, 26, 110, 234, 125, 105, 248, 160, 12072, 167, 12113, 252, 11892, 70, 38, 75, 12284, 12167, 12093, 121, 12035, 12098, 325, 12189, 12280, 70, 11960, 26, 220, 70, 12226, 309, 12193, 12, 12259, 75, 217, 252, 12232, 12072, 12262, 12212, 12270, 59, 246, 12267, 108, 183, 12268, 12074, 12241, 8, 12251, 12276, 4, 238, 235, 197, 12210, 12269, 79, 11892, 25, 216, 167, 169, 62, 168, 173, 280, 12066, 167, 12164, 12107, 108, 111, 12227, 2, 62, 197, 12250, 74, 157, 153, 32, 66, 98, 12090, 153, 12223, 153, 12160, 170, 12220, 41, 11985, 12213, 12092, 12171, 12039, 14, 29, 12157, 2, 12153, 12152, 311, 12073, 245, 111, 67, 149, 66, 12145, 12270, 74, 12148, 164, 159, 12230, 1, 12259, 142, 79, 12001, 98, 189, 233, 53, 210, 12103, 12280, 169, 12106, 63, 211, 12115, 12035, 11795, 66, 181, 12232, 12161, 12265, 144, 107, 12109, 12269, 11930, 12173, 159, 12266, 12283, 7, 184, 126, 320, 101, 12287, 15, 214, 140, 40, 15, 42, 12015, 12106, 12244, 232, 12140, 11942, 168, 11887, 12155, 12054, 12212, 85, 12053, 70, 71, 12268, 12101, 12250, 12272, 325, 151, 12020, 12128, 9, 53, 12238, 11922, 79, 12232, 34, 70, 12132, 207, 12242, 12276, 12243, 12018, 341, 307, 11782, 3, 310, 114, 118, 87, 258, 12171, 12222, 132, 63, 12159, 12173, 12171, 12168, 10, 41, 91, 12277, 200, 195, 12240, 12194, 12247, 283, 0, 12179, 12235, 174, 12275, 12216, 12136, 12095, 209, 224, 12159, 12239, 12266, 11972, 171, 12064, 12133, 11930, 12141, 1, 12056, 12262, 198, 40, 20, 12074, 12266, 190, 12196, 63, 49, 304, 12269, 178, 12163, 12218, 74, 210, 12157, 12278, 157, 130, 191, 155, 130, 12187, 186, 12208, 199, 12031, 12098, 11978, 82, 12101, 174, 12065, 98, 320, 12248, 157, 12132, 111, 125, 6, 12171, 12108, 120, 12236, 147, 113, 11971, 268, 12278, 12076, 36, 243, 12247, 12090, 12243, 12285, 110, 228, 12217, 12254, 12250, 125, 88, 12183, 12174, 50, 12220, 12119, 12201, 109, 187, 34, 12261, 12262, 79, 12126, 12215, 152, 63, 11921, 98, 12193, 91, 12024, 103, 12243, 11, 12132, 115, 300, 131, 12236, 22, 12156, 12123, 11802, 12188, 170, 12198, 38, 12199, 12146, 12262, 177, 58, 208, 12013, 12266, 12110, 12186, 150, 94, 12284, 162, 148, 8, 172, 271, 66, 60, 13, 12159, 92, 101, 11, 256, 263, 12121, 12169, 12135, 191, 12147, 36, 11962, 12193, 12246, 12186, 45, 8, 12246, 14, 341, 186, 12167, 12090, 52, 12250, 296, 12155, 210, 12208, 12262, 42, 12284, 12263, 12132, 418, 406, 41, 12134, 12111, 12151, 12274, 130, 47, 126, 12191, 122, 11, 12152, 11981, 65, 12213, 46, 12225, 243, 12070, 201, 1, 130, 12106, 190, 12038, 51, 12041, 12152, 89, 12186, 168, 12005, 46, 63, 97, 12122, 12056, 12209, 41, 151, 96, 448, 7, 89, 73, 12182, 12058, 182, 12274, 65, 12276, 12135, 12215, 12288, 12122, 12283, 118, 139, 7]
        // forgefmt: disable-next-line
        uint256[32] memory tmp_s2 = [21599706531185505609410513998108918748904008536425729236043465372750438072370, 21209560241239748747471565087029600766729518619669131275147528799098646561017, 185522311891326455523192513667021172871260528086173547122273599036657696869, 21375640252696885200264299526365055270070218984736147164299680400577608548600, 445251310663509784184940323291387367265849379978258690464208256115540820293, 21690144853529433140726147242397528058498208037474915038651850092316463738824, 494721842277832609947993253572329657173040959062980163499251133870481735684, 116612769056608249402585346490778207556837579315061897461745727667993784098, 51238947270460226827795384123417670069959237385428995530639806997424898146, 290090428086286431535881904324899605303965848194391668478065387436054294397, 21389455127489882405152044858571009061684501781622685324169821638304058441887, 21508150956758261414028862658810032935622703000793048453374383639031652220991, 21228668615636218633457624434310376918909679102750988799227151817161279406239, 21380947075538149522780505087375563564283179899680646232301679085462563860298, 366064420510887972131904548482152816036266255734279147735913767019738050522, 233553322025773257914246221850322214029421111062025209215384656026317107154, 7634703106926160185169278169317723676982967886702476662502778795393087, 21437480681823150046614956328634075908037664125551197028860963595420688920467, 21677454833609941980904713722748620143125969078344959337387694762026007867034, 351931692996403517564426488813246673890107591343313943840465644417471152306, 21504295787228818393598747939873516274866078809260913742346137372637521915647, 194684385106982187017932338565560383680223457640897900421197411745105719116, 21663312777962884971570060557998787257781553492375354945324836990195957563620, 203514490527082057563130781703034101480280542698876673210241303466598150118, 102481906712076840093342164703398157882382223204396950662922302485407400236, 22970629466071551629815075776229122248211413144055819834503770545188569296, 21531128487912261720585779717625742970846153871091609829930354014366253985663, 74538164608805971287564112909349701527716668991480316610677787927274586157, 19438611841142925498497491503826172457174036566403076698428091301657784316, 21274606886905952896262138670400864550463623721953997681851513487849882988408, 12380007549048631015726945294294936201025772238357094738183685604361449336, 12371676934654911488680767416737611665499464490916565056368528375633477721];
        uint256[] memory s2 = new uint256[](32);
        for (uint256 i = 0; i < 32; i++) {
            s2[i] = tmp_s2[i];
        }
        // message = "My name is Nicolas"
        // salt = "\xaa\xae\x31\x4e\xd9\x08\x3d\xab\x4b\x09\x9f\x8e\x30\x0f\x01\xb8\x65\x0f\x1f\x4b\x1d\x8f\xcf\x3f\x3c\xb5\x3f\xb8\xe9\xeb\x2e\xa2\x03\xbd\xc9\x70\xf5\x0a\xe5\x54"
        // hash to point
        // forgefmt: disable-next-line
        uint256[512] memory _hashed = [uint256(11599), 3613, 1493, 4338, 526, 1397, 2000, 262, 9208, 4801, 2288, 11982, 6933, 7429, 7366, 8723, 8171, 7679, 5204, 1929, 7804, 4448, 7516, 6684, 3446, 1272, 4716, 957, 6858, 3523, 5616, 1041, 4608, 5512, 9703, 12076, 7603, 6959, 11236, 9832, 3584, 6691, 1778, 1272, 11706, 584, 2497, 8235, 6890, 640, 3435, 6663, 10428, 2309, 9268, 8771, 11139, 9898, 3307, 9890, 1193, 6720, 6066, 912, 1198, 6281, 10830, 11804, 11252, 2724, 8937, 6957, 3520, 12262, 6877, 3969, 4941, 10531, 1161, 9867, 6519, 4135, 1055, 9727, 3423, 10975, 11340, 3694, 6690, 11736, 11712, 2873, 7126, 10461, 11265, 7091, 11491, 9524, 10904, 7366, 8907, 12134, 6167, 8999, 1782, 4834, 9052, 1668, 6681, 5968, 7057, 3630, 4691, 1552, 6263, 3406, 11585, 1806, 11418, 1257, 10269, 4264, 9460, 11774, 11623, 8948, 4154, 10760, 981, 6185, 11528, 10153, 10446, 9955, 2029, 423, 3642, 6887, 4979, 7390, 4272, 6919, 6615, 8705, 6681, 2631, 2285, 8972, 8308, 9764, 558, 10789, 6893, 6803, 2600, 10882, 1686, 11502, 6311, 11326, 10866, 8278, 9433, 12242, 7115, 4543, 7841, 11576, 4906, 7001, 7483, 9581, 1857, 11555, 10019, 11977, 8472, 5585, 890, 5487, 9303, 7165, 8946, 3286, 51, 10588, 9649, 5195, 1703, 785, 6776, 10662, 339, 8966, 4569, 47, 11504, 10300, 4534, 9507, 5138, 7212, 1099, 2158, 7329, 5515, 166, 2312, 11081, 3019, 2289, 9367, 3827, 7420, 6097, 8383, 4851, 6878, 5502, 1345, 9189, 10145, 4752, 11412, 8762, 6632, 10131, 5812, 73, 8477, 446, 5066, 11539, 6931, 4130, 9605, 9704, 9621, 3628, 2761, 6042, 2715, 3728, 7096, 11575, 12279, 5685, 8849, 9871, 1397, 1703, 12112, 2532, 8314, 7850, 3695, 2965, 2240, 7908, 1778, 9196, 9269, 4193, 4926, 531, 12251, 5337, 10998, 4392, 10317, 10499, 533, 9031, 6614, 11363, 3966, 8466, 11500, 8014, 6134, 1962, 8107, 4993, 3185, 12138, 4676, 1741, 3041, 10223, 837, 759, 12265, 3429, 7667, 5700, 3334, 3998, 6424, 6992, 8874, 7199, 4361, 3739, 11023, 4533, 362, 9080, 3284, 2429, 3230, 2523, 5767, 7421, 1405, 10554, 4635, 4012, 8669, 6644, 1300, 11990, 6485, 12103, 233, 6635, 4194, 1440, 3421, 5688, 12179, 2926, 1669, 554, 4635, 4037, 7650, 10586, 829, 1551, 2712, 6937, 171, 7145, 4691, 4157, 2118, 11507, 2484, 4271, 11345, 2801, 8269, 11880, 3808, 1368, 8725, 1960, 11982, 916, 1390, 7895, 858, 2280, 10949, 2056, 4247, 11888, 3758, 4835, 6245, 5054, 1475, 10102, 5968, 3610, 11461, 12001, 8973, 5037, 11160, 872, 5342, 4471, 4412, 7767, 806, 5556, 820, 9446, 2244, 6243, 1108, 4967, 10909, 11733, 5596, 271, 13, 4848, 2834, 1755, 2458, 3190, 5252, 9385, 11987, 9104, 230, 10702, 2775, 1933, 83, 10678, 11087, 8278, 450, 5255, 2646, 10048, 5292, 6678, 4812, 12081, 5574, 9957, 4146, 3530, 2031, 6870, 2121, 5122, 612, 1533, 9329, 1985, 10193, 8603, 10870, 922, 9293, 7570, 5677, 1740, 7193, 2805, 3431, 7210, 4156, 3478, 1635, 350, 5393, 3235, 1216, 1201, 9203, 1943, 227, 1143, 2172, 9977, 3812, 10204, 7417, 2119, 4006, 6773, 655, 8813, 390, 8981, 10061, 3836, 2123, 7528, 17, 2819, 11087, 5136, 4012, 8477, 2435, 11514, 1527, 1574, 687, 114, 9848, 4725, 9457, 8446, 7275, 1807, 7676, 959, 8096, 11274, 3351, 80, 12172, 1485, 8204, 7911, 5347, 3016, 8142, 7680, 4750, 9203, 7532, 1019, 8389];
        uint256[] memory hashed = new uint256[](512);
        for (uint256 i = 0; i < 512; i++) {
            hashed[i] = _hashed[i];
        }
        bool result = falcon_core(s2, pkc, hashed);
        assertEq(true, result);
    }

    function testVector3() public view {
        // public key
        // uncompressed pk = [8494, 9875, 5391, 1879, 708, 7214, 6161, 7426, 130, 4397, 5498, 8631, 2407, 9977, 1931, 7029, 2352, 991, 9225, 9158, 8285, 955, 12093, 4942, 2664, 778, 3383, 11334, 11105, 10565, 3474, 7022, 2706, 1183, 6455, 1113, 1385, 4181, 5984, 1364, 6193, 7574, 2703, 11943, 2783, 9363, 10213, 6442, 10177, 6408, 8584, 2766, 1171, 7190, 253, 3679, 2625, 7796, 8043, 5703, 2065, 459, 1063, 5107, 475, 7421, 2950, 1363, 9991, 2222, 1222, 2148, 12181, 10486, 7239, 2220, 8612, 10147, 11233, 10557, 3816, 7607, 2043, 9737, 1487, 6402, 7156, 4425, 11155, 8706, 2669, 9984, 4688, 8809, 3126, 5346, 8576, 11683, 12012, 2541, 7468, 3700, 12043, 6636, 274, 7905, 1637, 11874, 8091, 6388, 2132, 3454, 5363, 11278, 8138, 4104, 3664, 6955, 7423, 9252, 5243, 717, 9654, 11089, 2662, 5813, 2725, 3997, 7882, 8147, 1972, 5360, 9958, 6537, 9866, 1837, 9724, 2515, 6909, 11077, 7382, 8940, 10578, 66, 991, 11249, 12078, 5661, 297, 4236, 5240, 10615, 8894, 6752, 1599, 8903, 4789, 8794, 721, 143, 708, 3893, 9853, 10975, 12240, 4519, 3983, 9215, 420, 8767, 11835, 10220, 3914, 10930, 3539, 11989, 4395, 2901, 1427, 7668, 5489, 4941, 6674, 12249, 5831, 3530, 12171, 10261, 775, 894, 11564, 5706, 3810, 11670, 9294, 9899, 5872, 9997, 9218, 8757, 7970, 11087, 3323, 4779, 9473, 12172, 9576, 2989, 1404, 11193, 376, 7670, 9520, 11007, 10252, 55, 8952, 3523, 8081, 2097, 6848, 11377, 6165, 5777, 12044, 12000, 8941, 1892, 8951, 4426, 8954, 9118, 4116, 7340, 10060, 9311, 7351, 11995, 9476, 6246, 2151, 1574, 4104, 12141, 880, 3709, 2410, 8871, 1771, 8281, 11433, 8802, 5517, 7260, 8932, 2340, 11134, 8858, 1110, 2811, 6777, 10364, 9649, 7387, 1996, 6561, 7065, 2190, 12094, 11677, 10503, 2145, 11418, 10041, 9467, 109, 5395, 5299, 7200, 11203, 3966, 6117, 1065, 3458, 5521, 12182, 6969, 1134, 7108, 648, 285, 8703, 100, 12113, 6653, 7377, 6804, 1717, 9467, 10055, 4009, 3545, 7482, 28, 4253, 47, 12043, 7057, 1286, 10754, 3347, 3280, 3738, 3323, 7715, 6500, 350, 12245, 11148, 1705, 6450, 336, 2873, 176, 9059, 2491, 7546, 2877, 7417, 9768, 2526, 2893, 551, 9462, 1754, 3452, 7819, 10010, 844, 4087, 8473, 5019, 9155, 12253, 8338, 10746, 6837, 9485, 7469, 4277, 8497, 10631, 2810, 5104, 5895, 7050, 298, 1144, 3489, 7210, 11509, 4913, 7844, 1396, 9705, 11371, 1646, 3089, 7918, 12187, 6710, 106, 6810, 3783, 9423, 180, 3100, 228, 6112, 9775, 3407, 10474, 3340, 232, 11654, 454, 2551, 6891, 10879, 2473, 6594, 9791, 6870, 5661, 5877, 8893, 3075, 4752, 1135, 3859, 2495, 5101, 1384, 5825, 5539, 1734, 4694, 7444, 8731, 4653, 7432, 7238, 9267, 1719, 9790, 6698, 6049, 2948, 4962, 8614, 2381, 2866, 6384, 11786, 775, 4155, 7072, 9670, 2011, 4684, 6722, 1077, 7784, 7614, 217, 90, 9505, 4379, 1799, 1159, 6056, 11386, 5041, 3383, 102, 12112, 9520, 8228, 9636, 668, 210, 4688, 3381, 2281, 2261, 11425, 7820, 2252, 9565, 7195, 8650, 7037, 11164, 9071, 1220, 1974, 6262, 8288, 4926, 1069, 206, 7288, 4139, 4020, 728, 10582, 10621, 4568, 5054, 9984, 6837, 236, 7164, 9106, 9007, 3765, 700, 4173, 1524, 11782, 6690, 9860, 2926, 538, 11340, 6889, 10459, 7255, 7705, 6244, 10579, 7541, 10909, 11397, 9092, 115, 2610, 5294, 10509, 3454, 4985, 2496]
        // forgefmt: disable-next-line
        uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
        uint256[] memory pkc = new uint256[](32);
        for (uint256 i = 0; i < 32; i++) {
            pkc[i] = tmp_pkc[i];
        }
        // signature s2
        // uncompressed s2 = [12076, 11975, 131, 181, 294, 12240, 52, 11999, 55, 37, 12167, 12118, 11964, 11882, 215, 12133, 171, 81, 12013, 65, 339, 12207, 101, 12228, 209, 47, 108, 52, 11882, 12143, 12109, 12238, 12264, 12265, 12203, 142, 12127, 12235, 149, 249, 279, 12234, 12202, 12047, 12235, 12244, 334, 164, 12140, 195, 12209, 149, 139, 12161, 12209, 365, 12194, 12265, 12259, 116, 12030, 44, 315, 50, 12278, 12029, 33, 11899, 16, 77, 190, 12178, 12181, 232, 12226, 12260, 160, 231, 11955, 19, 61, 12187, 124, 8, 12271, 149, 12242, 12258, 12176, 213, 221, 233, 20, 12096, 12113, 12050, 12280, 12258, 232, 12239, 128, 200, 233, 12257, 12106, 129, 12259, 97, 89, 12257, 293, 12249, 52, 12244, 66, 12240, 7, 12236, 12017, 12030, 138, 142, 33, 144, 3, 12193, 12229, 20, 12139, 12264, 149, 12285, 7, 12233, 208, 4, 99, 19, 12174, 11979, 91, 217, 131, 90, 12159, 12146, 177, 12135, 275, 184, 25, 12266, 260, 23, 12262, 158, 38, 12124, 12287, 12284, 155, 12272, 12156, 12278, 12178, 370, 73, 173, 128, 12234, 119, 12259, 144, 12249, 12170, 125, 29, 11989, 41, 54, 9, 12091, 12227, 169, 160, 198, 95, 67, 21, 217, 196, 12183, 284, 354, 2, 158, 12188, 68, 76, 75, 12177, 289, 135, 8, 178, 12082, 12058, 131, 70, 12106, 14, 11955, 84, 169, 12105, 12109, 12233, 103, 43, 12266, 63, 42, 4, 178, 146, 187, 11973, 11980, 12214, 85, 242, 171, 12288, 12004, 12170, 12250, 153, 11984, 48, 15, 385, 168, 66, 12248, 71, 60, 77, 12161, 12242, 17, 75, 12002, 202, 64, 12226, 91, 5, 211, 12111, 12200, 90, 12288, 12278, 262, 12261, 12059, 221, 12253, 12174, 122, 12180, 12217, 317, 132, 12214, 86, 289, 12140, 12068, 436, 248, 47, 12184, 43, 12178, 11965, 12195, 12090, 11892, 140, 143, 149, 12258, 161, 12064, 292, 12218, 1, 12216, 12191, 12250, 143, 12092, 12166, 12207, 59, 99, 5, 228, 135, 3, 11944, 12123, 213, 12176, 12215, 12285, 41, 12179, 41, 12097, 12240, 238, 34, 141, 132, 12213, 12211, 101, 12062, 293, 11995, 12154, 12174, 48, 111, 52, 235, 185, 12187, 68, 11867, 13, 43, 210, 12192, 12114, 12052, 12000, 101, 247, 226, 190, 72, 94, 66, 11981, 12071, 103, 12153, 0, 79, 254, 12173, 11982, 12171, 41, 12208, 198, 1, 12178, 208, 12085, 12232, 12187, 12257, 12093, 11979, 12287, 139, 12261, 70, 12265, 79, 109, 190, 143, 12235, 12186, 12190, 62, 212, 12218, 12193, 12155, 96, 260, 70, 102, 220, 289, 12217, 363, 12108, 129, 119, 50, 6, 399, 72, 11996, 12139, 12212, 335, 131, 12207, 12282, 12230, 12065, 150, 124, 131, 136, 11980, 11, 12179, 12287, 162, 108, 39, 292, 12232, 173, 12227, 11989, 12174, 12199, 12234, 434, 5, 245, 12254, 90, 6, 52, 336, 227, 12084, 12275, 12049, 12106, 12288, 12123, 382, 299, 245, 206, 154, 11989, 12228, 12134, 11826, 12177, 12187, 12139, 12260, 12276, 12249, 103, 57, 12092, 19, 12091, 85, 111, 12280, 79, 263, 12116, 11990, 337, 12268, 359, 12283, 12176, 12170, 68, 261, 34, 12236, 12224, 12206, 12146, 12282, 12099, 165, 12149, 12128, 12238, 12224, 26, 68, 93, 145, 10, 12178, 12262, 12211, 15, 12183, 12192, 296]
        // forgefmt: disable-next-line
        uint256[32] memory tmp_s2 = [21437161238232716896150200736746617675471862936119553296490011870485362978604, 21623000841747474996953320312341348286936995184742291016294225390926111506603, 289771928282808109819187554796900215510487939754850961173419629126940700648, 88350845640295432606238672873564465556957191664536019737331370685462949740, 33892400488223981856697783995535718769383973513217836752013204468220637174, 21290833701389516274082246754026634827975170263779088677870831157031055589437, 21642117600777041026646139658891334102554515713034656681001058845491623768056, 35666639499269557465178965201798420102513223862633097525393683138429059124, 159019767672337180994621271994082432107703918220710733493636458361611890539, 21704280605589896936297976345605606486402768640808117856428307186085870579583, 221183990687184500217905484846263637380405338581945339251196736220779511963, 21525503074433871802898942541117583510904681545937162567749306378017714798621, 231782053493128482303634261703105030047277544095542708426736230317919699228, 314498885387617273752517583466998732727711622766205889821111394678283567174, 26504004979048403478693108204387293520186664862636077365404759711729516690, 161112695229114899755462843483084246857326342308578177931226130024667545985, 21585898962598191556920272557207490123958052501470771119697266744667803942917, 21361509794642464396350490249528339155763232023776012199100998716828518973757, 21495787389827826622834969785303707326270270775559850568026283505461748313716, 72769074863316522232318394140968978434498621200732032217499417420314128303, 196121323276010097064931824897707913968746835526373094644998380482406133569, 399314095788365961141409581714161245794821039503313717264217971773904977972, 21569670077179263453917162693301319277714915187930485959650694507114235691198, 139911581892238257944992288078325245922103536623310741357979970209411301574, 388709104194602563682369550543205741536243383935660953995527925729815560301, 21567905651640638571761871983959685618141473438068871701431447299342655357217, 21612081168689668274826118727621803928202380057317255876227827578208937979898, 21350586050828112391104646753674514712646492940651190836177575230918401130669, 21532893474589746109216256386465537267187393598110779952903117096625768574963, 21184822953514839730566586102125008021613612359936949761240571193570363715435, 291855959135757256073681324306461455761306669795357442766033865519525527889, 523315431855963262944221335960794652384226339812637670717474153692737318773];
        uint256[] memory s2 = new uint256[](32);
        for (uint256 i = 0; i < 32; i++) {
            s2[i] = tmp_s2[i];
        }
        // message = "We are ZKNox"
        // salt = "\xf9\xa6\x6d\x13\x68\xb2\x08\xe2\x1f\x7c\x10\xd0\x4a\x3d\xbd\x4e\x36\x06\x33\xe5\xdb\x4b\x60\x26\x01\xc1\x4c\xea\x73\x7d\xb3\xdc\xf7\x22\x63\x2c\xc7\x78\x51\xcb"
        // hash to point
        // forgefmt: disable-next-line
        uint256[512] memory _hashed = [uint256(7482), 10122, 5040, 10922, 5902, 4506, 1763, 8128, 7906, 6241, 11098, 9856, 11354, 3408, 499, 4645, 8291, 11081, 5126, 7287, 464, 4522, 5163, 2783, 4442, 11329, 3718, 598, 10761, 5530, 7088, 10354, 4487, 3788, 2812, 2077, 6791, 6063, 9371, 11824, 9724, 3381, 5522, 3114, 5093, 8520, 1550, 8426, 3592, 4020, 10592, 4040, 4104, 8648, 6536, 3505, 4856, 9713, 11349, 6290, 9140, 4213, 8032, 9379, 4267, 4383, 3607, 1310, 9076, 2095, 11693, 11380, 7579, 2936, 2049, 9138, 971, 10112, 9328, 1180, 5483, 926, 2640, 5128, 5969, 12232, 3042, 444, 10793, 5271, 1491, 9366, 5810, 7010, 9846, 10527, 7859, 4295, 12180, 10846, 5818, 8435, 1897, 624, 9102, 3225, 11386, 9180, 1126, 1504, 458, 11763, 7199, 10858, 4913, 2296, 5245, 10461, 8147, 9775, 2931, 10324, 6231, 1058, 11695, 7276, 8122, 4523, 5671, 10817, 3551, 5841, 9291, 11663, 673, 5463, 3250, 5825, 2371, 7720, 5666, 11490, 4327, 5516, 2902, 1770, 647, 10048, 10175, 4902, 2637, 1389, 7559, 8281, 1217, 2795, 844, 12050, 7240, 5066, 7071, 6285, 7657, 10253, 3721, 12176, 4704, 10762, 3633, 2633, 8573, 8374, 345, 7084, 9121, 3804, 5616, 7851, 5124, 1496, 10904, 10357, 5455, 12267, 5311, 6799, 3769, 3531, 3343, 12186, 9111, 6319, 8256, 2275, 3785, 4634, 231, 5285, 1492, 10476, 5293, 2315, 2432, 9131, 9261, 11984, 6644, 2249, 11360, 10702, 2425, 10640, 474, 6637, 11095, 468, 10007, 10264, 2379, 8400, 4288, 5359, 2162, 5449, 8322, 10360, 9571, 6218, 6177, 961, 5152, 1581, 8480, 11409, 5727, 6123, 11945, 5042, 6342, 10916, 4105, 11955, 2953, 8495, 3718, 1147, 642, 65, 3280, 10637, 7556, 8400, 11399, 6368, 10920, 5911, 9416, 9125, 1668, 1470, 6960, 11701, 518, 11289, 1886, 1051, 7080, 11982, 696, 8049, 98, 9304, 11860, 7163, 4806, 11568, 3456, 3723, 5966, 2485, 1475, 6263, 4845, 5431, 7402, 11651, 8136, 10060, 11396, 11122, 1757, 269, 11612, 4641, 7516, 996, 3739, 1395, 1000, 7637, 1759, 7831, 11476, 723, 8496, 8165, 12055, 11499, 11635, 1404, 6836, 1890, 9357, 2448, 7181, 9321, 4001, 11939, 7398, 8349, 11125, 622, 7032, 9425, 9086, 10586, 1448, 11767, 8792, 1860, 9028, 7184, 2917, 5341, 10449, 5393, 1432, 103, 3454, 6155, 5061, 7536, 10480, 8514, 8550, 799, 4740, 1600, 4917, 1512, 3209, 8866, 12123, 9881, 11637, 6953, 6149, 6400, 7545, 10321, 2904, 2935, 4507, 1181, 10045, 1960, 10430, 12170, 9116, 3854, 2980, 6570, 11251, 8187, 6389, 9791, 8995, 8200, 3245, 10276, 636, 515, 2972, 6817, 4823, 4298, 7060, 10972, 1257, 9862, 6082, 9197, 3045, 12097, 5194, 1242, 1391, 1479, 4861, 3760, 6087, 10744, 6239, 1591, 3718, 7837, 2897, 12155, 2557, 5049, 9426, 9428, 8140, 6239, 211, 4309, 7806, 9115, 2942, 9310, 5569, 1558, 2626, 5710, 2775, 403, 994, 11969, 8150, 1899, 11853, 7792, 9082, 7301, 6641, 5505, 2747, 6699, 1193, 1485, 953, 859, 9259, 1023, 12094, 2917, 8368, 4151, 7661, 6226, 1369, 11585, 10357, 2861, 11808, 9721, 8392, 4407, 8754, 4948, 5717, 6973, 2139, 9454, 321, 7959, 1609, 1799, 1711, 12198, 10123, 7026, 2027, 9933, 5108, 8819, 460, 3631, 5535, 8938, 10989, 7455, 10984, 7175, 7591, 8124, 9497, 1172, 2041, 4668, 3277, 3795, 1825, 5926, 6702, 1904, 5570, 7111, 564, 9382, 5062, 9430, 5385, 8031, 1125, 8582, 5822, 1172, 5411, 7400, 12035, 10282];
        uint256[] memory hashed = new uint256[](512);
        for (uint256 i = 0; i < 512; i++) {
            hashed[i] = _hashed[i];
        }
        bool result = falcon_core(s2, pkc, hashed);
        assertEq(true, result);
    }

    function testVector4() public view {
        // public key
        // uncompressed pk = [8494, 9875, 5391, 1879, 708, 7214, 6161, 7426, 130, 4397, 5498, 8631, 2407, 9977, 1931, 7029, 2352, 991, 9225, 9158, 8285, 955, 12093, 4942, 2664, 778, 3383, 11334, 11105, 10565, 3474, 7022, 2706, 1183, 6455, 1113, 1385, 4181, 5984, 1364, 6193, 7574, 2703, 11943, 2783, 9363, 10213, 6442, 10177, 6408, 8584, 2766, 1171, 7190, 253, 3679, 2625, 7796, 8043, 5703, 2065, 459, 1063, 5107, 475, 7421, 2950, 1363, 9991, 2222, 1222, 2148, 12181, 10486, 7239, 2220, 8612, 10147, 11233, 10557, 3816, 7607, 2043, 9737, 1487, 6402, 7156, 4425, 11155, 8706, 2669, 9984, 4688, 8809, 3126, 5346, 8576, 11683, 12012, 2541, 7468, 3700, 12043, 6636, 274, 7905, 1637, 11874, 8091, 6388, 2132, 3454, 5363, 11278, 8138, 4104, 3664, 6955, 7423, 9252, 5243, 717, 9654, 11089, 2662, 5813, 2725, 3997, 7882, 8147, 1972, 5360, 9958, 6537, 9866, 1837, 9724, 2515, 6909, 11077, 7382, 8940, 10578, 66, 991, 11249, 12078, 5661, 297, 4236, 5240, 10615, 8894, 6752, 1599, 8903, 4789, 8794, 721, 143, 708, 3893, 9853, 10975, 12240, 4519, 3983, 9215, 420, 8767, 11835, 10220, 3914, 10930, 3539, 11989, 4395, 2901, 1427, 7668, 5489, 4941, 6674, 12249, 5831, 3530, 12171, 10261, 775, 894, 11564, 5706, 3810, 11670, 9294, 9899, 5872, 9997, 9218, 8757, 7970, 11087, 3323, 4779, 9473, 12172, 9576, 2989, 1404, 11193, 376, 7670, 9520, 11007, 10252, 55, 8952, 3523, 8081, 2097, 6848, 11377, 6165, 5777, 12044, 12000, 8941, 1892, 8951, 4426, 8954, 9118, 4116, 7340, 10060, 9311, 7351, 11995, 9476, 6246, 2151, 1574, 4104, 12141, 880, 3709, 2410, 8871, 1771, 8281, 11433, 8802, 5517, 7260, 8932, 2340, 11134, 8858, 1110, 2811, 6777, 10364, 9649, 7387, 1996, 6561, 7065, 2190, 12094, 11677, 10503, 2145, 11418, 10041, 9467, 109, 5395, 5299, 7200, 11203, 3966, 6117, 1065, 3458, 5521, 12182, 6969, 1134, 7108, 648, 285, 8703, 100, 12113, 6653, 7377, 6804, 1717, 9467, 10055, 4009, 3545, 7482, 28, 4253, 47, 12043, 7057, 1286, 10754, 3347, 3280, 3738, 3323, 7715, 6500, 350, 12245, 11148, 1705, 6450, 336, 2873, 176, 9059, 2491, 7546, 2877, 7417, 9768, 2526, 2893, 551, 9462, 1754, 3452, 7819, 10010, 844, 4087, 8473, 5019, 9155, 12253, 8338, 10746, 6837, 9485, 7469, 4277, 8497, 10631, 2810, 5104, 5895, 7050, 298, 1144, 3489, 7210, 11509, 4913, 7844, 1396, 9705, 11371, 1646, 3089, 7918, 12187, 6710, 106, 6810, 3783, 9423, 180, 3100, 228, 6112, 9775, 3407, 10474, 3340, 232, 11654, 454, 2551, 6891, 10879, 2473, 6594, 9791, 6870, 5661, 5877, 8893, 3075, 4752, 1135, 3859, 2495, 5101, 1384, 5825, 5539, 1734, 4694, 7444, 8731, 4653, 7432, 7238, 9267, 1719, 9790, 6698, 6049, 2948, 4962, 8614, 2381, 2866, 6384, 11786, 775, 4155, 7072, 9670, 2011, 4684, 6722, 1077, 7784, 7614, 217, 90, 9505, 4379, 1799, 1159, 6056, 11386, 5041, 3383, 102, 12112, 9520, 8228, 9636, 668, 210, 4688, 3381, 2281, 2261, 11425, 7820, 2252, 9565, 7195, 8650, 7037, 11164, 9071, 1220, 1974, 6262, 8288, 4926, 1069, 206, 7288, 4139, 4020, 728, 10582, 10621, 4568, 5054, 9984, 6837, 236, 7164, 9106, 9007, 3765, 700, 4173, 1524, 11782, 6690, 9860, 2926, 538, 11340, 6889, 10459, 7255, 7705, 6244, 10579, 7541, 10909, 11397, 9092, 115, 2610, 5294, 10509, 3454, 4985, 2496]
        // forgefmt: disable-next-line
        uint256[32] memory tmp_pkc = [5662797900309780854973796610500849947334657117880689816302353465126500706865, 19773102689601973621062070293263100534733440101750387150077711329493973274058, 14606681890476865709816748627007131256488820167404174518724605890405097603719, 15845234755931409677594030697035096324340457247480758851130851814703350289524, 5524941775098342886171484209767745714294893760953145782448900256027476885810, 15301033023652038200658165594502048003364566882283859976805808429697192567788, 18875246040654000517074755552890901133645669291006567534900678519700207707731, 11843395683334522200668269515783436692309636627649985746204914551011013629864, 8419305811746464065544475584323153271481428319969733938911379662274846467111, 18343417927809591481517183183479503623951147924071925629514120039495430967592, 10007451325105194000131443764495043320645967197761209321537835667210153693191, 779487061150515667795843171268512499191273448454307717194241961063365614179, 14889466660684110621550004892629051623956217990147793956971155241422811501259, 2995124819739638247263964985959552967489690950312509006670204449438399867779, 16698797261630410217796026169071784061995015858612862963622742163763641855864, 13129716852402613948762495927854872029721399215764359316540986925328111906305, 8620514528683669238836845045565231437047299941974001946945409334379184590766, 5184181041252042291984928267300200431567362250531180743278111084485128161037, 15555356690664302555826193017277818624355238475260445618945780405430020481200, 19264077329172342356817033544893125657281034846341493111114385757819435942150, 8708853592016768361541207473719404660232059936330605270802350059910738161396, 21018648773068189736719755689803981281912117625241701774409626083005150670687, 267026197077955750670312407002345619518873569178283514941902712705828521229, 14359242962640593260752841229079220345384234239741953227891227234975247894859, 8320354099602406351863744856415421903486499003224102136141447162113864442068, 17564344674783852357247325589247473882830766139750808683064015010041459773180, 12601232530472338126510941067000966999586933909071534455578397454667291628041, 17820703520112071877812607241017358905719406745793395857586668204300579510382, 20977963461796112341763752649093803701879441191599296283127418471622134932903, 5627732773047409045458881938100601008133088383905060686572856121439798106767, 2602661464000108367786729796742170641292899005030508211661215565063118195399, 20110282897068872581106488251090599973196923955248066799683528955504800771309];
        uint256[] memory pkc = new uint256[](32);
        for (uint256 i = 0; i < 32; i++) {
            pkc[i] = tmp_pkc[i];
        }
        // signature s2
        // uncompressed s2 = [114, 10, 165, 12030, 11883, 51, 12049, 21, 182, 172, 12195, 117, 272, 12134, 12116, 11967, 66, 214, 483, 258, 147, 397, 12105, 12163, 84, 12102, 12108, 0, 35, 12205, 110, 101, 11973, 85, 12265, 85, 12116, 79, 256, 137, 12126, 12131, 12271, 12269, 12213, 144, 110, 49, 12199, 12252, 12204, 85, 12130, 303, 12284, 112, 150, 12121, 193, 12135, 11843, 51, 24, 444, 66, 214, 73, 16, 12074, 307, 12150, 209, 12282, 12208, 207, 41, 47, 12248, 12241, 200, 426, 12223, 12160, 160, 12277, 57, 12205, 142, 12225, 8, 12281, 12239, 151, 12215, 413, 41, 12088, 12115, 12285, 44, 2, 113, 12206, 152, 12232, 84, 12184, 31, 3, 229, 165, 12132, 12146, 12283, 12187, 133, 67, 12220, 12107, 11881, 12172, 115, 12284, 242, 11963, 12221, 26, 0, 11872, 12143, 100, 74, 157, 12278, 12059, 12169, 53, 12171, 12139, 408, 12271, 12284, 109, 37, 12283, 12024, 356, 119, 11979, 12287, 12143, 16, 42, 12255, 45, 57, 115, 12247, 12150, 12270, 267, 12281, 12144, 16, 9, 12229, 82, 94, 152, 12213, 133, 12188, 29, 16, 11997, 12069, 12229, 168, 229, 14, 12014, 95, 12100, 12254, 12038, 132, 12138, 12181, 12089, 70, 17, 164, 296, 12203, 12193, 175, 12005, 12168, 12132, 240, 73, 135, 88, 12237, 85, 157, 12233, 23, 12209, 20, 23, 12128, 12219, 12194, 56, 394, 166, 204, 12243, 11998, 12108, 12145, 74, 12147, 122, 19, 11970, 139, 271, 12282, 39, 196, 92, 12205, 12081, 171, 121, 12184, 147, 12070, 114, 320, 260, 13, 12134, 12185, 12247, 12190, 6, 12268, 12078, 117, 12066, 12253, 101, 12052, 12277, 12072, 12237, 213, 12132, 12080, 12208, 12249, 12221, 12280, 165, 75, 25, 12257, 125, 12269, 12057, 11967, 180, 265, 254, 15, 12096, 12116, 298, 12178, 76, 12279, 12285, 12257, 12282, 12247, 12054, 45, 6, 44, 141, 12282, 12283, 201, 240, 11992, 145, 12205, 84, 196, 77, 111, 12152, 167, 12052, 12110, 59, 273, 12011, 12206, 17, 12258, 12278, 12200, 12235, 12222, 12210, 222, 279, 94, 120, 12, 12177, 77, 275, 262, 12114, 12222, 12116, 12102, 12242, 216, 330, 143, 12271, 11948, 12251, 12151, 103, 4, 11933, 12223, 161, 118, 12203, 247, 12026, 12258, 310, 12194, 12261, 84, 28, 12142, 77, 12268, 12235, 12182, 12039, 11979, 12048, 12261, 12184, 11974, 12183, 11994, 42, 12083, 12179, 12144, 132, 12209, 12275, 3, 66, 138, 11, 12172, 12189, 45, 144, 12125, 78, 129, 37, 12118, 20, 12085, 247, 189, 252, 12211, 28, 31, 12247, 12140, 12013, 12107, 12197, 12180, 91, 12064, 243, 9, 12271, 12232, 12217, 219, 142, 12280, 176, 12036, 153, 12136, 57, 217, 10, 338, 12287, 273, 233, 27, 120, 12204, 12276, 147, 12088, 12248, 12256, 11994, 12081, 12270, 12222, 12239, 12230, 190, 338, 147, 158, 305, 86, 12252, 60, 302, 12220, 346, 141, 12023, 150, 43, 12147, 153, 17, 12084, 12274, 12108, 167, 12012, 146, 12211, 12226, 12256, 14, 37, 12146, 129, 109, 170, 12031, 153, 70, 60, 9, 11895, 11989, 12106, 49, 134, 12071, 21, 100, 12265, 335, 7, 67, 12099, 188, 52, 12221, 329, 12086, 12179, 399, 10, 139, 12069, 12085, 12269, 150, 12139, 12209, 12020, 253, 12285, 42, 12201, 12203, 12182, 234, 12235]
        // forgefmt: disable-next-line
        uint256[32] memory tmp_s2 = [21144185475908384251291848127658451840118668397120687346685347800276108181618, 178454524157596204083198831737579244400720412848618379921769757194428219458, 86578471827589046202171357245160750480897959197291238936653154487434030789, 784480743821377177934339092951575843300033553278216791444403021043486961575, 353699434701364706443627805959334892166508764041347923784496399286200041538, 72451869138847781661426646120114564018595725986978280352449638557032579498, 21435393038376763921101062668192245393782476009562964970873611640580267519800, 705986116237663506800642617894538221512608370891034550795081818517362, 65376285084408461502234689381573972459125513396366082569016217541041663584, 21679541053220905904510927288790386269175132850042252274547753174760158670843, 21324400663297068481399047979935312225696838775103987934813424263511810834699, 289763376971620586415263245947844816210046230546701258788327344957764939717, 40967283582068681957600723598741436509851332224180615120829315268242768168, 21461893295895327037059181441182965013902520383783813647355113579862887247793, 21325848039999466570360550438977118240390570864280934984247172328693515354234, 21294043552704368897087468350576426571962272752582902692954825892179403079794, 21677450012801568230193684183601572885002230860212020797824047436198366949365, 21638907129448153283707022089913338473147322115786649879543261589555176746777, 196122100186924282937302047441332183757025956565304475294897769263487856406, 392569234357523206882608241763500232207840004647588738054276481672500686712, 252668027134643210375492535292333694292614581387624982648349668379704819991, 21544941470533809535997047481859823358278023483462962355682885339669404069871, 21191892152908081918989650988263359404184056429060781812756326363070358368229, 21423024542688818504918374823577453817908203518144309997034914444964200120362, 21391541288105394766038619046271188994221001023418561644664913323972632838222, 21442460107973636616796391997122174347769757548224653885574465252287531200421, 21191894121096905079400801662571023638728816084051531488502262713233335451705, 611658535085829530731475531678956174590070939351233092540783592313493270321, 21654807243255145882064710151321498018289106530071115115589225714940500181133, 236758832697884990590162108098319256018384768742313014172961613048701059086, 17679232676729902387956827993227407334162514609488906570077505897914248999, 21617380151202513115664190491258036018727194956731358697115782406707217760395];
        uint256[] memory s2 = new uint256[](32);
        for (uint256 i = 0; i < 32; i++) {
            s2[i] = tmp_s2[i];
        }
        // message = "Practical security on the chain."
        // salt = "\x14\x30\x45\xd7\x91\xcc\x85\xef\xf5\xb2\x19\x32\xf2\x38\x61\xbc\xf2\x3a\x52\xb5\xda\x67\xea\xf7\xba\xae\x0f\x5f\xb1\x36\x9d\xb7\x8f\x3a\xc4\x5f\x8c\x4a\xc5\x67"
        // hash to point
        // forgefmt: disable-next-line
        uint256[512] memory _hashed = [uint256(2001), 4144, 1500, 3124, 3237, 11284, 6361, 11972, 4861, 2149, 4700, 11459, 7374, 7579, 2082, 9404, 222, 5962, 1001, 7636, 5535, 1133, 10827, 2248, 6517, 11659, 4483, 7461, 392, 2503, 2848, 6021, 11376, 5062, 9961, 12226, 9397, 11442, 10118, 9561, 2250, 11768, 6554, 6029, 2114, 329, 9964, 8305, 4433, 6202, 6321, 6491, 6667, 11471, 8037, 11687, 11142, 2124, 8929, 1048, 5947, 7825, 7503, 6867, 1392, 439, 5180, 9640, 2236, 4759, 8414, 2054, 10176, 945, 3584, 2068, 9237, 5775, 7108, 5921, 5528, 11604, 11794, 7995, 1347, 4876, 11886, 6598, 2814, 9587, 9865, 7873, 121, 11895, 7447, 8742, 12102, 2687, 7194, 4888, 1472, 4337, 1232, 1432, 431, 2804, 3886, 6138, 7303, 5695, 3138, 12146, 8269, 8342, 7676, 10919, 862, 9558, 8004, 1355, 1046, 368, 1422, 1077, 12144, 11093, 4984, 6246, 3386, 8295, 4436, 8001, 1752, 3872, 12227, 9125, 1836, 11234, 498, 3798, 7577, 9156, 5659, 3521, 5411, 6888, 4789, 7974, 11461, 10922, 10028, 4424, 8915, 4436, 1305, 9822, 3936, 8103, 4168, 11203, 971, 7744, 5438, 7075, 2979, 5186, 4183, 1913, 6356, 10, 7870, 9329, 452, 3152, 6617, 11274, 10551, 7251, 4882, 5097, 11071, 5083, 1113, 10605, 7510, 1073, 2978, 9194, 5376, 8521, 11421, 3382, 2041, 6801, 4206, 6739, 11646, 8674, 5586, 7662, 10756, 8649, 7459, 7075, 10013, 10666, 2823, 9853, 10204, 6888, 4565, 10319, 5506, 12021, 9795, 7837, 1428, 3215, 2603, 6260, 7761, 4425, 6213, 5473, 10958, 1350, 1390, 10676, 5168, 9207, 2177, 4325, 11482, 11616, 68, 8073, 4837, 930, 10721, 5866, 4737, 4604, 5616, 9935, 5923, 2613, 7549, 2695, 10251, 948, 3923, 6422, 11518, 3871, 2532, 3792, 10707, 11292, 4912, 11685, 9536, 8066, 7786, 8917, 2889, 3934, 3638, 7040, 3683, 8560, 1497, 10442, 7426, 7209, 576, 6745, 9092, 11949, 12065, 8591, 5500, 2438, 1450, 7243, 1546, 533, 8576, 7606, 6815, 12151, 11817, 10170, 3596, 11503, 4265, 4332, 8446, 8429, 2711, 8176, 4944, 9569, 2943, 602, 5933, 2624, 7507, 818, 2812, 2945, 9885, 3561, 5501, 6182, 1487, 2095, 1276, 474, 465, 3837, 10301, 2513, 5545, 3518, 2840, 2795, 9385, 691, 11066, 5513, 2918, 4577, 9954, 1178, 4072, 11882, 105, 10189, 5767, 844, 5467, 2101, 2757, 11241, 8659, 4330, 4693, 11502, 8022, 8842, 3893, 11939, 10588, 5984, 4685, 7519, 5653, 4788, 11393, 7030, 1629, 7477, 6839, 2927, 11843, 7043, 9225, 7196, 1294, 1699, 5048, 9580, 6085, 11220, 8409, 4679, 3816, 9719, 1169, 12220, 2052, 10873, 8497, 5300, 238, 1817, 10553, 10359, 3899, 5218, 7183, 546, 119, 4915, 3115, 1278, 2344, 6877, 10949, 4209, 7543, 8830, 7670, 6597, 8878, 11121, 6945, 10381, 9758, 2956, 2004, 5521, 4685, 9827, 4627, 9407, 3560, 2793, 3428, 5019, 8332, 5086, 7426, 4640, 7434, 11898, 6666, 6803, 7890, 619, 11010, 1874, 5999, 3742, 62, 2552, 10636, 313, 1927, 11999, 9203, 12213, 8062, 7809, 11031, 10756, 11771, 1344, 7765, 80, 1126, 1903, 8013, 9378, 431, 10553, 1636, 7270, 211, 5310, 2430, 662, 5026, 5297, 9719, 3496, 8534, 11999, 5615, 649, 4232, 1297, 3045, 9335, 738, 5235, 11176, 7254, 3975, 4344, 11919, 5452, 6634, 2507, 5109, 636, 8101, 8855, 0, 4329, 8443, 11701, 2750, 7016, 10320, 4863, 3947, 4271, 4096, 6869, 7455, 11285, 241, 2124, 6313, 7363, 4265, 3420, 11632, 2009, 10304, 7116];
        uint256[] memory hashed = new uint256[](512);
        for (uint256 i = 0; i < 512; i++) {
            hashed[i] = _hashed[i];
        }
        bool result = falcon_core(s2, pkc, hashed);
        assertEq(true, result);
    }
}
