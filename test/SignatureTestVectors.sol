// code generated using pythonref/generate_signature_test_vectors.py.
pragma solidity ^0.8.13;

import {Test} from "forge-std/Test.sol";
import {ETHFalcon} from "../src/ETHFalcon_Recursive.sol";

contract SignatureTestVectors is Test {
    int256 constant q = 12289;
    ETHFalcon falcon;

    function setUp() public {
        falcon = new ETHFalcon();
    }

    function testVector0() public view {
        // public key
        // forgefmt: disable-next-line
        uint[512] memory tmp_pk = [uint(8494), 9875,5391,1879,708,7214,6161,7426,130,4397,5498,8631,2407,9977,1931,7029,2352,991,9225,9158,8285,955,12093,4942,2664,778,3383,11334,11105,10565,3474,7022,2706,1183,6455,1113,1385,4181,5984,1364,6193,7574,2703,11943,2783,9363,10213,6442,10177,6408,8584,2766,1171,7190,253,3679,2625,7796,8043,5703,2065,459,1063,5107,475,7421,2950,1363,9991,2222,1222,2148,12181,10486,7239,2220,8612,10147,11233,10557,3816,7607,2043,9737,1487,6402,7156,4425,11155,8706,2669,9984,4688,8809,3126,5346,8576,11683,12012,2541,7468,3700,12043,6636,274,7905,1637,11874,8091,6388,2132,3454,5363,11278,8138,4104,3664,6955,7423,9252,5243,717,9654,11089,2662,5813,2725,3997,7882,8147,1972,5360,9958,6537,9866,1837,9724,2515,6909,11077,7382,8940,10578,66,991,11249,12078,5661,297,4236,5240,10615,8894,6752,1599,8903,4789,8794,721,143,708,3893,9853,10975,12240,4519,3983,9215,420,8767,11835,10220,3914,10930,3539,11989,4395,2901,1427,7668,5489,4941,6674,12249,5831,3530,12171,10261,775,894,11564,5706,3810,11670,9294,9899,5872,9997,9218,8757,7970,11087,3323,4779,9473,12172,9576,2989,1404,11193,376,7670,9520,11007,10252,55,8952,3523,8081,2097,6848,11377,6165,5777,12044,12000,8941,1892,8951,4426,8954,9118,4116,7340,10060,9311,7351,11995,9476,6246,2151,1574,4104,12141,880,3709,2410,8871,1771,8281,11433,8802,5517,7260,8932,2340,11134,8858,1110,2811,6777,10364,9649,7387,1996,6561,7065,2190,12094,11677,10503,2145,11418,10041,9467,109,5395,5299,7200,11203,3966,6117,1065,3458,5521,12182,6969,1134,7108,648,285,8703,100,12113,6653,7377,6804,1717,9467,10055,4009,3545,7482,28,4253,47,12043,7057,1286,10754,3347,3280,3738,3323,7715,6500,350,12245,11148,1705,6450,336,2873,176,9059,2491,7546,2877,7417,9768,2526,2893,551,9462,1754,3452,7819,10010,844,4087,8473,5019,9155,12253,8338,10746,6837,9485,7469,4277,8497,10631,2810,5104,5895,7050,298,1144,3489,7210,11509,4913,7844,1396,9705,11371,1646,3089,7918,12187,6710,106,6810,3783,9423,180,3100,228,6112,9775,3407,10474,3340,232,11654,454,2551,6891,10879,2473,6594,9791,6870,5661,5877,8893,3075,4752,1135,3859,2495,5101,1384,5825,5539,1734,4694,7444,8731,4653,7432,7238,9267,1719,9790,6698,6049,2948,4962,8614,2381,2866,6384,11786,775,4155,7072,9670,2011,4684,6722,1077,7784,7614,217,90,9505,4379,1799,1159,6056,11386,5041,3383,102,12112,9520,8228,9636,668,210,4688,3381,2281,2261,11425,7820,2252,9565,7195,8650,7037,11164,9071,1220,1974,6262,8288,4926,1069,206,7288,4139,4020,728,10582,10621,4568,5054,9984,6837,236,7164,9106,9007,3765,700,4173,1524,11782,6690,9860,2926,538,11340,6889,10459,7255,7705,6244,10579,7541,10909,11397,9092,115,2610,5294,10509,3454,4985,2496];
        uint256[] memory pk = new uint256[](512);
        for (uint256 i = 0; i < 512; i++) {
            pk[i] = tmp_pk[i];
        }
        // signature s1
        // forgefmt: disable-next-line
        int[512] memory tmp_s1 = [int(12138), 12261,286,12196,434,12245,96,12063,12028,12286,12009,12180,11924,11928,12048,12061,238,165,127,12148,132,130,12173,12154,12249,265,407,11991,12213,12236,12112,12107,12252,12004,12222,150,12213,221,12181,114,12,32,78,12283,12153,62,12175,12236,261,175,12246,95,12172,12280,273,361,309,12151,12222,219,11972,135,56,86,38,12284,145,11926,12241,61,12121,70,12237,12187,244,170,230,12231,12249,12203,12217,306,12146,278,12200,9,12057,12220,12136,90,12248,12012,36,202,12239,185,275,12,19,246,66,11889,311,12262,12117,12090,229,96,40,167,32,12149,92,12237,12198,12178,271,301,11996,12109,180,12258,71,12281,24,12093,12180,247,12242,187,12053,354,12174,12255,12246,101,157,12148,11871,4,177,12141,11630,11,12131,53,12048,75,27,36,44,138,243,12184,12282,192,12231,12200,12124,47,55,11996,12254,179,12194,12083,68,12178,18,207,12287,15,86,12125,12203,160,12188,12108,82,12268,12279,109,54,12049,12174,37,12258,63,35,12139,11905,12235,273,12128,394,12262,78,135,12152,12173,11855,12253,12186,12229,12141,12129,12279,12118,16,12286,12043,12079,12274,12038,227,12006,12230,17,12287,39,97,12279,12183,200,218,220,18,12224,12212,369,12133,20,24,5,12181,12198,9,12230,38,12188,110,136,12116,58,12248,126,12271,339,12156,108,201,12277,154,53,12268,114,36,100,12261,12130,59,11968,170,12225,12060,84,123,66,12278,109,31,335,188,91,28,11876,91,134,133,12168,221,12218,12146,12200,12207,52,12243,59,12278,12257,82,235,12176,12270,464,30,39,12272,32,276,12141,12021,88,273,12227,12287,31,12148,156,39,12234,439,186,12058,11974,12146,12145,0,12206,11872,20,21,28,117,12159,12238,12115,8,12017,99,89,211,61,383,12287,245,12285,336,160,11990,12281,74,162,283,355,12189,12267,12212,262,12166,221,12208,12064,12157,78,384,94,158,199,67,12146,12196,12089,49,12054,12169,11,12255,12252,12249,12197,300,123,184,12094,14,12270,154,79,12235,12267,109,12260,12142,201,11990,24,179,61,12218,96,12046,12115,12168,194,197,12220,11945,297,152,11985,42,12155,206,12129,12205,71,364,12223,47,11951,239,12159,12168,166,188,42,107,12123,178,70,12169,278,82,77,12268,12174,12281,12091,69,175,26,74,12086,11995,185,147,12287,130,11937,142,3,213,12114,12099,37,12125,76,12042,340,11908,11962,111,12261,12193,96,0,12182,155,12245,12267,12271,6,12128,36,11908,112,11936,108,12003,12072,11933,12128,152,11781,12108,12080,51,11868,12219,12130,12188,119,12164,240,257,12240,86,12237,12190,12127,79,122,12238,12276,12134,12190,12215,12121,107,174,12157,12083,156,155,12060,11,43,5,184,12283,114];
        ETHFalcon.Signature memory sig;
        sig.s1 = new int256[](512);
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
        }
        // signature s1 inverse
        // forgefmt: disable-next-line
        int[512] memory tmp_s1_inv = [int(2966), 11963,4867,12057,1815,3581,7710,589,10423,1075,10402,8789,11101,11513,2387,6816,9592,9798,10410,340,5869,7218,8155,4017,5918,1588,2906,1561,11980,4213,5573,1336,415,1913,8815,3039,6190,4345,9550,7697,7398,8470,6510,12139,313,2118,3064,11254,9862,12227,2878,7391,9463,8418,1007,11555,7442,3272,578,411,485,6291,6300,4965,6195,6254,11785,3808,9616,11116,5484,9133,4268,10184,3819,7448,8241,1829,9380,2146,11509,3268,11167,5462,6125,1079,3777,992,11990,7273,9597,770,11970,7350,887,5881,3998,11714,10578,116,6341,5913,3234,4626,8089,10625,5799,1537,8524,7168,5413,9679,2265,4831,4912,418,7331,3606,6622,8829,662,198,2133,149,3399,2908,8363,3361,9806,196,1792,9544,1593,3839,7625,1078,8587,5035,1121,11814,11251,9678,1383,4074,11637,8203,7330,12236,12008,2178,4582,10050,6055,7676,4738,3179,2361,9366,5678,4634,6084,4247,6327,11782,459,439,1335,4618,7552,986,408,1191,663,3875,11321,2156,12004,4145,3903,1382,4888,9724,11887,4001,6863,1339,9567,7814,8605,7561,6994,11026,10151,11001,12155,11269,2681,10554,7603,294,4899,3498,6988,9015,2739,8863,5970,1082,10780,9311,8823,5193,12198,8165,7857,3845,11262,10824,8460,9087,3491,11568,305,8474,7640,8785,12031,4940,3976,4533,9632,10021,1473,3280,5610,7695,3686,7936,1926,10372,11370,7128,9951,8812,11517,3642,10163,298,9389,10717,8377,5174,7069,7019,8840,1774,5182,158,1168,1074,4327,1405,7001,11309,5040,1060,516,2269,3410,3098,7352,12114,8307,2750,11491,10510,1467,9585,5152,5708,1507,714,7169,1503,8232,12111,3881,8585,2860,7616,2300,893,10000,2705,1295,6191,7860,11691,287,3688,9838,11217,6035,2373,7470,8033,8817,2543,9910,7498,11908,4079,5480,7484,11708,5341,6962,2636,10217,9644,9659,7127,11869,5940,3206,2224,11358,7090,6301,3775,4521,1437,10032,8556,260,2496,6003,7019,11301,8853,4187,6389,1013,7014,6935,4970,5453,5038,1202,915,6823,957,3694,4515,7831,9688,710,693,6042,1460,11033,8368,8899,279,7964,5426,5109,7408,6348,4354,2489,7806,11804,9521,5966,3740,12005,5775,5135,8208,3402,5473,5106,4669,4716,2795,4754,7561,9963,6591,1546,8025,2465,537,12098,431,7309,226,1202,5558,9096,10161,4345,3507,2434,4168,3846,823,10961,448,575,8518,5314,4145,2468,6005,1424,3588,3948,394,2143,5631,9542,4326,3238,6965,5936,7601,6863,6714,6572,4882,2382,5484,4315,5082,2740,10857,4002,7349,10242,6052,2189,8026,8362,7967,4823,3336,6929,2818,1851,11352,9144,12092,7377,8404,4119,4487,10360,9990,11786,3542,12026,2660,7035,5808,3569,260,3462,9451,12212,3043,7766,8701,4967,11053,10403,5534,8728,7871,1357,1144,7957,2311,8885,2432,1744,1596,9252,71,3150,5417,2280,9340,10498,12136,9076,6604,1433,9990,4767,8074,8255,6046,5436,6644,3008,11240,10401,2736,3462,1745];
    // message
        bytes memory message = "My name is Renaud";
        // salt and message hack because of Tetration confusion
        sig.salt = message;
        message =
            "\x42\x85\x0c\xc7\x80\xd7\xde\xa3\x20\x0d\x18\x59\x43\x39\x7d\xc6\x3f\x66\x65\xef\xda\xc6\x81\x40\x35\xe7\x91\xc9\xdf\x0d\x37\x84\x69\xe5\x68\xbd\xba\x8d\xf8\x7b";
        falcon.verify(message, sig, pk);
    }

    function testVector1() public view {
        // public key
        // forgefmt: disable-next-line
        uint[512] memory tmp_pk = [uint(8494), 9875,5391,1879,708,7214,6161,7426,130,4397,5498,8631,2407,9977,1931,7029,2352,991,9225,9158,8285,955,12093,4942,2664,778,3383,11334,11105,10565,3474,7022,2706,1183,6455,1113,1385,4181,5984,1364,6193,7574,2703,11943,2783,9363,10213,6442,10177,6408,8584,2766,1171,7190,253,3679,2625,7796,8043,5703,2065,459,1063,5107,475,7421,2950,1363,9991,2222,1222,2148,12181,10486,7239,2220,8612,10147,11233,10557,3816,7607,2043,9737,1487,6402,7156,4425,11155,8706,2669,9984,4688,8809,3126,5346,8576,11683,12012,2541,7468,3700,12043,6636,274,7905,1637,11874,8091,6388,2132,3454,5363,11278,8138,4104,3664,6955,7423,9252,5243,717,9654,11089,2662,5813,2725,3997,7882,8147,1972,5360,9958,6537,9866,1837,9724,2515,6909,11077,7382,8940,10578,66,991,11249,12078,5661,297,4236,5240,10615,8894,6752,1599,8903,4789,8794,721,143,708,3893,9853,10975,12240,4519,3983,9215,420,8767,11835,10220,3914,10930,3539,11989,4395,2901,1427,7668,5489,4941,6674,12249,5831,3530,12171,10261,775,894,11564,5706,3810,11670,9294,9899,5872,9997,9218,8757,7970,11087,3323,4779,9473,12172,9576,2989,1404,11193,376,7670,9520,11007,10252,55,8952,3523,8081,2097,6848,11377,6165,5777,12044,12000,8941,1892,8951,4426,8954,9118,4116,7340,10060,9311,7351,11995,9476,6246,2151,1574,4104,12141,880,3709,2410,8871,1771,8281,11433,8802,5517,7260,8932,2340,11134,8858,1110,2811,6777,10364,9649,7387,1996,6561,7065,2190,12094,11677,10503,2145,11418,10041,9467,109,5395,5299,7200,11203,3966,6117,1065,3458,5521,12182,6969,1134,7108,648,285,8703,100,12113,6653,7377,6804,1717,9467,10055,4009,3545,7482,28,4253,47,12043,7057,1286,10754,3347,3280,3738,3323,7715,6500,350,12245,11148,1705,6450,336,2873,176,9059,2491,7546,2877,7417,9768,2526,2893,551,9462,1754,3452,7819,10010,844,4087,8473,5019,9155,12253,8338,10746,6837,9485,7469,4277,8497,10631,2810,5104,5895,7050,298,1144,3489,7210,11509,4913,7844,1396,9705,11371,1646,3089,7918,12187,6710,106,6810,3783,9423,180,3100,228,6112,9775,3407,10474,3340,232,11654,454,2551,6891,10879,2473,6594,9791,6870,5661,5877,8893,3075,4752,1135,3859,2495,5101,1384,5825,5539,1734,4694,7444,8731,4653,7432,7238,9267,1719,9790,6698,6049,2948,4962,8614,2381,2866,6384,11786,775,4155,7072,9670,2011,4684,6722,1077,7784,7614,217,90,9505,4379,1799,1159,6056,11386,5041,3383,102,12112,9520,8228,9636,668,210,4688,3381,2281,2261,11425,7820,2252,9565,7195,8650,7037,11164,9071,1220,1974,6262,8288,4926,1069,206,7288,4139,4020,728,10582,10621,4568,5054,9984,6837,236,7164,9106,9007,3765,700,4173,1524,11782,6690,9860,2926,538,11340,6889,10459,7255,7705,6244,10579,7541,10909,11397,9092,115,2610,5294,10509,3454,4985,2496];
        uint256[] memory pk = new uint256[](512);
        for (uint256 i = 0; i < 512; i++) {
            pk[i] = tmp_pk[i];
        }
        // signature s1
        // forgefmt: disable-next-line
        int[512] memory tmp_s1 = [int(307), 56,343,12086,12215,191,341,298,12229,277,72,276,12023,12283,12126,227,20,12169,12042,11992,188,104,12279,12111,12225,34,12032,12172,12258,145,12206,153,12284,43,12255,12201,284,48,11883,12067,12195,43,318,77,185,12195,11950,235,70,97,12012,93,12203,12153,12284,12134,39,12240,12247,12244,66,12269,92,0,58,12245,12170,12171,12234,12089,12287,12147,112,9,12190,12201,60,12223,1,12267,12036,33,12181,87,12262,110,198,220,12275,12082,108,12003,12093,47,171,417,12273,12116,135,12267,12225,3,192,251,91,45,68,255,205,179,12039,12281,12278,109,140,12192,146,12125,64,12200,67,12147,12075,262,12000,12120,56,101,12217,98,12086,12121,12207,119,12265,12097,12279,213,11772,2,12036,132,11922,226,4,373,182,12161,62,12232,154,12168,12185,102,11979,10,12023,12211,175,12149,12136,49,12263,322,12095,12242,99,192,12207,11989,12277,12266,12181,166,36,63,19,12226,416,12240,137,52,8,11954,12258,12181,12266,207,12181,12192,12245,137,212,12260,17,12185,121,12261,120,164,12111,11999,12246,12089,12130,122,12259,12192,12260,12216,12037,12138,12043,12193,12176,12105,12277,12278,12221,127,191,118,126,12157,12264,212,123,12255,222,12158,354,31,153,12184,12153,12130,10,147,266,149,12105,91,12048,83,57,12092,12260,163,12144,12147,12287,108,12171,224,249,12149,104,12224,138,12269,275,12182,357,12283,35,42,12135,28,11972,144,12129,32,12256,12123,12109,12235,85,12265,12178,12164,12223,12112,55,283,88,12160,129,245,66,11978,31,12102,273,77,237,157,12156,12260,68,290,127,11949,12280,12186,187,29,12171,104,96,129,109,277,12194,11944,112,72,99,126,12275,12085,12213,12237,12259,12268,59,113,12230,227,66,12155,12268,181,12224,80,306,75,53,60,112,12151,12286,223,93,12239,11998,12217,12098,21,96,193,293,165,12088,12198,12109,206,227,213,316,127,107,12165,28,12211,12254,119,12087,6,73,17,63,12264,12040,331,12203,184,150,12210,7,12159,122,198,261,43,11714,74,52,12264,448,12270,11975,12110,12266,12111,12186,12210,15,12263,12131,12204,167,12158,12031,12154,142,347,12211,65,11983,12034,35,100,96,110,209,12211,233,72,12087,12158,12144,12249,61,44,12121,12190,12038,12147,12288,23,10,157,12271,66,285,91,12233,12201,112,265,48,25,12150,12006,12139,12238,145,99,12229,76,102,11928,11966,12251,12278,184,12205,290,86,12082,33,12195,110,12007,12239,172,53,12022,17,12244,102,165,102,12261,12270,12244,12239,119,12229,54,18,12250,12227,12261,137,12260,12116,239,255,12121,12236,12267,67,12260,12158,12257,12111,341,12245,12156,262,35,12028,29,403,12157,12259,75,76,12119,12189,331];
        ETHFalcon.Signature memory sig;
        sig.s1 = new int256[](512);
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
        }
        // signature s1 inverse
        // forgefmt: disable-next-line
        int[512] memory tmp_s1_inv = [int(4231), 9355,1487,8165,245,9697,10727,4081,6998,5026,5136,8832,5563,6737,8993,8550,171,2120,2257,11536,690,9264,10150,3098,6014,8778,6494,12150,2872,7383,6494,8632,521,6741,7589,2556,6917,1870,11013,3920,10103,11877,12087,4416,3799,11937,8508,3798,778,4267,1317,6059,6074,10428,10147,12108,2441,969,734,4424,5539,8029,3884,11203,7258,5198,4160,2006,6550,267,5265,11475,3276,9444,7990,7604,598,10618,9666,8723,8411,894,4040,5348,1235,3165,7963,1994,698,3872,7650,585,9605,4622,12169,5684,3948,1406,8445,9287,3248,65,2183,1781,8303,10442,3601,11462,5980,8065,1532,74,6023,5700,7151,2541,4217,165,4120,11577,11762,5673,4602,91,453,9703,9759,7787,1199,10560,435,9949,3455,181,442,4710,2380,1885,3878,7734,4754,5579,5977,11569,10934,10848,9373,3706,53,1763,2636,10977,3711,10543,7712,241,7217,3856,6840,9437,843,10491,2418,3901,5719,4499,5890,4091,6118,5377,6179,7758,4171,698,1933,10337,4366,9419,547,10797,4981,455,10972,391,7567,11598,8592,10509,7210,3577,8216,2255,11391,911,8784,4447,6604,882,2450,300,5042,2935,943,12190,5185,4542,517,9007,9312,1468,8145,9163,8538,2487,3051,1189,1067,2410,9322,9221,4284,8438,3505,366,11752,12031,5362,10082,4545,11308,3730,6444,4753,11764,10188,3190,230,10242,9695,7157,3268,6424,10157,9034,5270,9271,6821,2313,9935,2305,10464,1878,640,5015,5619,7275,2252,1742,3156,3112,8133,2222,2532,11889,9713,11951,9207,2683,4235,2966,6598,3544,6891,1569,3187,5667,7924,10340,11022,196,4258,7043,1165,5970,4380,10595,4995,1307,8619,5470,5780,7679,4929,11468,5873,12165,11171,7313,593,107,11489,11008,8844,11781,3860,3334,6849,2437,256,8524,11339,10619,3735,527,2309,9829,5950,7487,9793,779,3232,6105,8876,7192,8545,6976,4962,10923,12166,1072,930,4556,10519,2930,1754,935,8132,6928,11169,5532,2008,6105,2721,4616,337,3713,5584,3888,2234,2980,1546,2489,10140,10232,12106,9123,3986,11678,2159,3985,5543,6866,11135,2683,11215,5051,10267,9960,6793,7930,6172,7909,9365,3410,10330,8163,7080,9640,12267,8829,3645,5575,9663,11398,11920,6614,5634,678,7874,9733,10306,3541,1871,11338,6409,11266,8262,9124,1576,5969,72,11767,6850,11633,1133,10201,12148,4035,6970,7354,10288,4059,3541,1743,10272,9220,7796,353,5532,9285,10767,899,9913,11056,4886,359,3692,4379,5486,1373,5203,9513,10993,4291,438,3229,10960,9320,8959,1203,11900,9745,4565,11073,5747,8158,9604,8788,3362,2315,4898,7311,2792,11399,6250,11409,10667,4456,946,11724,10336,11026,9810,8272,10004,4228,227,10338,1441,5547,8784,8163,3127,5304,1956,6683,10803,4411,1742,10043,4525,2636,5463,10721,10864,5779,6513,5465,101,3982,8891,3767,420,7148,109,3018,121,8903,10993,5032,6701,2197,502,9567,10648,2387,12268,4538,706,3455,2866,8884];
    // message
        bytes memory message = "My name is Simon";
        // salt and message hack because of Tetration confusion
        sig.salt = message;
        message =
            "\x42\x85\x0c\xc7\x80\xd7\xde\xa3\x20\x0d\x18\x59\x43\x39\x7d\xc6\x3f\x66\x65\xef\xda\xc6\x81\x40\x35\xe7\x91\xc9\xdf\x0d\x37\x84\x69\xe5\x68\xbd\xba\x8d\xf8\x7b";
        falcon.verify(message, sig, pk);
    }

    function testVector2() public view {
        // public key
        // forgefmt: disable-next-line
        uint[512] memory tmp_pk = [uint(8494), 9875,5391,1879,708,7214,6161,7426,130,4397,5498,8631,2407,9977,1931,7029,2352,991,9225,9158,8285,955,12093,4942,2664,778,3383,11334,11105,10565,3474,7022,2706,1183,6455,1113,1385,4181,5984,1364,6193,7574,2703,11943,2783,9363,10213,6442,10177,6408,8584,2766,1171,7190,253,3679,2625,7796,8043,5703,2065,459,1063,5107,475,7421,2950,1363,9991,2222,1222,2148,12181,10486,7239,2220,8612,10147,11233,10557,3816,7607,2043,9737,1487,6402,7156,4425,11155,8706,2669,9984,4688,8809,3126,5346,8576,11683,12012,2541,7468,3700,12043,6636,274,7905,1637,11874,8091,6388,2132,3454,5363,11278,8138,4104,3664,6955,7423,9252,5243,717,9654,11089,2662,5813,2725,3997,7882,8147,1972,5360,9958,6537,9866,1837,9724,2515,6909,11077,7382,8940,10578,66,991,11249,12078,5661,297,4236,5240,10615,8894,6752,1599,8903,4789,8794,721,143,708,3893,9853,10975,12240,4519,3983,9215,420,8767,11835,10220,3914,10930,3539,11989,4395,2901,1427,7668,5489,4941,6674,12249,5831,3530,12171,10261,775,894,11564,5706,3810,11670,9294,9899,5872,9997,9218,8757,7970,11087,3323,4779,9473,12172,9576,2989,1404,11193,376,7670,9520,11007,10252,55,8952,3523,8081,2097,6848,11377,6165,5777,12044,12000,8941,1892,8951,4426,8954,9118,4116,7340,10060,9311,7351,11995,9476,6246,2151,1574,4104,12141,880,3709,2410,8871,1771,8281,11433,8802,5517,7260,8932,2340,11134,8858,1110,2811,6777,10364,9649,7387,1996,6561,7065,2190,12094,11677,10503,2145,11418,10041,9467,109,5395,5299,7200,11203,3966,6117,1065,3458,5521,12182,6969,1134,7108,648,285,8703,100,12113,6653,7377,6804,1717,9467,10055,4009,3545,7482,28,4253,47,12043,7057,1286,10754,3347,3280,3738,3323,7715,6500,350,12245,11148,1705,6450,336,2873,176,9059,2491,7546,2877,7417,9768,2526,2893,551,9462,1754,3452,7819,10010,844,4087,8473,5019,9155,12253,8338,10746,6837,9485,7469,4277,8497,10631,2810,5104,5895,7050,298,1144,3489,7210,11509,4913,7844,1396,9705,11371,1646,3089,7918,12187,6710,106,6810,3783,9423,180,3100,228,6112,9775,3407,10474,3340,232,11654,454,2551,6891,10879,2473,6594,9791,6870,5661,5877,8893,3075,4752,1135,3859,2495,5101,1384,5825,5539,1734,4694,7444,8731,4653,7432,7238,9267,1719,9790,6698,6049,2948,4962,8614,2381,2866,6384,11786,775,4155,7072,9670,2011,4684,6722,1077,7784,7614,217,90,9505,4379,1799,1159,6056,11386,5041,3383,102,12112,9520,8228,9636,668,210,4688,3381,2281,2261,11425,7820,2252,9565,7195,8650,7037,11164,9071,1220,1974,6262,8288,4926,1069,206,7288,4139,4020,728,10582,10621,4568,5054,9984,6837,236,7164,9106,9007,3765,700,4173,1524,11782,6690,9860,2926,538,11340,6889,10459,7255,7705,6244,10579,7541,10909,11397,9092,115,2610,5294,10509,3454,4985,2496];
        uint256[] memory pk = new uint256[](512);
        for (uint256 i = 0; i < 512; i++) {
            pk[i] = tmp_pk[i];
        }
        // signature s1
        // forgefmt: disable-next-line
        int[512] memory tmp_s1 = [int(12188), 252,12203,11978,12019,99,12221,12,12224,12272,209,12276,127,12216,78,12106,67,12061,175,12271,76,8,12229,12184,12265,26,134,90,156,12279,12222,425,240,206,156,107,12175,188,12059,78,319,12244,142,77,12267,12277,11946,44,97,169,258,12181,8,12276,12154,393,12051,13,12265,12249,104,12238,180,12282,12268,12172,51,12267,196,103,27,206,191,289,12,143,12267,12188,270,5,43,60,12173,5,77,12214,12146,12029,12109,12285,256,102,12067,308,247,11965,12118,113,85,12054,26,78,12233,147,229,123,117,12081,12219,12235,100,24,12091,104,101,12053,12111,12118,12275,84,12174,20,78,12158,12222,7,12283,12182,136,12275,12219,80,12124,12264,12285,11941,12162,12165,11946,148,35,105,12159,16,70,41,12214,162,11902,12190,111,12014,12140,47,12249,112,12250,24,12248,150,54,20,11958,52,12153,11,12142,145,88,331,5,9,39,25,152,67,11998,12235,2,41,12217,12131,12166,145,171,12199,12226,64,226,260,82,167,11947,92,356,12197,21,12176,145,12249,12236,192,139,12242,258,99,66,12260,148,156,12048,12221,240,85,6,14,12113,268,11924,165,62,12213,64,76,228,16,99,12226,100,192,12123,12224,78,171,12012,75,1,12254,12026,197,11986,12248,88,237,40,73,12150,223,12246,74,152,83,131,14,197,12286,12099,12082,12204,12104,82,1,12202,177,88,78,381,91,308,12107,12157,93,12070,12036,27,12067,12060,12030,12124,12179,12180,206,61,283,12177,83,35,72,18,182,39,79,12225,20,12227,136,12196,51,12126,11928,36,12171,147,12241,12182,12138,41,12215,9,389,12200,12193,64,159,11813,3,12074,345,12210,11944,131,501,12264,12157,94,12191,109,22,12114,12236,12220,12259,12130,12185,74,12048,19,329,12264,11954,25,12234,12082,138,12215,12110,117,12080,12236,76,12130,150,12129,12260,11825,167,141,71,12085,12183,12176,3,92,12255,311,12258,252,12244,12039,12142,177,259,149,50,12262,12276,12011,12108,102,12278,194,12162,54,113,12247,11989,135,2,160,12225,12089,12229,12187,125,12071,12163,137,189,35,56,208,12178,12238,243,100,12243,12069,12154,100,12190,11988,83,12221,227,51,224,14,11806,132,72,283,443,47,146,12249,46,12143,42,160,183,12109,12241,187,12226,108,120,290,194,12263,12163,550,12058,12082,73,12136,12200,12063,118,11874,12255,205,153,12211,23,12154,214,12158,43,203,12123,193,12235,95,154,102,12065,12166,206,12267,12199,12260,12255,11951,7,23,12285,12263,223,59,12144,12284,12081,29,43,195,49,12249,68,221,12240,12038,76,12078,12054,12064,53,12137,51,327,99,12145,12237,83,374,12219,435,247,203,12187,82,12246,366];
        ETHFalcon.Signature memory sig;
        sig.s1 = new int256[](512);
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
        }
        // signature s1 inverse
        // forgefmt: disable-next-line
        int[512] memory tmp_s1_inv = [int(7972), 142,8259,1488,6097,3890,2867,11215,1054,9390,8755,1403,5165,118,3519,1185,560,1704,6689,11331,10897,2478,9192,340,9312,2363,2474,320,2693,11897,7011,9809,10607,10413,7048,4267,4972,1442,3994,10370,11436,11301,2587,8726,8252,1276,10567,5750,10025,4596,5679,93,1630,9737,11085,10096,5885,8214,500,7005,5163,3255,3217,2242,123,2386,6191,2630,8910,2214,5293,10297,7955,673,11485,4185,6219,4548,3206,2975,5326,525,11792,6830,5525,7010,4296,3186,10967,5513,5119,7193,3622,11525,534,10398,1369,7668,8943,10920,8074,9001,8275,5803,11452,9416,8023,7417,1644,9065,1949,10449,4787,280,1213,7655,7678,10276,7474,10810,11011,7206,4171,1738,9718,10716,1663,11912,10206,331,5331,8225,11862,9095,9625,10778,9827,6256,7551,1645,8190,1638,972,9506,7572,10399,8093,8324,6495,3885,10647,1622,1652,1131,484,7242,11492,4642,8565,6373,460,11601,9456,6096,12033,2054,5431,11396,4910,12139,5105,8178,9495,10435,5701,9488,8887,8244,9071,8738,8053,4964,11701,6405,98,6337,7283,3603,75,2916,4447,9880,4919,10816,7372,1135,4174,5248,7424,11547,7774,4310,3966,4180,7200,9047,5655,5139,7487,7663,8184,5903,882,4556,2968,1517,5652,544,8399,12109,10610,9323,2261,7266,2447,8415,3597,2006,2567,196,5261,5520,6555,2893,11681,8687,7358,5245,3752,2996,3477,3378,5309,4715,10630,7354,4576,8949,155,4387,7561,4612,6086,10218,4288,7309,7220,10346,11116,5304,5519,6642,1156,12093,1801,10751,8231,3312,11118,7967,5954,9051,9849,2641,5918,1477,4903,12033,4694,11012,1325,11984,3126,1959,4455,5441,402,2697,10055,8373,11576,557,8591,924,7574,5245,6729,9603,2934,6481,10458,11852,9430,2812,7142,5275,418,11323,10924,10718,9696,6645,8724,9091,9706,10985,8859,12215,9598,8292,6014,3642,6599,10922,6647,1198,7580,4805,1762,9735,220,12163,6229,10649,6262,9138,7884,11549,235,10250,3681,7006,5485,3693,6109,1879,2387,52,273,6420,115,9541,11845,5323,7990,8503,2920,1442,1920,6204,7199,6381,5933,5465,1733,4037,5326,7146,3966,863,11563,1212,7348,6761,9965,4035,228,4660,10515,10381,9785,7603,1501,5783,2397,2280,3280,6923,3397,570,963,10665,10017,6411,3281,11733,1002,11558,5014,7077,11317,12038,2234,1075,2896,1537,10426,1451,274,8631,7208,11119,1436,8634,5185,5898,7284,2154,8191,3480,9585,5957,5258,6032,12129,1126,6016,442,2118,3091,1618,3123,194,7553,9680,137,12283,11944,11351,9749,11425,5169,630,8058,5973,196,5722,7035,6980,11589,3994,5059,5882,6233,7544,10256,8240,8246,3765,11923,4400,1927,5568,4645,5325,7080,9388,495,11632,2029,11340,10037,59,10642,7488,7840,10671,8457,7817,1568,6390,4326,10823,2348,3296,665,4138,3722,2804,3460,10255,2441,11638,11034,12273,7462,11739,12231,3373,10182,7739,4833,10874,4722,11443,9181,459,7080,11062,8974,1699,6877];
    // message
        bytes memory message = "My name is Nicolas";
        // salt and message hack because of Tetration confusion
        sig.salt = message;
        message =
            "\x42\x85\x0c\xc7\x80\xd7\xde\xa3\x20\x0d\x18\x59\x43\x39\x7d\xc6\x3f\x66\x65\xef\xda\xc6\x81\x40\x35\xe7\x91\xc9\xdf\x0d\x37\x84\x69\xe5\x68\xbd\xba\x8d\xf8\x7b";
        falcon.verify(message, sig, pk);
    }

    function testVector3() public view {
        // public key
        // forgefmt: disable-next-line
        uint[512] memory tmp_pk = [uint(8494), 9875,5391,1879,708,7214,6161,7426,130,4397,5498,8631,2407,9977,1931,7029,2352,991,9225,9158,8285,955,12093,4942,2664,778,3383,11334,11105,10565,3474,7022,2706,1183,6455,1113,1385,4181,5984,1364,6193,7574,2703,11943,2783,9363,10213,6442,10177,6408,8584,2766,1171,7190,253,3679,2625,7796,8043,5703,2065,459,1063,5107,475,7421,2950,1363,9991,2222,1222,2148,12181,10486,7239,2220,8612,10147,11233,10557,3816,7607,2043,9737,1487,6402,7156,4425,11155,8706,2669,9984,4688,8809,3126,5346,8576,11683,12012,2541,7468,3700,12043,6636,274,7905,1637,11874,8091,6388,2132,3454,5363,11278,8138,4104,3664,6955,7423,9252,5243,717,9654,11089,2662,5813,2725,3997,7882,8147,1972,5360,9958,6537,9866,1837,9724,2515,6909,11077,7382,8940,10578,66,991,11249,12078,5661,297,4236,5240,10615,8894,6752,1599,8903,4789,8794,721,143,708,3893,9853,10975,12240,4519,3983,9215,420,8767,11835,10220,3914,10930,3539,11989,4395,2901,1427,7668,5489,4941,6674,12249,5831,3530,12171,10261,775,894,11564,5706,3810,11670,9294,9899,5872,9997,9218,8757,7970,11087,3323,4779,9473,12172,9576,2989,1404,11193,376,7670,9520,11007,10252,55,8952,3523,8081,2097,6848,11377,6165,5777,12044,12000,8941,1892,8951,4426,8954,9118,4116,7340,10060,9311,7351,11995,9476,6246,2151,1574,4104,12141,880,3709,2410,8871,1771,8281,11433,8802,5517,7260,8932,2340,11134,8858,1110,2811,6777,10364,9649,7387,1996,6561,7065,2190,12094,11677,10503,2145,11418,10041,9467,109,5395,5299,7200,11203,3966,6117,1065,3458,5521,12182,6969,1134,7108,648,285,8703,100,12113,6653,7377,6804,1717,9467,10055,4009,3545,7482,28,4253,47,12043,7057,1286,10754,3347,3280,3738,3323,7715,6500,350,12245,11148,1705,6450,336,2873,176,9059,2491,7546,2877,7417,9768,2526,2893,551,9462,1754,3452,7819,10010,844,4087,8473,5019,9155,12253,8338,10746,6837,9485,7469,4277,8497,10631,2810,5104,5895,7050,298,1144,3489,7210,11509,4913,7844,1396,9705,11371,1646,3089,7918,12187,6710,106,6810,3783,9423,180,3100,228,6112,9775,3407,10474,3340,232,11654,454,2551,6891,10879,2473,6594,9791,6870,5661,5877,8893,3075,4752,1135,3859,2495,5101,1384,5825,5539,1734,4694,7444,8731,4653,7432,7238,9267,1719,9790,6698,6049,2948,4962,8614,2381,2866,6384,11786,775,4155,7072,9670,2011,4684,6722,1077,7784,7614,217,90,9505,4379,1799,1159,6056,11386,5041,3383,102,12112,9520,8228,9636,668,210,4688,3381,2281,2261,11425,7820,2252,9565,7195,8650,7037,11164,9071,1220,1974,6262,8288,4926,1069,206,7288,4139,4020,728,10582,10621,4568,5054,9984,6837,236,7164,9106,9007,3765,700,4173,1524,11782,6690,9860,2926,538,11340,6889,10459,7255,7705,6244,10579,7541,10909,11397,9092,115,2610,5294,10509,3454,4985,2496];
        uint256[] memory pk = new uint256[](512);
        for (uint256 i = 0; i < 512; i++) {
            pk[i] = tmp_pk[i];
        }
        // signature s1
        // forgefmt: disable-next-line
        int[512] memory tmp_s1 = [int(90), 103,12229,211,44,12215,312,206,12218,12254,26,12160,215,12111,44,201,47,11991,20,12210,12227,281,102,12244,12229,187,12280,12157,11955,12178,12061,12264,151,97,227,12160,12081,133,77,46,12107,147,57,12166,12186,261,12076,86,2,12100,196,217,12087,165,12200,12120,12171,55,5,12268,12057,10,62,12044,12262,12163,12182,17,152,99,12171,16,22,12256,12092,213,12254,11,267,170,176,12238,12135,12126,12263,12055,183,12231,90,161,75,11765,12242,12156,198,12195,12135,18,12213,70,1,12142,62,77,92,12057,11976,226,60,23,245,97,12262,14,212,87,11802,12263,391,12216,12256,74,94,12223,90,23,10,160,110,5,97,193,12257,12234,12075,48,107,301,118,379,12180,48,12173,12077,12153,12169,12266,86,12222,158,245,11854,160,12190,12064,12028,52,12019,12173,302,91,43,12020,83,12167,12260,258,144,12276,12247,12275,101,12141,139,12222,64,12250,158,12107,12118,12014,12132,12266,12217,11890,12271,12239,12088,12238,12134,12187,12234,12149,50,47,12086,108,152,56,12166,11879,92,60,12119,12098,11856,12095,145,68,12195,107,29,170,12033,12230,12114,50,12253,45,12137,12107,12074,12183,55,82,12051,12039,220,98,12039,135,12240,153,35,12256,57,12218,12213,179,12207,145,12281,150,45,5,12189,246,12244,12009,10,11874,364,12020,12177,26,12203,208,12137,12121,315,245,226,12145,12222,80,189,12288,12143,285,12125,12114,219,12164,12234,12106,19,56,12202,118,24,12228,79,55,12000,12162,40,393,161,12055,12106,12171,151,52,160,353,26,12276,69,276,37,196,181,12252,12081,12120,12028,196,11878,184,12130,242,12251,12135,12283,12076,12106,425,12271,124,292,12126,12116,100,96,222,38,13,12097,12280,12042,12058,154,3,208,12273,177,12001,155,246,12196,12152,92,220,49,12219,12278,12046,97,205,11832,156,12272,121,12237,91,12054,68,107,12,132,12276,12193,12043,88,12191,269,68,12094,12179,11998,160,118,12257,192,219,11987,147,12024,71,191,170,11981,130,12280,43,12044,185,12173,12229,12072,13,81,6,12242,99,12287,318,12039,12286,12209,108,13,72,21,12254,103,114,209,12257,57,12084,103,11973,12078,63,12222,12148,122,33,12111,88,12248,12110,12164,40,311,12054,12086,110,107,11939,12202,91,12198,12181,12076,11992,12265,30,8,84,12258,12211,102,12281,12188,12192,252,94,12205,151,358,12243,167,209,15,12130,12231,84,229,12076,544,12148,12268,98,11988,12028,100,12267,251,121,12035,12244,12036,271,137,12195,56,244,255,12017,30,12257,12258,12229,28,12184,12238,52,24,137,363,12145,12149,12256,45,12223,12212,127,272,192,12150,53,12271,66,12051,87,253,12143,12185,91,12229];
        ETHFalcon.Signature memory sig;
        sig.s1 = new int256[](512);
        for (uint256 i = 0; i < 512; i++) {
            sig.s1[i] = tmp_s1[i];
        }
        // signature s1 inverse
        // forgefmt: disable-next-line
        int[512] memory tmp_s1_inv = [int(4020), 8654,4865,2279,9593,3981,4947,3498,6395,625,7081,5673,120,6149,2111,6602,5550,6218,10636,2535,8841,5838,8158,803,12197,9805,11572,6844,3436,11826,7041,6738,9629,7648,2867,1668,7131,2785,3975,8675,1325,7477,11114,11268,9711,8700,2615,11068,9496,4409,2426,2778,6635,7923,5420,11055,9220,6435,2979,6960,10212,6264,119,8409,8234,6874,11128,5203,4030,6390,6920,3816,9944,8281,4365,4221,7344,9003,2023,1625,6584,1425,6917,8547,3174,2712,9429,9603,4789,3366,3526,8160,2283,12269,10568,8602,4797,2473,7977,3067,6962,4179,2222,2717,6867,2069,848,182,1415,3530,8217,7047,1906,9607,5382,8425,2573,9992,10248,253,11792,12191,4656,2554,5126,7042,857,5231,1865,8903,10713,5564,4343,9371,11648,3613,6755,1944,10349,3990,4821,50,7042,6524,7946,3858,10436,10566,9272,6965,7018,5839,5612,2487,7683,1472,9176,6406,1041,6621,2664,8990,5875,6936,2707,6291,7772,6714,1836,5097,8080,9138,6016,10210,6317,2866,11461,1565,2884,6335,3792,7688,6169,3132,2913,7753,3402,7970,8265,6078,4510,12239,1824,775,10862,2343,9084,1741,11615,8587,12055,416,2252,10005,11435,4133,4090,4290,3442,11546,2762,2621,200,7886,2544,6705,9306,7496,9817,7301,2108,7332,4630,3293,6152,7520,6913,3275,6058,11200,6930,4697,9302,10414,2852,10032,7381,6272,8827,10151,7674,5870,6142,11793,11403,9917,1122,6545,1668,6480,11084,2112,1652,3951,9762,2637,2305,11458,11221,4318,423,8779,6536,6100,6819,11115,7294,11836,3189,1443,8403,10303,11842,9587,11748,8888,11539,10897,11048,453,3321,4529,667,5050,581,545,5466,2451,6008,6042,7972,2898,1636,10881,8120,3349,7524,9970,10423,1312,5234,5341,57,10502,2927,4587,8629,5703,4685,10475,4860,1715,6268,8676,360,2497,6037,236,2990,4309,1232,5005,12022,650,7063,6090,11894,7356,6287,6389,5437,9472,11996,7159,3550,6189,1649,10261,464,3012,8190,11646,9767,121,1183,7379,12229,7163,8228,6854,9006,9035,834,3461,867,2546,5673,1070,11120,2572,6560,12286,6585,102,5695,2879,9644,7397,9845,348,7586,2674,6067,11478,4130,7190,3084,399,455,2300,2106,4151,3868,1207,5183,12037,5258,8186,1715,4247,2194,5947,7704,7307,10712,9778,10630,4873,4124,6883,9439,11954,8968,9017,7999,1063,10385,10624,505,9686,9426,10360,6762,10836,8848,6165,1198,40,8073,6712,6755,10109,6117,4692,869,4242,5013,7780,6643,5597,4539,2175,1883,2765,2912,5682,6896,2170,10991,6966,7348,4029,6109,3876,11681,5233,11469,11301,10573,8760,2769,9604,7910,4039,8732,462,5621,7869,7664,9844,8645,3593,4680,11729,8677,2954,5964,11006,9981,6968,6616,12064,12228,8596,1830,7878,2847,3095,4878,8707,12176,5386,700,3995,12174,8292,10825,7914,2680,3309,254,11847,5753,7487,9483,9523,11563,6684,9705,11740,4552,11219,107,6281,11545,6660,3007,4448,2695,3775,2215,7030];
    // message
        bytes memory message = "We are ZKNox";
        // salt and message hack because of Tetration confusion
        sig.salt = message;
        message =
            "\x42\x85\x0c\xc7\x80\xd7\xde\xa3\x20\x0d\x18\x59\x43\x39\x7d\xc6\x3f\x66\x65\xef\xda\xc6\x81\x40\x35\xe7\x91\xc9\xdf\x0d\x37\x84\x69\xe5\x68\xbd\xba\x8d\xf8\x7b";
        falcon.verify(message, sig, pk);
    }
}
